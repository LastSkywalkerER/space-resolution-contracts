{
  "abi": [
    {
      "inputs": [],
      "name": "ERC721AddressZeroIsNotaValidOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApproveCallerIsNotOwnerNorApprovedForAll",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721NotApprovedOrOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToNonReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKApprovalForAssetsToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKBadPriorityListLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKChildAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKChildIndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKEquippableEquipNotAllowedByCatalog",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKIndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKIsNotContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKMaxPendingChildrenReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        }
      ],
      "name": "RMRKMaxRecursiveBurnsReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKMustUnequipFirst",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNestableTooDeep",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNestableTransferToDescendant",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNestableTransferToNonRMRKNestableImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNestableTransferToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNotApprovedForAssetsOrOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNotApprovedOrDirectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNotEquipped",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKPendingChildIndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKSlotAlreadyUsed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKTargetAssetCannotReceiveSlot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKTokenCannotBeEquippedWithAssetIntoSlot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKTokenDoesNotHaveAsset",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKUnexpectedAssetId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKUnexpectedChildId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKUnexpectedNumberOfAssets",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKUnexpectedNumberOfChildren",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "AllChildrenRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAllForAssets",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ApprovalForAssets",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "replacesId",
          "type": "uint64"
        }
      ],
      "name": "AssetAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "replacesId",
          "type": "uint64"
        }
      ],
      "name": "AssetAddedToTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "AssetPrioritySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "AssetRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "AssetSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        }
      ],
      "name": "ChildAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "slotPartId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "childAssetId",
          "type": "uint64"
        }
      ],
      "name": "ChildAssetEquipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "slotPartId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "childAssetId",
          "type": "uint64"
        }
      ],
      "name": "ChildAssetUnequipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        }
      ],
      "name": "ChildProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "fromPending",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "toZero",
          "type": "bool"
        }
      ],
      "name": "ChildTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NestTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "equippableGroupId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "slotPartId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "parentAddress",
          "type": "address"
        }
      ],
      "name": "ValidParentEquippableGroupIdSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "RMRK_INTERFACE",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "acceptAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "childIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        }
      ],
      "name": "acceptChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "addChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approveForAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxChildrenBurns",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "parent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "slotId",
          "type": "uint64"
        }
      ],
      "name": "canTokenBeEquippedWithAssetIntoSlot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "childOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC7401.Child",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        }
      ],
      "name": "childrenOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC7401.Child[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "directOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "childAssetId",
              "type": "uint64"
            }
          ],
          "internalType": "struct IERC6220.IntakeEquip",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "equip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getActiveAssetPriorities",
      "outputs": [
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getActiveAssets",
      "outputs": [
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApprovedForAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "getAssetAndEquippableData",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "getAssetMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "newAssetId",
          "type": "uint64"
        }
      ],
      "name": "getAssetReplacements",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "targetCatalogAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "slotPartId",
          "type": "uint64"
        }
      ],
      "name": "getEquipment",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "childAssetId",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "childEquippableAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC6220.Equipment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPendingAssets",
      "outputs": [
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAllForAssets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        }
      ],
      "name": "isChildEquipped",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "destinationId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "nestTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "pendingChildOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC7401.Child",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        }
      ],
      "name": "pendingChildrenOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC7401.Child[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxRejections",
          "type": "uint256"
        }
      ],
      "name": "rejectAllAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxRejections",
          "type": "uint256"
        }
      ],
      "name": "rejectAllChildren",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "rejectAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAllForAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64[]",
          "name": "priorities",
          "type": "uint64[]"
        }
      ],
      "name": "setPriority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "destinationId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "childIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPending",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "slotPartId",
          "type": "uint64"
        }
      ],
      "name": "unequip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "460:21284:78:-:0;;;;;;;;;;;;-1:-1:-1;1830:1:89;2036:7;:22;460:21284:78;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "460:21284:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3067:321;;;;;;:::i;:::-;;:::i;:::-;;;565:14:98;;558:22;540:41;;528:2;513:18;3067:321:78;;;;;;;;7822:277:88;;;;;;:::i;:::-;;:::i;:::-;;18503:502:78;;;;;;:::i;:::-;;:::i;25783:190:88:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3312:32:98;;;3294:51;;3282:2;3267:18;25783:190:88;3148:203:98;25140:353:88;;;;;;:::i;:::-;;:::i;2785:193:85:-;;;;;;:::i;:::-;;:::i;5156:206:78:-;;;;;;:::i;:::-;;:::i;5595:194:88:-;;;;;;:::i;:::-;;:::i;42716:304::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12126:154:78:-;;;;;;:::i;:::-;;:::i;6527:170:88:-;;;;;;:::i;:::-;;:::i;20946:79::-;;;;;;:::i;:::-;;:::i;42454:212::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;19131:399:78:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2131:150:85:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1637:246::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2331:166::-;;;;;;:::i;:::-;;:::i;8700:415:78:-;;;;;;:::i;:::-;;:::i;19922:339:88:-;;;;;;:::i;:::-;;:::i;33313:878::-;;;;;;:::i;:::-;;:::i;42213:190::-;;;;;;:::i;:::-;;:::i;4697:189::-;;;;;;:::i;:::-;;:::i;:::-;;;10101:25:98;;;10089:2;10074:18;4697:189:88;9955:177:98;1933:148:85;;;;;;:::i;:::-;;:::i;19697:243:78:-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19879:20:78;;;:11;:20;;;;;-1:-1:-1;;;;;19879:42:78;;;;;;;;;;-1:-1:-1;;;;;19879:54:78;;;;;;;;;;19872:61;;;;;;;;;;;;;;-1:-1:-1;;;19872:61:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19697:243;;;;;;;10791:13:98;;-1:-1:-1;;;;;10787:22:98;;;10769:41;;10870:4;10858:17;;;10852:24;10848:33;;;10826:20;;;10819:63;10938:4;10926:17;;;10920:24;10898:20;;;10891:54;11005:4;10993:17;;;10987:24;-1:-1:-1;;;;;10983:50:98;10961:20;;;10954:80;;;;10719:3;10704:19;;10529:511;3028:354:85;;;;;;:::i;:::-;;:::i;490:50:76:-;;-1:-1:-1;;;490:50:76;;;;;-1:-1:-1;;;;;;11717:33:98;;;11699:52;;11687:2;11672:18;490:50:76;11555:202:98;36334:192:88;;;;;;:::i;:::-;;:::i;26478:278::-;;;;;;:::i;:::-;;:::i;43070:326::-;;;;;;:::i;:::-;;:::i;21075:203::-;;;;;;:::i;:::-;;:::i;7541:231::-;;;;;;:::i;:::-;;:::i;15494:207:78:-;;;;;;:::i;:::-;;:::i;6849:193::-;;;;;;:::i;:::-;;:::i;37673:500:88:-;;;;;;:::i;:::-;;:::i;2547:188:85:-;;;;;;:::i;:::-;2664:6;2689:27;;;:18;:27;;;;;;;;-1:-1:-1;;;;;2689:39:85;;;;;;;;;;;;;;2547:188;;;;-1:-1:-1;;;;;14623:31:98;;;14605:50;;14593:2;14578:18;2547:188:85;14461:200:98;9396:207:78;;;;;;:::i;:::-;;:::i;5954:197::-;;;;;;:::i;:::-;;:::i;34241:255:88:-;;;;;;:::i;:::-;;:::i;27145:175::-;;;;;;:::i;:::-;;:::i;17083:226:78:-;;;;;;:::i;:::-;17223:4;17246:28;;;:19;:28;;;;;;;;-1:-1:-1;;;;;17246:42:78;;;;;;;;;;;;:51;;;;;;;:56;;;17083:226;20311:321:88;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;15725:32:98;;;15707:51;;15789:2;15774:18;;15767:34;;;;15844:14;15837:22;15817:18;;;15810:50;15695:2;15680:18;20311:321:88;15511:355:98;4309:206:78;;;;;;:::i;:::-;;:::i;444:40:76:-;;;;;;;;;;;;;;;-1:-1:-1;;;444:40:76;;;;;3067:321:78;3189:4;3224:43;3255:11;3224:30;:43::i;:::-;:100;;;-1:-1:-1;;;;;;;3283:41:78;;-1:-1:-1;;;3283:41:78;3224:100;:157;;;-1:-1:-1;;;;;;;3340:41:78;;-1:-1:-1;;;3340:41:78;3224:157;3205:176;3067:321;-1:-1:-1;;3067:321:78:o;7822:277:88:-;8020:7;4028:35;4055:7;4028:26;:35::i;:::-;8039:53:::1;8053:4;8059:2;8063:7;8072:13;8087:4;8039:13;:53::i;:::-;7822:277:::0;;;;;;:::o;18503:502:78:-;-1:-1:-1;;;;;18722:28:78;;;18679:4;18722:28;;;:19;:28;;;;;;;;;;;18784:36;;;:17;:36;;;;;-1:-1:-1;;;;;18784:44:78;;;;;;;;;;18679:4;;18722:28;;18784:44;;;18842:24;;;;18838:139;;18885:10;18899:41;18932:7;18899:24;18915:7;18899:15;:24::i;:::-;:32;;:41::i;:::-;18882:58;-1:-1:-1;18954:12:78;;-1:-1:-1;;;;18954:12:78;18838:139;18993:5;18986:12;;;;18503:502;;;;;;;:::o;25783:190:88:-;25864:7;25883:23;25898:7;25883:14;:23::i;:::-;25924:24;;;;:15;:24;;;;;;25949:16;25940:7;25949;:16::i;:::-;-1:-1:-1;;;;;25924:42:88;;;;;;;;;;;;;;-1:-1:-1;25924:42:88;;;;25783:190;-1:-1:-1;;25783:190:88:o;25140:353::-;25211:13;25227:16;25235:7;25227;:16::i;:::-;25211:32;;25263:5;-1:-1:-1;;;;;25257:11:88;:2;-1:-1:-1;;;;;25257:11:88;;25253:54;;25277:30;;-1:-1:-1;;;25277:30:88;;;;;;;;;;;25253:54;719:10:72;-1:-1:-1;;;;;25322:21:88;;;;;;:63;;-1:-1:-1;25348:37:88;25365:5;719:10:72;27145:175:88;:::i;25348:37::-;25347:38;25322:63;25318:136;;;25406:48;;-1:-1:-1;;;25406:48:88;;;;;;;;;;;25318:136;25465:21;25474:2;25478:7;25465:8;:21::i;:::-;25201:292;25140:353;;:::o;2785:193:85:-;-1:-1:-1;;;;;2927:34:85;;;2904:4;2927:34;;;:27;:34;;;;;;;;:44;;;;;;;;;;;;;;;2785:193::o;5156:206:78:-;5299:7;2962:38;2992:7;2962:29;:38::i;:::-;5318:37:::1;5331:7;5340:5;5347:7;5318:12;:37::i;:::-;5156:206:::0;;;;:::o;5595:194:88:-;5731:7;4028:35;4055:7;4028:26;:35::i;:::-;5750:32:::1;5760:4;5766:2;5770:7;5750:32;;;;;;;;;;;::::0;:9:::1;:32::i;42716:304::-:0;-1:-1:-1;;;;;;;;;;;;;;;;;42876:5:88;42845:20;42856:8;42845:10;:20::i;:::-;:27;:36;42841:87;;42902:26;;-1:-1:-1;;;42902:26:88;;;;;;;;;;;42841:87;42938:18;42959:25;;;:15;:25;;;;;:32;;42985:5;;42959:32;;;;;;:::i;:::-;;;;;;;;;;42938:53;;;;;;;;;42959:32;;;;;42938:53;;;;;;;-1:-1:-1;;;;;42938:53:88;;;;;;;;;-1:-1:-1;;42716:304:88;;;;:::o;12126:154:78:-;12224:12;;2962:38;12224:12;2962:29;:38::i;:::-;2562:17:89::1;:15;:17::i;:::-;12261:12:78::2;12268:4;12261:6;:12::i;:::-;-1:-1:-1::0;;1830:1:89::1;2732:7;:22:::0;12126:154:78:o;6527:170:88:-;6651:39;6668:4;6674:2;6678:7;6651:39;;;;;;;;;;;;:16;:39::i;20946:79::-;21002:16;21007:7;21016:1;21002:4;:16::i;:::-;;20946:79;:::o;42454:212::-;42568:30;42601:26;;;:16;:26;;;;;;;;42568:59;;;;;;;;;;;;;;;;;42542:14;;42568:30;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;42568:59:88;;;;;;;;;;;;;;;;-1:-1:-1;42568:59:88;;42454:212;-1:-1:-1;;;;;;42454:212:88:o;19131:399:78:-;19282:13;19297:6;19305:7;19314:15;19366:34;19383:7;19392;19366:16;:34::i;:::-;-1:-1:-1;;;;;19414:28:78;;;;;;;:19;:28;;;;;;;;;19456:17;:26;;;;;;19496:8;:17;;;;;;19345:178;;;;;;;;;;;;;;;;;19414:28;;;;;-1:-1:-1;;;;;19456:26:78;;;;19496:17;;;19345:178;;;19496:17;19345:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19345:178:78;-1:-1:-1;;;;;19345:178:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19131:399;;;;;;;:::o;2131:150:85:-;2251:23;;;;:14;:23;;;;;;;;;2244:30;;;;;;;;;;;;;;;;;2217:15;;2244:30;;;2251:23;2244:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2244:30:85;-1:-1:-1;;;;;2244:30:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:150;;;:::o;1637:246::-;1777:21;;;;:12;:21;;;;;;;;-1:-1:-1;;;;;1777:30:85;;;;;;;;;;1747:13;;1777:30;;1772:71;;1816:27;;-1:-1:-1;;;1816:27:85;;;;;;;;;;;1772:71;-1:-1:-1;;;;;1860:16:85;;;;;;:7;:16;;;;;1853:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:246;;;;:::o;2331:166::-;2459:31;;;;:22;:31;;;;;;;;;2452:38;;;;;;;;;;;;;;;;;2425:15;;2452:38;;;2459:31;2452:38;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2452:38:85;;;;;;;;;;;;;;;;;;;-1:-1:-1;2452:38:85;;2331:166;-1:-1:-1;;;;;;;2331:166:85:o;8700:415:78:-;8780:13;8796:16;8804:7;8796;:16::i;:::-;8780:32;;8832:5;-1:-1:-1;;;;;8826:11:78;:2;-1:-1:-1;;;;;8826:11:78;;8822:61;;8846:37;;-1:-1:-1;;;8846:37:78;;;;;;;;;;;8822:61;719:10:72;-1:-1:-1;;;;;8911:21:78;;;;;;:84;;-1:-1:-1;8949:46:78;8975:5;719:10:72;2785:193:85;:::i;8949:46:78:-;8948:47;8911:84;8894:174;;;9013:55;;-1:-1:-1;;;9013:55:78;;;;;;;;;;;8894:174;9078:30;9096:2;9100:7;9078:17;:30::i;19922:339:88:-;20027:7;20047:13;20062:20;20084:10;20098:44;20125:7;20098:13;:44::i;:::-;20046:96;;;;;;20156:5;20152:81;;;20185:37;;-1:-1:-1;;;20185:37:88;;;;;10101:25:98;;;-1:-1:-1;;;;;20185:23:88;;;;;10074:18:98;;20185:37:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20177:45;;20152:81;-1:-1:-1;20249:5:88;;19922:339;-1:-1:-1;;;19922:339:88:o;33313:878::-;33440:24;33455:8;33440:14;:24::i;:::-;719:10:72;1702:19:71;;33520:58:88;;33559:19;;-1:-1:-1;;;33559:19:88;;;;;;;;;;;33520:58;33610:90;;;;;;;;;;;;-1:-1:-1;;;;;33610:90:88;;;;;;33776:14;33793:27;33811:8;33793:17;:27::i;:::-;:34;33776:51;;33851:3;33842:6;:12;33838:150;;;33870:26;;;;:16;:26;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;33870:38:88;-1:-1:-1;;;;;33870:38:88;;;;;;;;;33838:150;;;33946:31;;-1:-1:-1;;;33946:31:88;;;;;;;;;;;33838:150;34112:7;34098:12;-1:-1:-1;;;;;34066:54:88;34080:8;34066:54;34090:6;34066:54;;;;10101:25:98;;10089:2;10074:18;;9955:177;34066:54:88;;;;;;;;34131:53;5156:206:78;42213:190:88;42320:23;42346:25;;;:15;:25;;;;;;;;42320:51;;;;;;;;;;;;;;;;;42294:14;;42320:23;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;42320:51:88;;;;;;;;;;;;;;;4697:189;4760:7;-1:-1:-1;;;;;4783:19:88;;4779:67;;4811:35;;-1:-1:-1;;;4811:35:88;;;;;;;;;;;4779:67;-1:-1:-1;;;;;;4863:16:88;;;;;:9;:16;;;;;;;4697:189::o;1933:148:85:-;2052:22;;;;:13;:22;;;;;;;;;2045:29;;;;;;;;;;;;;;;;;2018:15;;2045:29;;;2052:22;2045:29;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2045:29:85;;;;;;;;;;;;;;;;;;;-1:-1:-1;2045:29:85;;1933:148;-1:-1:-1;;;;;;;1933:148:85:o;3028:354::-;-1:-1:-1;;;;;3148:24:85;;719:10:72;3148:24:85;3144:86;;3193:37;;-1:-1:-1;;;3193:37:85;;;;;;;;;;;3144:86;719:10:72;3241:41:85;;;;:27;:41;;;;;;;;-1:-1:-1;;;;;3241:51:85;;;;;;;;;;;;:62;;-1:-1:-1;;3241:62:85;;;;;;;;;;3318:57;;540:41:98;;;3241:51:85;;719:10:72;3318:57:85;;513:18:98;3318:57:85;;;;;;;;3028:354;;:::o;36334:192:88:-;36458:7;3083:29;3104:7;3083:20;:29::i;:::-;36477:42:::1;36496:7;36505:13;36477:18;:42::i;26478:278::-:0;-1:-1:-1;;;;;26567:24:88;;719:10:72;26567:24:88;26563:60;;26600:23;;-1:-1:-1;;;26600:23:88;;;;;;;;;;;26563:60;719:10:72;26633:32:88;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;26633:42:88;;;;;;;;;;;;:53;;-1:-1:-1;;26633:53:88;;;;;;;;;;26701:48;;540:41:98;;;26633:42:88;;719:10:72;26701:48:88;;513:18:98;26701:48:88;400:187:98;43070:326:88;-1:-1:-1;;;;;;;;;;;;;;;;;43244:5:88;43206:27;43224:8;43206:17;:27::i;:::-;:34;:43;43202:101;;43270:33;;-1:-1:-1;;;43270:33:88;;;;;;;;;;;43202:101;43313:18;43334:26;;;:16;:26;;;;;:33;;43361:5;;43334:33;;;;;;:::i;21075:203::-;21213:7;21195;4028:35;4055:7;4028:26;:35::i;:::-;21239:32:::1;21245:7;21254:16;21239:5;:32::i;7541:231::-:0;7708:7;4028:35;4055:7;4028:26;:35::i;:::-;7727:38:::1;7741:4;7747:2;7751:7;7760:4;7727:13;:38::i;:::-;7541:231:::0;;;;;:::o;15494:207:78:-;15637:7;2962:38;2992:7;2962:29;:38::i;:::-;15656::::1;15665:7;15674;15683:10;15656:8;:38::i;6849:193::-:0;6983:7;2962:38;2992:7;2962:29;:38::i;:::-;7002:33:::1;7015:7;7024:10;;7002:12;:33::i;37673:500:88:-:0;37947:7;3083:29;3104:7;3083:20;:29::i;:::-;37966:200:::1;37994:7;38015:2;38031:13;38058:10;38082:12;38108:7;38129:9;38152:4;37966:14;:200::i;:::-;37673:500:::0;;;;;;;;;:::o;9396:207:78:-;9486:7;9505:23;9520:7;9505:14;:23::i;:::-;9545:33;;;;:24;:33;;;;;;9579:16;9570:7;9579;:16::i;5954:197::-;6085:7;2962:38;2992:7;2962:29;:38::i;:::-;6104:40:::1;6121:7;6130:13;6104:16;:40::i;34241:255:88:-:0;34412:8;3083:29;3104:7;3083:20;:29::i;:::-;34432:57:::1;34445:8;34455:10;34467:12;34481:7;34432:12;:57::i;27145:175::-:0;-1:-1:-1;;;;;27278:25:88;;;27255:4;27278:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;27145:175::o;20311:321::-;20394:7;20455:20;;;:11;:20;;;;;;;;20428:47;;;;;;;;;;;;;;;-1:-1:-1;;;;;20428:47:88;;;;;;;20394:7;;;;20428:47;20485:67;;20530:22;;-1:-1:-1;;;20530:22:88;;;;;;;;;;;20485:67;20571:18;;;;20591:13;;20571:18;;20591:13;;-1:-1:-1;20606:18:88;;;;-1:-1:-1;20311:321:88;-1:-1:-1;;20311:321:88:o;4309:206:78:-;4452:7;2962:38;2992:7;2962:29;:38::i;:::-;4471:37:::1;4484:7;4493:5;4500:7;4471:12;:37::i;4210:285:88:-:0;4300:4;-1:-1:-1;;;;;;4335:40:88;;-1:-1:-1;;;4335:40:88;;:96;;-1:-1:-1;;;;;;;4391:40:88;;-1:-1:-1;;;4391:40:88;4335:96;:153;;;-1:-1:-1;;;;;;;4447:41:88;;-1:-1:-1;;;4447:41:88;4316:172;4210:285;-1:-1:-1;;4210:285:88:o;3602:187::-;3684:47;719:10:72;3723:7:88;3684:24;:47::i;:::-;3679:103;;3752:30;;-1:-1:-1;;;3752:30:88;;;;;;;;;;;3679:103;3602:187;:::o;11502:1357::-;11684:22;11708:16;11730:22;11744:7;11730:13;:22::i;:::-;11683:69;;;;;11784:4;-1:-1:-1;;;;;11766:22:88;:14;-1:-1:-1;;;;;11766:22:88;;11762:69;;11797:34;;-1:-1:-1;;;11797:34:88;;;;;;;;;;;11762:69;-1:-1:-1;;;;;11845:16:88;;11841:61;;11870:32;;-1:-1:-1;;;11870:32:88;;;;;;;;;;;11841:61;-1:-1:-1;;;;;11916:19:88;;11930:4;11916:19;:47;;;;;11950:13;11939:7;:24;11916:47;11912:100;;;11984:28;;-1:-1:-1;;;11984:28:88;;;;;;;;;;;11912:100;-1:-1:-1;;;;;12143:13:88;;1702:19:71;12138:48:88;;12167:19;;-1:-1:-1;;;12167:19:88;;;;;;;;;;;12138:48;12201:57;;-1:-1:-1;;;12201:57:88;;-1:-1:-1;;;12201:57:88;;;11699:52:98;-1:-1:-1;;;;;12201:29:88;;;;;11672:18:98;;12201:57:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12196:133;;12279:50;;-1:-1:-1;;;12279:50:88;;;;;;;;;;;12196:133;12339:52;12364:7;12373:2;12377:13;12339:24;:52::i;:::-;-1:-1:-1;;;;;12629:15:88;;;;;;12648:1;12629:15;;;;;;;:20;;12648:1;;12629:15;;:20;;12648:1;;12629:20;:::i;:::-;;;;-1:-1:-1;12659:57:88;;-1:-1:-1;12689:7:88;12698:13;12713:2;12659:29;:57::i;:::-;-1:-1:-1;;;;;12726:13:88;;;;;;12743:1;12726:13;;;;;;;:18;;12743:1;;12726:13;;:18;;12743:1;;12726:18;:::i;:::-;;;;-1:-1:-1;12782:70:88;;-1:-1:-1;12793:14:88;12809:2;12813:8;12823:13;12838:7;12847:4;12782:10;:70::i;:::-;11673:1186;;11502:1357;;;;;:::o;1241:361:84:-;1374:8;;1332:7;;;;;1392:177;1412:6;1408:1;:10;1392:177;;;1448:1;-1:-1:-1;;;;;1440:9:84;:1;1442;1440:4;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1440:9:84;;1436:64;;1477:1;-1:-1:-1;1480:4:84;;-1:-1:-1;1469:16:84;;-1:-1:-1;1469:16:84;1436:64;1541:3;;1392:177;;;;1586:1;1589:5;1578:17;;;;;1241:361;;;;;;:::o;31049:132:88:-;31563:4;31586:20;;;:11;:20;;;;;:33;;;-1:-1:-1;;;;;31586:33:88;31122:52;;31152:22;;-1:-1:-1;;;31152:22:88;;;;;;;;;;;27589:202;27663:13;27679:16;27687:7;27679;:16::i;:::-;27705:24;;;;:15;:24;;;;;;;;-1:-1:-1;;;;;27705:31:88;;;;;;;;;;;;;:36;;-1:-1:-1;;;;;;27705:36:88;;;;;;;;;27756:28;;27705:31;;-1:-1:-1;27705:24:88;;:36;;:31;;27756:28;;27705:24;27756:28;27653:138;27589:202;;:::o;2387:196:78:-;2472:50;719:10:72;2514:7:78;2472:27;:50::i;:::-;2467:109;;2543:33;;-1:-1:-1;;;2543:33:78;;;;;;;;;;;5528:441:85;5655:53;5684:7;5693:5;5700:7;5655:28;:53::i;:::-;5772:44;5792:7;5801:5;5808:7;5772:19;:44::i;:::-;5833:21;;;;:12;:21;;;;;;;;-1:-1:-1;;;;;5833:30:85;;;;;;;;;;5826:37;;-1:-1:-1;;5826:37:85;;;5879:31;5833:30;;5846:7;;5879:31;;5833:21;5879:31;25201:292:88;25140:353;;:::o;10045:834::-;10192:22;10216:16;10238:22;10252:7;10238:13;:22::i;:::-;10191:69;;;;;10292:4;-1:-1:-1;;;;;10274:22:88;:14;-1:-1:-1;;;;;10274:22:88;;10270:69;;10305:34;;-1:-1:-1;;;10305:34:88;;;;;;;;;;;10270:69;-1:-1:-1;;;;;10353:16:88;;10349:61;;10378:32;;-1:-1:-1;;;10378:32:88;;;;;;;;;;;10349:61;-1:-1:-1;;;;;10545:15:88;;;;;;10564:1;10545:15;;;;;;;:20;;10564:1;;10545:15;;:20;;10564:1;;10545:20;:::i;:::-;;;;-1:-1:-1;10575:45:88;;-1:-1:-1;10605:7:88;10614:1;10617:2;10575:29;:45::i;:::-;-1:-1:-1;;;;;10630:13:88;;;;;;10647:1;10630:13;;;;;;;:18;;10647:1;;10630:13;;:18;;10647:1;;10630:18;:::i;:::-;;;;-1:-1:-1;;10664:27:88;;10683:7;;-1:-1:-1;;;;;10664:27:88;;;;;;;;;;;;;10742:7;10725:2;-1:-1:-1;;;;;10706:44:88;10719:4;-1:-1:-1;;;;;10706:44:88;;10729:8;10739:1;10706:44;;;;;;17471:25:98;;;17527:2;17512:18;;17505:34;17459:2;17444:18;;17289:256;2935:262:89;1873:1;3055:7;;:19;3051:46;;3083:14;;-1:-1:-1;;;3083:14:89;;;;;;;;;;;3051:46;1873:1;3172:7;:18;2935:262::o;12964:1972:78:-;13075:12;;;;;-1:-1:-1;;;;;13057:31:78;;;13032:22;13057:31;;;:17;:31;;;;;;;;13118:15;;;;13172:12;;13160:25;;:11;:25;;;;;-1:-1:-1;;;;;13057:31:78;;;13160:41;;;;;;;;;:53;;;;;;;;;;;;;:93;;;13057:31;;13118:15;;13160:93;:107;13143:163;;13285:21;;-1:-1:-1;;;13285:21:78;;;;;;;;;;;13143:163;13367:48;13390:4;:12;;;13404:10;13367:22;:48::i;:::-;13426:27;13456:38;13464:4;:12;;;13478:4;:15;;;13456:7;:38::i;:::-;13691:21;;;;13823:13;;13858:17;;;;13682:243;;-1:-1:-1;;;13682:243:78;;13796:4;13682:243;;;17777:51:98;17844:18;;;17837:34;;;;-1:-1:-1;;;;;17944:15:98;;;17924:18;;;17917:43;17996:15;;17976:18;;;17969:43;13426:68:78;;-1:-1:-1;;;;;;13682:84:78;;;;17749:19:98;;13682:243:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13664:323;;13943:44;;-1:-1:-1;;;13943:44:78;;;;;;;;;;;13664:323;14150:21;;;;14058:127;;-1:-1:-1;;;14058:127:78;;-1:-1:-1;;;;;18213:31:98;;14058:127:78;;;18195:50:98;-1:-1:-1;;;;;18281:32:98;;;18261:18;;;18254:60;14058:46:78;;;;;;18168:18:98;;14058:127:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14040:203;;14203:40;;-1:-1:-1;;;14203:40:78;;;;;;;;;;;14040:203;14310:196;;;;;;;;;14343:12;;;;-1:-1:-1;;;;;14310:196:78;;;;;14383:17;;;;14310:196;;;;;;;;;14423:13;;14310:196;;;;;;14474:21;;;;;-1:-1:-1;;;;;14310:196:78;;;-1:-1:-1;14310:196:78;;;;;14529:12;;14282:25;14517;;;:11;:25;;;;;:41;;;;;;;;;;:53;;;;;;;;;;:64;;;;;;;;-1:-1:-1;;;14517:64:78;-1:-1:-1;;;;;;14517:64:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14517:64:78;;;;;;;;;;14611:12;;14591:33;;:19;:33;;;;;14625:21;;14591:56;;;;;;;;;;;14661:13;;14591:93;;;;;;;:98;;14310:196;;14517:64;;14591:93;;14282:25;14591:98;;14517:64;;14591:98;:::i;:::-;;;;;;;;14789:10;-1:-1:-1;;;;;14705:197:78;14763:4;:12;;;-1:-1:-1;;;;;14705:197:78;14737:4;:12;;;14705:197;14813:5;:13;;;14840:5;:21;;;14875:4;:17;;;14705:197;;;;;;;18525:25:98;;;-1:-1:-1;;;;;18586:32:98;;;;18581:2;18566:18;;18559:60;-1:-1:-1;;;;;18655:31:98;18650:2;18635:18;;18628:59;18513:2;18498:18;;18325:368;14705:197:78;;;;;;;;14912:17;3602:187:88;10798:229:78;10881:13;10897:16;10905:7;10897;:16::i;:::-;10923:33;;;;:24;:33;;;;;;;;-1:-1:-1;;;;;10923:40:78;;;;;;;;;;;;;:45;;-1:-1:-1;;;;;;10923:45:78;;;;;;;;;10983:37;;10923:40;;-1:-1:-1;10923:33:78;;:45;;:40;;10983:37;;10923:33;10983:37;10871:156;10798:229;;:::o;2669:171:88:-;2745:41;719:10:72;2778:7:88;2745:18;:41::i;:::-;2740:93;;2807:26;;-1:-1:-1;;;2807:26:88;;;;;;;;;;;37223:400;37344:25;;;;:16;:25;;;;;:32;:48;-1:-1:-1;37340:105:88;;;37413:32;;-1:-1:-1;;;37413:32:88;;;;;;;;;;;37340:105;37506:25;;;;:16;:25;;;;;37499:32;;;:::i;:::-;37546:28;;37566:7;;37546:28;;;;;21002:16;20946:79;:::o;21822:2537::-;21928:7;21948:22;21972:16;21994:22;22008:7;21994:13;:22::i;:::-;21947:69;;;;;22026:17;22046:16;22054:7;22046;:16::i;:::-;22140:162;;;;;;;;;-1:-1:-1;22140:162:88;;;;-1:-1:-1;;;;;22313:25:88;;;;22342:1;22313:25;;;;;;;:30;;22026:36;;-1:-1:-1;22342:1:88;;22313:30;;22342:1;;22313:30;:::i;:::-;;;;-1:-1:-1;22353:29:88;;-1:-1:-1;22370:1:88;22374:7;22353:8;:29::i;:::-;22392:24;22408:7;22392:15;:24::i;:::-;22427:23;22453:19;22464:7;22453:10;:19::i;:::-;22490:24;;;;:15;:24;;;;;22427:45;;-1:-1:-1;22483:31:88;;22490:24;22483:31;:::i;:::-;22531:25;;;;:16;:25;;;;;22524:32;;;:::i;:::-;22573:24;;;;:15;:24;;;;;;;;-1:-1:-1;;;;;22573:35:88;;;;;;;;;22566:42;;-1:-1:-1;;;;;;22566:42:88;;;22709:15;;22573:24;;;22748:1069;22768:6;22764:1;:10;22748:1069;;;22815:16;22796:15;:35;22792:200;;22906:8;22915:1;22906:11;;;;;;;;:::i;:::-;;;;;;;:27;;;22955:8;22964:1;22955:11;;;;;;;;:::i;:::-;;;;;;;;;;;:19;22856:136;;-1:-1:-1;;;22856:136:88;;-1:-1:-1;;;;;18890:32:98;;;22856:136:88;;;18872:51:98;18939:18;;;18932:34;18845:18;;22856:136:88;;;;;;;22792:200;23013:16;:45;23030:8;23039:1;23030:11;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;23013:45:88;-1:-1:-1;;;;;23013:45:88;;;;;;;;;;;;:96;23076:8;23085:1;23076:11;;;;;;;;:::i;:::-;;;;;;;:19;;;23013:96;;;;;;;;;;;23006:103;;;23276:15;23257:16;:34;23233:58;;23588:8;23597:1;23588:11;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;23579:42:88;;23643:8;23652:1;23643:11;;;;;;;;:::i;:::-;;;;;;;:19;;;23708:1;23684:21;:25;;;;:::i;:::-;23579:148;;-1:-1:-1;;;;;;23579:148:88;;;;;;;;;;17471:25:98;;;;17512:18;;;17505:34;17444:18;;23579:148:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:168;;23746:1;23579:168;:::i;:::-;23544:203;;;;:::i;:::-;;-1:-1:-1;23789:3:88;;22748:1069;;;-1:-1:-1;23923:20:88;;;;:11;:20;;;;;;23916:27;;;;;;;-1:-1:-1;;;;;;23916:27:88;;;23959:45;23935:7;;23923:20;-1:-1:-1;;;;;23959:45:88;;;;;23923:20;;23959:45;24019:62;;;17471:25:98;;;24056:1:88;17527:2:98;17512:18;;17505:34;;;24073:7:88;;24056:1;;-1:-1:-1;;;;;24019:62:88;;;;;17444:18:98;24019:62:88;;;;;;;24158:161;;;;;;;;;24233:1;24158:161;;-1:-1:-1;24337:15:88;21822:2537;-1:-1:-1;;;;;;;;21822:2537:88:o;9138:314::-;9288:34;9298:4;9304:2;9308:7;9317:4;9288:9;:34::i;:::-;9337:47;9360:4;9366:2;9370:7;9379:4;9337:22;:47::i;:::-;9332:113;;9405:40;;-1:-1:-1;;;9405:40:88;;;;;;;;;;;16107:926:78;-1:-1:-1;;;;;16265:26:78;;;16234:28;16265:26;;;:17;:26;;;;;;;;;16330:20;;;:11;:20;;;;;-1:-1:-1;;;;;16265:26:78;;;16330:42;;;;;;;;;:76;;;;;;;;;;;16301:105;;;;;;;;;;;;;;-1:-1:-1;;;16301:105:78;;;;;;;;;;;;16265:26;16301:105;;;;;;;;;;;;;;;;;;;;;;16265:26;;16301:105;16416:88;;16487:17;;-1:-1:-1;;;16487:17:78;;;;;;;;;;;16416:88;16576:20;;;;:11;:20;;;;;;;;-1:-1:-1;;;;;16576:42:78;;;;;;;;;;;-1:-1:-1;;;;;16576:54:78;;;;;;;;;16569:61;;-1:-1:-1;;;;;;16569:61:78;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16569:61:78;;;16640:28;;;:19;:28;;;;;16669:32;;;;16640:62;;;;;;;;;;;16716:17;;;;16640:103;;;;;;;:108;;16569:61;;16640:103;;:108;;16569:61;;16640:108;:::i;:::-;;;;;;;;16840:10;-1:-1:-1;;;;;16764:209:78;16819:7;-1:-1:-1;;;;;16764:209:78;16798:7;16764:209;16864:9;:17;;;16895:9;:32;;;16941:9;:22;;;16764:209;;;;;;;18525:25:98;;;-1:-1:-1;;;;;18586:32:98;;;;18581:2;18566:18;;18559:60;-1:-1:-1;;;;;18655:31:98;18650:2;18635:18;;18628:59;18513:2;18498:18;;18325:368;9046:453:85;9164:14;9222:22;;;:13;:22;;;;;:29;9181:10;;9212:39;;9208:91;;9272:27;;-1:-1:-1;;;9272:27:85;;;;;;;;;;;9208:91;9359:31;;;;:22;:31;;;;;:44;;9393:10;;9359:44;:::i;:::-;-1:-1:-1;9419:25:85;;9436:7;;9419:25;;;;;9454:38;25140:353:88;11439:637:78;11720:9;11715:139;;17223:4;17246:28;;;:19;:28;;;;;;;;-1:-1:-1;;;;;17246:42:78;;;;;;;;;:51;;;;;;;;;:56;11745:98;;11821:22;;-1:-1:-1;;;11821:22:78;;;;;;;;;;;11745:98;11863:206;11897:7;11918:2;11934:13;11961:10;11985:12;12011:7;12032:9;12055:4;11863:20;:206::i;:::-;11439:637;;;;;;;;:::o;7827:632:85:-;7942:11;7956:23;;;:14;:23;;;;;:30;8000:19;;;7996:62;;;8028:30;;-1:-1:-1;;;8028:30:85;;;;;;;;;;;7996:62;8116:9;8111:211;8131:3;8127:1;:7;8111:211;;;8152:14;8169:23;;;:14;:23;;;;;:26;;8193:1;;8169:26;;;;;;:::i;:::-;;;;;;;;;;;;;;8216:27;;;:18;:27;;;;;;8169:26;;;;;;;;;;;-1:-1:-1;;;;;8169:26:85;8216:36;;;;;;;8209:43;;-1:-1:-1;;8209:43:85;;;-1:-1:-1;;8294:3:85;8111:211;;;-1:-1:-1;8339:23:85;;;;:14;:23;;;;;8331:32;;;:::i;:::-;8379:33;;8409:1;;8393:7;;8379:33;;8409:1;;8379:33;25201:292:88;25140:353;;:::o;35424:860::-;35588:18;35609:36;35624:8;35634:10;35609:14;:36::i;:::-;35588:57;;35655:49;35675:5;35682:12;35696:7;35655:19;:49::i;:::-;-1:-1:-1;;;;;35718:30:88;;;;;;:16;:30;;;;;;;;:39;;;;;;;;;:44;35714:93;;35783:24;;-1:-1:-1;;;35783:24:88;;;;;;;;;;;35714:93;35944:26;;;;:16;:26;;;;;35924:59;;35972:10;35924:19;:59::i;:::-;36020:25;;;;:15;:25;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;36020:37:88;-1:-1:-1;;;;;36020:37:88;;;;;;36067:30;;;;;:16;:30;;;;;:39;;;;;;;;;:43;36146:58;10101:25:98;;;36067:39:88;;:30;36020:25;;36146:58;;10074:18:98;36146:58:88;9955:177:98;3795:1295:85;3922:53;3951:7;3960:5;3967:7;3922:28;:53::i;:::-;4039:17;4059:27;;;:18;:27;;;;;;;;-1:-1:-1;;;;;4059:36:85;;;;;;;;;;;;4039:17;4166:23;;4162:144;;4234:72;4282:10;4234:13;:22;4248:7;4234:22;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4234:30:85;-1:-1:-1;;;;;4234:30:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:72;;;;:::i;:::-;4203:103;;-1:-1:-1;4203:103:85;-1:-1:-1;4162:144:85;4321:12;4317:602;;;4487:22;;;;:13;:22;;;;;:36;;4526:7;;4487:22;4510:12;;4487:36;;;;;;:::i;:::-;;;;;;;;;;;;;:46;;:36;;;;;;:46;;-1:-1:-1;;;;;4487:46:85;;;;;;;;;;;;;;;;;;4554:21;;;:12;:21;;;;;;:33;;;;;;;;4547:40;;-1:-1:-1;;4547:40:85;;;4317:602;;;4717:31;;;;:22;:31;;;;;;;;4778:13;:22;;;;;:29;;4717:105;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4717:105:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4836:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4717:31;-1:-1:-1;4317:602:85;4928:44;4948:7;4957:5;4964:7;4928:19;:44::i;:::-;5020:10;-1:-1:-1;;;;;4988:43:85;5011:7;-1:-1:-1;;;;;4988:43:85;5002:7;4988:43;;;;;;;;;;5041:42;25140:353:88;30025:532;30146:4;30163:13;30178:16;30200:22;30214:7;30200:13;:22::i;:::-;30162:60;;;;;30300:8;30312:1;30300:13;30296:69;;-1:-1:-1;;;;;;30337:16:88;;;;;;;-1:-1:-1;30329:25:88;;30296:69;30449:5;-1:-1:-1;;;;;30438:16:88;:7;-1:-1:-1;;;;;30438:16:88;;:64;;;;30470:32;30487:5;30494:7;30470:16;:32::i;:::-;30438:111;;;;30542:7;-1:-1:-1;;;;;30518:31:88;:20;30530:7;30518:11;:20::i;:::-;-1:-1:-1;;;;;30518:31:88;;30438:111;30430:120;30025:532;-1:-1:-1;;;;;30025:532:88:o;14837:1039::-;14990:9;14985:847;944:3;15001:1;:45;14985:847;;;15082:17;15117:24;15159:10;15195:14;-1:-1:-1;;;;;15186:38:88;;15225:8;15186:48;;;;;;;;;;;;;10101:25:98;;10089:2;10074:18;;9955:177;15186:48:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15064:170;;;;;;15325:5;15320:51;;15350:7;;;;14837:1039;;;:::o;15320:51::-;-1:-1:-1;;;;;15481:26:88;;15502:4;15481:26;:59;;;;;15531:9;15511:16;:29;15481:59;15477:139;;;15567:34;;-1:-1:-1;;;15567:34:88;;;;;;;;;;;15477:139;-1:-1:-1;15712:9:88;;-1:-1:-1;15746:16:88;-1:-1:-1;15804:3:88;;14985:847;;;;15848:21;;-1:-1:-1;;;15848:21:88;;;;;;;;;;;28204:384;28367:89;;;;;;;;;;;-1:-1:-1;;;;;28367:89:88;;;;;;;;;;-1:-1:-1;28344:20:88;;;:11;:20;;;;;;:112;;;;;;;;;;;-1:-1:-1;;;;;;28344:112:88;;;;;;;;;;;28518:29;;28344:20;28518:8;:29::i;:::-;28557:24;28573:7;28557:15;:24::i;13580:629::-;13821:51;;-1:-1:-1;;;13821:51:88;;13808:2;;-1:-1:-1;;;;;13821:21:88;;;;;:51;;13843:13;;13858:7;;13867:4;;13821:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13907:7;13903:2;-1:-1:-1;;;;;13888:27:88;13897:4;-1:-1:-1;;;;;13888:27:88;;;;;;;;;;;13978:7;13949:2;-1:-1:-1;;;;;13930:56:88;13943:4;-1:-1:-1;;;;;13930:56:88;;13953:8;13963:13;13930:56;;;;;;17471:25:98;;;17527:2;17512:18;;17505:34;17459:2;17444:18;;17289:256;13930:56:88;;;;;;;;14045:157;7822:277;10241:315:78;10362:4;10378:13;10394:16;10402:7;10394;:16::i;:::-;10378:32;;10436:5;-1:-1:-1;;;;;10428:13:78;:4;-1:-1:-1;;;;;10428:13:78;;:67;;;;10457:38;10483:5;10490:4;10457:25;:38::i;:::-;10428:120;;;;10544:4;-1:-1:-1;;;;;10511:37:78;:29;10532:7;10511:20;:29::i;:::-;-1:-1:-1;;;;;10511:37:78;;;10241:315;-1:-1:-1;;;;10241:315:78:o;6365:330:85:-;6517:23;;;;:14;:23;;;;;:30;6508:39;;6504:85;;6568:21;;-1:-1:-1;;;6568:21:85;;;;;;;;;;;6504:85;6614:23;;;;:14;:23;;;;;:30;;6638:5;;6614:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6614:30:85;-1:-1:-1;;;;;6603:41:85;:7;-1:-1:-1;;;;;6603:41:85;;6599:89;;6665:23;;-1:-1:-1;;;6665:23:85;;;;;;;;;;;6999:233;7124:23;;;;:14;:23;;;;;:48;;7166:5;7124:41;:48::i;:::-;7189:27;;;;:18;:27;;;;;;;;-1:-1:-1;;;;;7189:36:85;;;;;;;;;;;7182:43;;-1:-1:-1;;7182:43:85;;;-1:-1:-1;6999:233:85:o;15208:236:78:-;-1:-1:-1;;;;;15337:17:78;;15323:10;15337:17;;;:8;:17;;;;;;;;:25;;;;;;;;;;;;;;;;;:37;;15363:10;;15337:25;:17;:25;;;:17;:25;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15337:25:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;;:::i;:::-;15320:54;;;15389:5;15384:53;;15403:34;;-1:-1:-1;;;15403:34:78;;;;;;;;;;;29334:300:88;29449:4;29465:13;29481:16;29489:7;29481;:16::i;:::-;29465:32;;29526:5;-1:-1:-1;;;;;29515:16:88;:7;-1:-1:-1;;;;;29515:16:88;;:64;;;;29547:32;29564:5;29571:7;29547:16;:32::i;:::-;29515:111;;;;29619:7;-1:-1:-1;;;;;29595:31:88;:20;29607:7;29595:11;:20::i;11181:123:78:-;11259:38;11285:1;11289:7;11259:17;:38::i;32183:953:88:-;32332:4;-1:-1:-1;;;;;32352:13:88;;1702:19:71;:23;32348:782:88;;32403:169;;-1:-1:-1;;;32403:169:88;;-1:-1:-1;;;;;32403:36:88;;;;;:169;;719:10:72;;32495:4:88;;32521:7;;32550:4;;32403:169;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32403:169:88;;;;;;;;-1:-1:-1;;32403:169:88;;;;;;;;;;;;:::i;:::-;;;32383:695;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32751:13:88;;32747:317;;32809:40;;-1:-1:-1;;;32809:40:88;;;;;;;;;;;32747:317;33016:6;33010:13;33001:6;32997:2;32993:15;32986:38;32383:695;-1:-1:-1;;;;;;32634:51:88;-1:-1:-1;;;32634:51:88;;-1:-1:-1;32627:58:88;;32348:782;-1:-1:-1;33115:4:88;33108:11;;39382:1907;-1:-1:-1;;;;;;;;;;;;;;;;;39696:9:88;39692:150;;;39729:35;39744:7;39753:10;39729:14;:35::i;:::-;39721:43;;39692:150;;;39803:28;39811:7;39820:10;39803:7;:28::i;:::-;39795:36;;39692:150;39851:49;39871:5;39878:12;39892:7;39851:19;:49::i;:::-;40089:9;40085:246;;;40134:25;;;;:16;:25;;;;;40114:58;;40161:10;40114:19;:58::i;:::-;40085:246;;;-1:-1:-1;;;;;40210:30:88;;;;;;:16;:30;;;;;;;;:39;;;;;;;;40203:46;;;40283:24;;;:15;:24;;;;;40263:57;;40309:10;40263:19;:57::i;:::-;-1:-1:-1;;;;;40345:16:88;;;40341:583;;40381:13;40377:537;;40428:170;;-1:-1:-1;;;40428:170:88;;-1:-1:-1;;;;;40428:38:88;;;;;:170;;40496:4;;40523:2;;40547:7;;40576:4;;40428:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40377:537;;;40687:21;;;;40807:13;;40678:221;;-1:-1:-1;;;40678:221:88;;-1:-1:-1;;;;;40678:48:88;;;;;;:221;;40756:4;;40783:2;;40842:13;;40877:4;;40678:221;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40377:537;40939:171;;;21733:25:98;;;21801:14;;21794:22;21789:2;21774:18;;21767:50;-1:-1:-1;;;;;41084:16:88;;;;21833:18:98;;;21826:50;40939:171:88;;41040:7;;40939:171;;;40969:7;;40939:171;;;;;21721:2:98;40939:171:88;;;41120:162;7822:277;41739:295;41922:5;:21;;;-1:-1:-1;;;;;41903:40:88;:15;-1:-1:-1;;;;;41903:40:88;;;:83;;;-1:-1:-1;41973:13:88;;41959:27;;;41903:83;41886:141;;;42004:23;;-1:-1:-1;;;42004:23:88;;;;;;;;;;;54991:151;55097:12;;55091:5;;55097:16;;55112:1;;55097:16;:::i;:::-;55091:23;;;;;;;;:::i;:::-;;;;;;;;;;;55076:5;55082;55076:12;;;;;;;;:::i;:::-;;;;;;;;;:38;;:12;;;;;:38;;;;;;;;;;;;-1:-1:-1;;;;;;55076:38:88;-1:-1:-1;;;;;55076:38:88;;;;;;;;;55124:11;;:5;;:11;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;55124:11:88;;;;;;;;;;;;;;-1:-1:-1;;;;;;55124:11:88;;;;;-1:-1:-1;;54991:151:88:o;489:262:84:-;662:12;;654:20;;646:29;;;;;;706:12;;700:5;;706:16;;721:1;;706:16;:::i;:::-;700:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;700:23:84;685:5;691;685:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:38;;;;;-1:-1:-1;;;;;685:38:84;;;;;-1:-1:-1;;;;;685:38:84;;;;;;733:5;:11;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;733:11:84;;;;;;;;;-1:-1:-1;;;;;733:11:84;;;;;;;;;;;;;;-1:-1:-1;;489:262:84:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:98;-1:-1:-1;;;;;;88:32:98;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:98:o;592:131::-;-1:-1:-1;;;;;667:31:98;;657:42;;647:70;;713:1;710;703:12;728:127;789:10;784:3;780:20;777:1;770:31;820:4;817:1;810:15;844:4;841:1;834:15;860:718;902:5;955:3;948:4;940:6;936:17;932:27;922:55;;973:1;970;963:12;922:55;1009:6;996:20;-1:-1:-1;;;;;1072:2:98;1068;1065:10;1062:36;;;1078:18;;:::i;:::-;1153:2;1147:9;1121:2;1207:13;;-1:-1:-1;;1203:22:98;;;1227:2;1199:31;1195:40;1183:53;;;1251:18;;;1271:22;;;1248:46;1245:72;;;1297:18;;:::i;:::-;1337:10;1333:2;1326:22;1372:2;1364:6;1357:18;1418:3;1411:4;1406:2;1398:6;1394:15;1390:26;1387:35;1384:55;;;1435:1;1432;1425:12;1384:55;1499:2;1492:4;1484:6;1480:17;1473:4;1465:6;1461:17;1448:54;1546:1;1539:4;1534:2;1526:6;1522:15;1518:26;1511:37;1566:6;1557:15;;;;;;860:718;;;;:::o;1583:734::-;1687:6;1695;1703;1711;1719;1772:3;1760:9;1751:7;1747:23;1743:33;1740:53;;;1789:1;1786;1779:12;1740:53;1828:9;1815:23;1847:31;1872:5;1847:31;:::i;:::-;1897:5;-1:-1:-1;1954:2:98;1939:18;;1926:32;1967:33;1926:32;1967:33;:::i;:::-;2019:7;-1:-1:-1;2073:2:98;2058:18;;2045:32;;-1:-1:-1;2124:2:98;2109:18;;2096:32;;-1:-1:-1;2179:3:98;2164:19;;2151:33;-1:-1:-1;;;;;2196:30:98;;2193:50;;;2239:1;2236;2229:12;2193:50;2262:49;2303:7;2294:6;2283:9;2279:22;2262:49;:::i;:::-;2252:59;;;1583:734;;;;;;;;:::o;2322:171::-;2389:20;;-1:-1:-1;;;;;2438:30:98;;2428:41;;2418:69;;2483:1;2480;2473:12;2418:69;2322:171;;;:::o;2498:460::-;2582:6;2590;2598;2606;2659:3;2647:9;2638:7;2634:23;2630:33;2627:53;;;2676:1;2673;2666:12;2627:53;2715:9;2702:23;2734:31;2759:5;2734:31;:::i;:::-;2784:5;-1:-1:-1;2836:2:98;2821:18;;2808:32;;-1:-1:-1;2859:37:98;2892:2;2877:18;;2859:37;:::i;:::-;2849:47;;2915:37;2948:2;2937:9;2933:18;2915:37;:::i;:::-;2905:47;;2498:460;;;;;;;:::o;2963:180::-;3022:6;3075:2;3063:9;3054:7;3050:23;3046:32;3043:52;;;3091:1;3088;3081:12;3043:52;-1:-1:-1;3114:23:98;;2963:180;-1:-1:-1;2963:180:98:o;3356:315::-;3424:6;3432;3485:2;3473:9;3464:7;3460:23;3456:32;3453:52;;;3501:1;3498;3491:12;3453:52;3540:9;3527:23;3559:31;3584:5;3559:31;:::i;:::-;3609:5;3661:2;3646:18;;;;3633:32;;-1:-1:-1;;;3356:315:98:o;3676:388::-;3744:6;3752;3805:2;3793:9;3784:7;3780:23;3776:32;3773:52;;;3821:1;3818;3811:12;3773:52;3860:9;3847:23;3879:31;3904:5;3879:31;:::i;:::-;3929:5;-1:-1:-1;3986:2:98;3971:18;;3958:32;3999:33;3958:32;3999:33;:::i;:::-;4051:7;4041:17;;;3676:388;;;;;:::o;4069:320::-;4145:6;4153;4161;4214:2;4202:9;4193:7;4189:23;4185:32;4182:52;;;4230:1;4227;4220:12;4182:52;4266:9;4253:23;4243:33;;4323:2;4312:9;4308:18;4295:32;4285:42;;4346:37;4379:2;4368:9;4364:18;4346:37;:::i;:::-;4336:47;;4069:320;;;;;:::o;4394:456::-;4471:6;4479;4487;4540:2;4528:9;4519:7;4515:23;4511:32;4508:52;;;4556:1;4553;4546:12;4508:52;4595:9;4582:23;4614:31;4639:5;4614:31;:::i;:::-;4664:5;-1:-1:-1;4721:2:98;4706:18;;4693:32;4734:33;4693:32;4734:33;:::i;:::-;4394:456;;4786:7;;-1:-1:-1;;;4840:2:98;4825:18;;;;4812:32;;4394:456::o;4855:248::-;4923:6;4931;4984:2;4972:9;4963:7;4959:23;4955:32;4952:52;;;5000:1;4997;4990:12;4952:52;-1:-1:-1;;5023:23:98;;;5093:2;5078:18;;;5065:32;;-1:-1:-1;4855:248:98:o;5285:242::-;5179:12;;5167:25;;5245:4;5234:16;;;5228:23;-1:-1:-1;;;;;5224:49:98;5208:14;;;5201:73;5467:2;5452:18;;5479:42;5108:172;5532:726;5621:6;5674:3;5662:9;5653:7;5649:23;5645:33;5642:53;;;5691:1;5688;5681:12;5642:53;5724:2;5718:9;5766:3;5758:6;5754:16;5836:6;5824:10;5821:22;-1:-1:-1;;;;;5788:10:98;5785:34;5782:62;5779:88;;;5847:18;;:::i;:::-;5887:10;5883:2;5876:22;;5935:9;5922:23;5914:6;5907:39;6007:2;5996:9;5992:18;5979:32;5974:2;5966:6;5962:15;5955:57;6045:37;6078:2;6067:9;6063:18;6045:37;:::i;:::-;6040:2;6032:6;6028:15;6021:62;6116:37;6149:2;6138:9;6134:18;6116:37;:::i;:::-;6111:2;6103:6;6099:15;6092:62;6188:38;6221:3;6210:9;6206:19;6188:38;:::i;:::-;6182:3;6170:16;;6163:64;6174:6;5532:726;-1:-1:-1;;;5532:726:98:o;6263:718::-;6482:2;6534:21;;;6604:13;;6507:18;;;6626:22;;;6453:4;;6482:2;6667;;6685:18;;;;6726:15;;;6453:4;6769:186;6783:6;6780:1;6777:13;6769:186;;;6832:43;6871:3;6862:6;6856:13;5179:12;;5167:25;;5245:4;5234:16;;;5228:23;-1:-1:-1;;;;;5224:49:98;5208:14;;5201:73;5108:172;6832:43;6895:12;;;;6930:15;;;;6805:1;6798:9;6769:186;;;-1:-1:-1;6972:3:98;;6263:718;-1:-1:-1;;;;;;;6263:718:98:o;6986:252::-;7053:6;7061;7114:2;7102:9;7093:7;7089:23;7085:32;7082:52;;;7130:1;7127;7120:12;7082:52;7166:9;7153:23;7143:33;;7195:37;7228:2;7217:9;7213:18;7195:37;:::i;:::-;7185:47;;6986:252;;;;;:::o;7243:423::-;7285:3;7323:5;7317:12;7350:6;7345:3;7338:19;7375:1;7385:162;7399:6;7396:1;7393:13;7385:162;;;7461:4;7517:13;;;7513:22;;7507:29;7489:11;;;7485:20;;7478:59;7414:12;7385:162;;;7389:3;7592:1;7585:4;7576:6;7571:3;7567:16;7563:27;7556:38;7655:4;7648:2;7644:7;7639:2;7631:6;7627:15;7623:29;7618:3;7614:39;7610:50;7603:57;;;7243:423;;;;:::o;7671:459::-;7723:3;7761:5;7755:12;7788:6;7783:3;7776:19;7814:4;7843:2;7838:3;7834:12;7827:19;;7880:2;7873:5;7869:14;7901:1;7911:194;7925:6;7922:1;7919:13;7911:194;;;7990:13;;-1:-1:-1;;;;;7986:38:98;7974:51;;8045:12;;;;8080:15;;;;7947:1;7940:9;7911:194;;;-1:-1:-1;8121:3:98;;7671:459;-1:-1:-1;;;;;7671:459:98:o;8135:614::-;8414:3;8403:9;8396:22;8377:4;8441:46;8482:3;8471:9;8467:19;8459:6;8441:46;:::i;:::-;-1:-1:-1;;;;;8523:31:98;;8518:2;8503:18;;8496:59;-1:-1:-1;;;;;8591:32:98;;8586:2;8571:18;;8564:60;8660:22;;;8655:2;8640:18;;8633:50;8700:43;8664:6;8728;8700:43;:::i;:::-;8692:51;8135:614;-1:-1:-1;;;;;;;8135:614:98:o;8754:258::-;8931:2;8920:9;8913:21;8894:4;8951:55;9002:2;8991:9;8987:18;8979:6;8951:55;:::i;9017:220::-;9166:2;9155:9;9148:21;9129:4;9186:45;9227:2;9216:9;9212:18;9204:6;9186:45;:::i;9242:456::-;9328:6;9336;9344;9397:2;9385:9;9376:7;9372:23;9368:32;9365:52;;;9413:1;9410;9403:12;9365:52;9449:9;9436:23;9426:33;;9506:2;9495:9;9491:18;9478:32;9468:42;;9561:2;9550:9;9546:18;9533:32;-1:-1:-1;;;;;9580:6:98;9577:30;9574:50;;;9620:1;9617;9610:12;9574:50;9643:49;9684:7;9675:6;9664:9;9660:22;9643:49;:::i;:::-;9633:59;;;9242:456;;;;;:::o;9703:247::-;9762:6;9815:2;9803:9;9794:7;9790:23;9786:32;9783:52;;;9831:1;9828;9821:12;9783:52;9870:9;9857:23;9889:31;9914:5;9889:31;:::i;10137:387::-;10213:6;10221;10229;10282:2;10270:9;10261:7;10257:23;10253:32;10250:52;;;10298:1;10295;10288:12;10250:52;10334:9;10321:23;10311:33;;10394:2;10383:9;10379:18;10366:32;10407:31;10432:5;10407:31;:::i;:::-;10457:5;-1:-1:-1;10481:37:98;10514:2;10499:18;;10481:37;:::i;11045:118::-;11131:5;11124:13;11117:21;11110:5;11107:32;11097:60;;11153:1;11150;11143:12;11168:382;11233:6;11241;11294:2;11282:9;11273:7;11269:23;11265:32;11262:52;;;11310:1;11307;11300:12;11262:52;11349:9;11336:23;11368:31;11393:5;11368:31;:::i;:::-;11418:5;-1:-1:-1;11475:2:98;11460:18;;11447:32;11488:30;11447:32;11488:30;:::i;11762:665::-;11857:6;11865;11873;11881;11934:3;11922:9;11913:7;11909:23;11905:33;11902:53;;;11951:1;11948;11941:12;11902:53;11990:9;11977:23;12009:31;12034:5;12009:31;:::i;:::-;12059:5;-1:-1:-1;12116:2:98;12101:18;;12088:32;12129:33;12088:32;12129:33;:::i;:::-;12181:7;-1:-1:-1;12235:2:98;12220:18;;12207:32;;-1:-1:-1;12290:2:98;12275:18;;12262:32;-1:-1:-1;;;;;12306:30:98;;12303:50;;;12349:1;12346;12339:12;12303:50;12372:49;12413:7;12404:6;12393:9;12389:22;12372:49;:::i;:::-;12362:59;;;11762:665;;;;;;;:::o;12432:324::-;12507:6;12515;12523;12576:2;12564:9;12555:7;12551:23;12547:32;12544:52;;;12592:1;12589;12582:12;12544:52;12628:9;12615:23;12605:33;;12657:37;12690:2;12679:9;12675:18;12657:37;:::i;12761:682::-;12855:6;12863;12871;12924:2;12912:9;12903:7;12899:23;12895:32;12892:52;;;12940:1;12937;12930:12;12892:52;12976:9;12963:23;12953:33;;13037:2;13026:9;13022:18;13009:32;-1:-1:-1;;;;;13101:2:98;13093:6;13090:14;13087:34;;;13117:1;13114;13107:12;13087:34;13155:6;13144:9;13140:22;13130:32;;13200:7;13193:4;13189:2;13185:13;13181:27;13171:55;;13222:1;13219;13212:12;13171:55;13262:2;13249:16;13288:2;13280:6;13277:14;13274:34;;;13304:1;13301;13294:12;13274:34;13357:7;13352:2;13342:6;13339:1;13335:14;13331:2;13327:23;13323:32;13320:45;13317:65;;;13378:1;13375;13368:12;13317:65;13409:2;13405;13401:11;13391:21;;13431:6;13421:16;;;;;12761:682;;;;;:::o;13448:1008::-;13576:6;13584;13592;13600;13608;13616;13624;13632;13685:3;13673:9;13664:7;13660:23;13656:33;13653:53;;;13702:1;13699;13692:12;13653:53;13738:9;13725:23;13715:33;;13798:2;13787:9;13783:18;13770:32;13811:31;13836:5;13811:31;:::i;:::-;13861:5;-1:-1:-1;13913:2:98;13898:18;;13885:32;;-1:-1:-1;13964:2:98;13949:18;;13936:32;;-1:-1:-1;14020:3:98;14005:19;;13992:33;14034;13992;14034;:::i;:::-;14086:7;-1:-1:-1;14140:3:98;14125:19;;14112:33;;-1:-1:-1;14197:3:98;14182:19;;14169:33;14211:30;14169:33;14211:30;:::i;:::-;14260:7;-1:-1:-1;14318:3:98;14303:19;;14290:33;-1:-1:-1;;;;;14335:30:98;;14332:50;;;14378:1;14375;14368:12;14332:50;14401:49;14442:7;14433:6;14422:9;14418:22;14401:49;:::i;:::-;14391:59;;;13448:1008;;;;;;;;;;;:::o;14666:452::-;14752:6;14760;14768;14776;14829:3;14817:9;14808:7;14804:23;14800:33;14797:53;;;14846:1;14843;14836:12;14797:53;14882:9;14869:23;14859:33;;14939:2;14928:9;14924:18;14911:32;14901:42;;14993:2;14982:9;14978:18;14965:32;15006:31;15031:5;15006:31;:::i;:::-;14666:452;;;;-1:-1:-1;15056:5:98;;15108:2;15093:18;15080:32;;-1:-1:-1;;14666:452:98:o;15123:383::-;15200:6;15208;15216;15269:2;15257:9;15248:7;15244:23;15240:32;15237:52;;;15285:1;15282;15275:12;15237:52;15321:9;15308:23;15298:33;;15381:2;15370:9;15366:18;15353:32;15394:31;15419:5;15394:31;:::i;15871:127::-;15932:10;15927:3;15923:20;15920:1;15913:31;15963:4;15960:1;15953:15;15987:4;15984:1;15977:15;16003:380;16082:1;16078:12;;;;16125;;;16146:61;;16200:4;16192:6;16188:17;16178:27;;16146:61;16253:2;16245:6;16242:14;16222:18;16219:38;16216:161;;16299:10;16294:3;16290:20;16287:1;16280:31;16334:4;16331:1;16324:15;16362:4;16359:1;16352:15;16216:161;;16003:380;;;:::o;16388:251::-;16458:6;16511:2;16499:9;16490:7;16486:23;16482:32;16479:52;;;16527:1;16524;16517:12;16479:52;16559:9;16553:16;16578:31;16603:5;16578:31;:::i;16644:245::-;16711:6;16764:2;16752:9;16743:7;16739:23;16735:32;16732:52;;;16780:1;16777;16770:12;16732:52;16812:9;16806:16;16831:28;16853:5;16831:28;:::i;16894:127::-;16955:10;16950:3;16946:20;16943:1;16936:31;16986:4;16983:1;16976:15;17010:4;17007:1;17000:15;17026:128;17093:9;;;17114:11;;;17111:37;;;17128:18;;:::i;17159:125::-;17224:9;;;17245:10;;;17242:36;;;17258:18;;:::i;19230:184::-;19300:6;19353:2;19341:9;19332:7;19328:23;19324:32;19321:52;;;19369:1;19366;19359:12;19321:52;-1:-1:-1;19392:16:98;;19230:184;-1:-1:-1;19230:184:98:o;19419:440::-;19504:6;19512;19520;19573:2;19561:9;19552:7;19548:23;19544:32;19541:52;;;19589:1;19586;19579:12;19541:52;19621:9;19615:16;19640:31;19665:5;19640:31;:::i;:::-;19735:2;19720:18;;19714:25;19784:2;19769:18;;19763:25;19690:5;;-1:-1:-1;19714:25:98;-1:-1:-1;19797:30:98;19763:25;19797:30;:::i;:::-;19846:7;19836:17;;;19419:440;;;;;:::o;19864:360::-;20067:6;20056:9;20049:25;20110:6;20105:2;20094:9;20090:18;20083:34;20153:2;20148;20137:9;20133:18;20126:30;20030:4;20173:45;20214:2;20203:9;20199:18;20191:6;20173:45;:::i;20229:489::-;-1:-1:-1;;;;;20498:15:98;;;20480:34;;20550:15;;20545:2;20530:18;;20523:43;20597:2;20582:18;;20575:34;;;20645:3;20640:2;20625:18;;20618:31;;;20423:4;;20666:46;;20692:19;;20684:6;20666:46;:::i;:::-;20658:54;20229:489;-1:-1:-1;;;;;;20229:489:98:o;20723:249::-;20792:6;20845:2;20833:9;20824:7;20820:23;20816:32;20813:52;;;20861:1;20858;20851:12;20813:52;20893:9;20887:16;20912:30;20936:5;20912:30;:::i;20977:561::-;-1:-1:-1;;;;;21274:15:98;;;21256:34;;21326:15;;21321:2;21306:18;;21299:43;21373:2;21358:18;;21351:34;;;21416:2;21401:18;;21394:34;;;21236:3;21459;21444:19;;21437:32;;;21199:4;;21486:46;;21512:19;;21504:6;21486:46;:::i;21887:127::-;21948:10;21943:3;21939:20;21936:1;21929:31;21979:4;21976:1;21969:15;22003:4;22000:1;21993:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "RMRK_INTERFACE()": "8d4f3bf5",
    "VERSION()": "ffa1ad74",
    "acceptAsset(uint256,uint256,uint64)": "fc3517c8",
    "acceptChild(uint256,uint256,address,uint256)": "e97ceaa8",
    "addChild(uint256,uint256,bytes)": "635490cc",
    "approve(address,uint256)": "095ea7b3",
    "approveForAssets(address,uint256)": "5ea72f36",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burn(uint256,uint256)": "b390c0ab",
    "canTokenBeEquippedWithAssetIntoSlot(address,uint256,uint64,uint64)": "074334fb",
    "childOf(uint256,uint256)": "2f32f937",
    "childrenOf(uint256)": "6f19951c",
    "directOwnerOf(uint256)": "fb25fb7a",
    "equip((uint256,uint256,uint64,uint64,uint64))": "38dcf74c",
    "getActiveAssetPriorities(uint256)": "5e94354a",
    "getActiveAssets(uint256)": "7280281e",
    "getApproved(uint256)": "081812fc",
    "getApprovedForAssets(uint256)": "e467a48f",
    "getAssetAndEquippableData(uint256,uint64)": "4e60edba",
    "getAssetMetadata(uint256,uint64)": "5e2e3292",
    "getAssetReplacements(uint256,uint64)": "df6f556b",
    "getEquipment(uint256,address,uint64)": "7507e2ae",
    "getPendingAssets(uint256)": "51532e5a",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedForAllForAssets(address,address)": "22e6d160",
    "isChildEquipped(uint256,address,uint256)": "ee1dffcf",
    "nestTransferFrom(address,address,uint256,uint256,bytes)": "064c0a3a",
    "ownerOf(uint256)": "6352211e",
    "pendingChildOf(uint256,uint256)": "a898e364",
    "pendingChildrenOf(uint256)": "44ec9344",
    "rejectAllAssets(uint256,uint256)": "e7de4de4",
    "rejectAllChildren(uint256,uint256)": "97961336",
    "rejectAsset(uint256,uint256,uint64)": "22f6da9c",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setApprovalForAllForAssets(address,bool)": "8507dc28",
    "setPriority(uint256,uint64[])": "de8e602c",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": "defa80c3",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unequip(uint256,uint64,uint64)": "c259a988"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721AddressZeroIsNotaValidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveCallerIsNotOwnerNorApprovedForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721NotApprovedOrOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToNonReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKApprovalForAssetsToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKBadPriorityListLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKChildAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKChildIndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKEquippableEquipNotAllowedByCatalog\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKIndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKIsNotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKMaxPendingChildrenReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"RMRKMaxRecursiveBurnsReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKMustUnequipFirst\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNestableTooDeep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNestableTransferToDescendant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNestableTransferToNonRMRKNestableImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNestableTransferToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNotApprovedForAssetsOrOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNotApprovedOrDirectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNotEquipped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKPendingChildIndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKSlotAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKTargetAssetCannotReceiveSlot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKTokenCannotBeEquippedWithAssetIntoSlot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKTokenDoesNotHaveAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKUnexpectedAssetId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKUnexpectedChildId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKUnexpectedNumberOfAssets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKUnexpectedNumberOfChildren\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AllChildrenRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAllForAssets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ApprovalForAssets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"replacesId\",\"type\":\"uint64\"}],\"name\":\"AssetAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"replacesId\",\"type\":\"uint64\"}],\"name\":\"AssetAddedToTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AssetPrioritySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"AssetRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"AssetSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"ChildAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"childAssetId\",\"type\":\"uint64\"}],\"name\":\"ChildAssetEquipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"childAssetId\",\"type\":\"uint64\"}],\"name\":\"ChildAssetUnequipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"ChildProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"fromPending\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"toZero\",\"type\":\"bool\"}],\"name\":\"ChildTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NestTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"equippableGroupId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"}],\"name\":\"ValidParentEquippableGroupIdSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"RMRK_INTERFACE\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"acceptAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"acceptChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"addChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approveForAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxChildrenBurns\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slotId\",\"type\":\"uint64\"}],\"name\":\"canTokenBeEquippedWithAssetIntoSlot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"childOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC7401.Child\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"}],\"name\":\"childrenOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC7401.Child[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"directOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"childAssetId\",\"type\":\"uint64\"}],\"internalType\":\"struct IERC6220.IntakeEquip\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"equip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getActiveAssetPriorities\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getActiveAssets\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApprovedForAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"getAssetAndEquippableData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"getAssetMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"newAssetId\",\"type\":\"uint64\"}],\"name\":\"getAssetReplacements\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"targetCatalogAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"}],\"name\":\"getEquipment\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"childAssetId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childEquippableAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC6220.Equipment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPendingAssets\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAllForAssets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"isChildEquipped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"nestTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"pendingChildOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC7401.Child\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"}],\"name\":\"pendingChildrenOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC7401.Child[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRejections\",\"type\":\"uint256\"}],\"name\":\"rejectAllAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRejections\",\"type\":\"uint256\"}],\"name\":\"rejectAllChildren\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"rejectAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAllForAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"priorities\",\"type\":\"uint64[]\"}],\"name\":\"setPriority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"}],\"name\":\"unequip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"RMRK team\",\"errors\":{\"RMRKMaxRecursiveBurnsReached(address,uint256)\":[{\"params\":{\"childContract\":\"Address of the collection smart contract in which the maximum number of recursive burns was reached\",\"childId\":\"ID of the child token at which the maximum number of recursive burns was reached\"}}],\"RMRKNotApprovedOrDirectOwner()\":[{\"details\":\"When a token is nested, only the direct owner (NFT parent) can mange it. In that case, approved addresses are  not allowed to manage it, in order to ensure the expected behaviour\"}]},\"events\":{\"AllChildrenRejected(uint256)\":{\"details\":\"Emitted when a token removes all a child tokens from its pending array.\",\"params\":{\"tokenId\":\"ID of the token that rejected all of the pending children\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ApprovalForAllForAssets(address,address,bool)\":{\"params\":{\"approved\":\"Boolean value signifying whether the permission has been granted (`true`) or revoked (`false`)\",\"operator\":\"Address of the account that has been granted the approval to manage the token's assets on all of  the tokens\",\"owner\":\"Address of the account that has granted the approval for all assets on all of their tokens\"}},\"ApprovalForAssets(address,address,uint256)\":{\"details\":\"Approvals must be cleared on transfer\",\"params\":{\"approved\":\"Address of the account that has been granted approval to manage the token's assets\",\"owner\":\"Address of the account that has granted the approval for all token's assets\",\"tokenId\":\"ID of the token on which the approval was granted\"}},\"AssetAccepted(uint256,uint64,uint64)\":{\"params\":{\"assetId\":\"ID of the asset that was accepted\",\"replacesId\":\"ID of the asset that was replaced\",\"tokenId\":\"ID of the token that had a new asset accepted\"}},\"AssetAddedToTokens(uint256[],uint64,uint64)\":{\"params\":{\"assetId\":\"ID of the asset that has been added to the token's pending assets array\",\"replacesId\":\"ID of the asset that would be replaced\",\"tokenIds\":\"An array of token IDs that received a new pending asset\"}},\"AssetPrioritySet(uint256)\":{\"params\":{\"tokenId\":\"ID of the token that had the asset priority array updated\"}},\"AssetRejected(uint256,uint64)\":{\"params\":{\"assetId\":\"ID of the asset that was rejected\",\"tokenId\":\"ID of the token that had an asset rejected\"}},\"AssetSet(uint64)\":{\"params\":{\"assetId\":\"ID of the asset that was initialized\"}},\"ChildAccepted(uint256,uint256,address,uint256)\":{\"details\":\"Emitted when a parent token accepts a token from its pending array, migrating it to the active array.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of the newly accepted child token in the parent token's active children array\",\"tokenId\":\"ID of the token that accepted a new child token\"}},\"ChildAssetEquipped(uint256,uint64,uint64,uint256,address,uint64)\":{\"params\":{\"assetId\":\"ID of the asset associated with the token we are equipping into\",\"childAddress\":\"Address of the child token's collection\",\"childAssetId\":\"ID of the asset associated with the token we are equipping\",\"childId\":\"ID of the child token we are equipping into the slot\",\"slotPartId\":\"ID of the slot we are using to equip\",\"tokenId\":\"ID of the token that had an asset equipped\"}},\"ChildAssetUnequipped(uint256,uint64,uint64,uint256,address,uint64)\":{\"params\":{\"assetId\":\"ID of the asset associated with the token we are unequipping out of\",\"childAddress\":\"Address of the collection that a token that is being unequipped belongs to\",\"childAssetId\":\"ID of the asset associated with the token we are unequipping\",\"childId\":\"ID of the token being unequipped\",\"slotPartId\":\"ID of the slot we are unequipping from\",\"tokenId\":\"ID of the token that had an asset unequipped\"}},\"ChildProposed(uint256,uint256,address,uint256)\":{\"details\":\"Emitted when a child NFT is added to a token's pending array.\",\"params\":{\"childAddress\":\"Address of the proposed child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of the proposed child token in the parent token's pending children array\",\"tokenId\":\"ID of the token that received a new pending child token\"}},\"ChildTransferred(uint256,uint256,address,uint256,bool,bool)\":{\"details\":\"Emitted when a token transfers a child from itself, transferring ownership to the root owner.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of a child in the array from which it is being transferred\",\"fromPending\":\"A boolean value signifying whether the token was in the pending child tokens array (`true`) or  in the active child tokens array (`false`)\",\"toZero\":\"A boolean value signifying whether the token is being transferred to the `0x0` address (`true`) or  not (`false`)\",\"tokenId\":\"ID of the token that transferred a child token\"}},\"NestTransfer(address,address,uint256,uint256,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\",\"params\":{\"from\":\"Address of the previous immediate owner, which is a smart contract if the token was nested.\",\"fromTokenId\":\"ID of the previous parent token. If the token was not nested before, the value should be `0`\",\"to\":\"Address of the new immediate owner, which is a smart contract if the token is being nested.\",\"toTokenId\":\"ID of the new parent token. If the token is not being nested, the value should be `0`\",\"tokenId\":\"ID of the token being transferred\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"ValidParentEquippableGroupIdSet(uint64,uint64,address)\":{\"params\":{\"equippableGroupId\":\"ID of the equippable group being marked as equippable into the slot associated with  `slotPartId` of the `parentAddress` collection\",\"parentAddress\":\"Address of the collection into which the parts belonging to `equippableGroupId` can be  equipped\",\"slotPartId\":\"ID of the slot part of the catalog into which the parts belonging to the equippable group  associated with `equippableGroupId` can be equipped\"}}},\"kind\":\"dev\",\"methods\":{\"acceptAsset(uint256,uint256,uint64)\":{\"details\":\"Migrates the asset from the token's pending asset array to the token's active asset array.Active assets cannot be removed by anyone, but can be replaced by a new asset.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - `index` must be in range of the length of the pending asset array.Emits an {AssetAccepted} event.\",\"params\":{\"assetId\":\"ID of the asset that is being accepted\",\"index\":\"Index of the asset in the pending array to accept\",\"tokenId\":\"ID of the token for which to accept the pending asset\"}},\"acceptChild(uint256,uint256,address,uint256)\":{\"details\":\"This moves the child token from parent token's pending child tokens array into the active child tokens  array.\",\"params\":{\"childAddress\":\"Address of the collection smart contract of the child token expected to be located at the  specified index of the given parent token's pending children array\",\"childId\":\"ID of the child token expected to be located at the specified index of the given parent token's  pending children array\",\"childIndex\":\"Index of a child tokem in the given parent's pending children array\",\"parentId\":\"ID of the parent token for which the child token is being accepted\"}},\"addChild(uint256,uint256,bytes)\":{\"details\":\"This adds the child token into the given parent token's pending child tokens array.Requirements:  - `directOwnerOf` on the child contract must resolve to the called contract.  - the pending array of the parent contract must not be full.\",\"params\":{\"childId\":\"ID of the new proposed child token\",\"data\":\"Additional data with no specified format\",\"parentId\":\"ID of the parent token to receive the new child token\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account.The approval is cleared when the token is transferred.Only a single account can be approved at a time, so approving the zero address clears previous approvals.Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist.Emits an {Approval} event.\",\"params\":{\"to\":\"Address receiving the approval\",\"tokenId\":\"ID of the token for which the approval is being granted\"}},\"approveForAssets(address,uint256)\":{\"details\":\"This can only be called by the owner of the token or by an account that has been granted permission to  manage all of the owner's assets.\",\"params\":{\"to\":\"Address of the account to receive the approval to the specified token\",\"tokenId\":\"ID of the token for which we are granting the permission\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"Address of the account being checked\"},\"returns\":{\"_0\":\"The balance of the given account\"}},\"burn(uint256)\":{\"details\":\"In case the token has any child tokens, the execution will be reverted.\",\"params\":{\"tokenId\":\"ID of the token to burn\"}},\"burn(uint256,uint256)\":{\"details\":\"When a token is burned, all of its child tokens are recursively burned as well.When specifying the maximum recursive burns, the execution will be reverted if there are more children to be  burned.Setting the `maxRecursiveBurn` value to 0 will only attempt to burn the specified token and revert if there  are any child tokens present.The approvals are cleared when the token is burned.Requirements:  - `tokenId` must exist.Emits a {Transfer} event.\",\"params\":{\"maxRecursiveBurns\":\"Maximum number of tokens to recursively burn\",\"tokenId\":\"ID of the token to burn\"},\"returns\":{\"_0\":\"Number of recursively burned children\"}},\"canTokenBeEquippedWithAssetIntoSlot(address,uint256,uint64,uint64)\":{\"params\":{\"assetId\":\"ID of the asset associated with the token we want to equip\",\"parent\":\"Address of the parent token's smart contract\",\"slotId\":\"ID of the slot that we want to equip the token into\",\"tokenId\":\"ID of the token we want to equip\"},\"returns\":{\"_0\":\"A boolean indicating whether the token with the given asset can be equipped into the desired slot\"}},\"childOf(uint256,uint256)\":{\"details\":\"Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"index\":\"Index of the child token in the parent token's active child tokens array\",\"parentId\":\"ID of the parent token for which the child is being retrieved\"},\"returns\":{\"_0\":\"A Child struct containing data about the specified child\"}},\"childrenOf(uint256)\":{\"details\":\"Returns array of Child structs existing for parent token.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"parentId\":\"ID of the parent token for which to retrieve the active child tokens\"},\"returns\":{\"_0\":\"An array of Child structs containing the parent token's active child tokens\"}},\"directOwnerOf(uint256)\":{\"details\":\"If the immediate owner is another token, the address returned, should be the one of the parent token's  collection smart contract.\",\"params\":{\"tokenId\":\"ID of the token for which the RMRK owner is being retrieved\"},\"returns\":{\"_0\":\"Address of the given token's owner\",\"_1\":\"The ID of the parent token. Should be `0` if the owner is an externally owned account\",\"_2\":\"The boolean value signifying whether the owner is an NFT or not\"}},\"equip((uint256,uint256,uint64,uint64,uint64))\":{\"details\":\"The `IntakeEquip` stuct contains the following data:  [      tokenId,      childIndex,      assetId,      slotPartId,      childAssetId  ]\",\"params\":{\"data\":\"An `IntakeEquip` struct specifying the equip data\"}},\"getActiveAssetPriorities(uint256)\":{\"details\":\"Asset priorities are a non-sequential array of uint64 values with an array size equal to active asset  priorites.\",\"params\":{\"tokenId\":\"ID of the token for which to retrieve the priorities of the active assets\"},\"returns\":{\"_0\":\"An array of priorities of the active assets of the given token\"}},\"getActiveAssets(uint256)\":{\"details\":\"Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.You can safely get 10k\",\"params\":{\"tokenId\":\"ID of the token to retrieve the IDs of the active assets\"},\"returns\":{\"_0\":\"An array of active asset IDs of the given token\"}},\"getApproved(uint256)\":{\"details\":\"Requirements:  - `tokenId` must exist.\",\"params\":{\"tokenId\":\"ID of the token to check for approval\"},\"returns\":{\"_0\":\"Address of the account approved to manage the token\"}},\"getApprovedForAssets(uint256)\":{\"params\":{\"tokenId\":\"ID of the token we are checking\"},\"returns\":{\"_0\":\"Address of the account that is approved to manage the token\"}},\"getAssetAndEquippableData(uint256,uint64)\":{\"params\":{\"assetId\":\"ID of the asset of which we are retrieving\",\"tokenId\":\"ID of the token for which to retrieve the asset\"},\"returns\":{\"_0\":\"The metadata URI of the asset\",\"_1\":\"ID of the equippable group this asset belongs to\",\"_2\":\"The address of the catalog the part belongs to\",\"_3\":\"An array of IDs of parts included in the asset\"}},\"getAssetMetadata(uint256,uint64)\":{\"details\":\"Assets are stored by reference mapping `_assets[assetId]`.Can be overriden to implement enumerate, fallback or other custom logic.\",\"params\":{\"assetId\":\"Asset Id, must be in the active assets array\",\"tokenId\":\"ID of the token from which to retrieve the asset metadata\"},\"returns\":{\"_0\":\"The metadata of the asset belonging to the specified index in the token's active assets  array\"}},\"getAssetReplacements(uint256,uint64)\":{\"details\":\"Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.\",\"params\":{\"newAssetId\":\"ID of the pending asset which will be accepted\",\"tokenId\":\"ID of the token to check\"},\"returns\":{\"_0\":\"ID of the asset which will be replaced\"}},\"getEquipment(uint256,address,uint64)\":{\"details\":\"The `Equipment` struct consists of the following data:  [      assetId,      childAssetId,      childId,      childEquippableAddress  ]\",\"params\":{\"slotPartId\":\"ID of the `Slot` part that we are checking for equipped objects\",\"targetCatalogAddress\":\"Address of the `Catalog` associated with the `Slot` part of the token\",\"tokenId\":\"ID of the token for which we are retrieving the equipped object\"},\"returns\":{\"_0\":\"The `Equipment` struct containing data about the equipped object\"}},\"getPendingAssets(uint256)\":{\"details\":\"Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.\",\"params\":{\"tokenId\":\"ID of the token to retrieve the IDs of the pending assets\"},\"returns\":{\"_0\":\"An array of pending asset IDs of the given token\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"operator\":\"Address being checked for approval\",\"owner\":\"Address of the owner of the tokens\"},\"returns\":{\"_0\":\"A boolean value signifying whether the *operator* is allowed to manage the tokens of the *owner* (`true`)  or not (`false`)\"}},\"isApprovedForAllForAssets(address,address)\":{\"details\":\"See {setApprovalForAllForAssets}.\",\"params\":{\"operator\":\"Address of the account that we are checking whether it has the operator role or not\",\"owner\":\"Address of the account that we are checking for whether it has granted the operator role\"},\"returns\":{\"_0\":\"A boolean value indicating wehter the account we are checking has been granted the operator role\"}},\"isChildEquipped(uint256,address,uint256)\":{\"details\":\"This is used to prevent from transferring a child that is equipped.\",\"params\":{\"childAddress\":\"Address of the child token's smart contract\",\"childId\":\"ID of the child token\",\"tokenId\":\"ID of the parent token for which we are querying for\"},\"returns\":{\"_0\":\"A boolean value indicating whether the child token is equipped into the given token or not\"}},\"nestTransferFrom(address,address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"Additional data with no specified format, sent in the addChild call\",\"destinationId\":\"ID of the token to receive the token being transferred\",\"from\":\"Address of the direct owner of the token to be transferred\",\"to\":\"Address of the receiving token's collection smart contract\",\"tokenId\":\"ID of the token being transferred\"}},\"ownerOf(uint256)\":{\"details\":\"The *root* owner of the token is an externally owned account (EOA). If the given token is child of another  NFT, this will return an EOA address. Otherwise, if the token is owned by an EOA, this EOA wil be returned.\",\"params\":{\"tokenId\":\"ID of the token for which the *root* owner has been retrieved\"},\"returns\":{\"_0\":\"The *root* owner of the token\"}},\"pendingChildOf(uint256,uint256)\":{\"details\":\"Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"index\":\"Index of the child token in the parent token's pending child tokens array\",\"parentId\":\"ID of the parent token for which the pending child token is being retrieved\"},\"returns\":{\"_0\":\"A Child struct containting data about the specified child\"}},\"pendingChildrenOf(uint256)\":{\"details\":\"Returns array of pending Child structs existing for given parent.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"parentId\":\"ID of the parent token for which to retrieve the pending child tokens\"},\"returns\":{\"_0\":\"An array of Child structs containing the parent token's pending child tokens\"}},\"rejectAllAssets(uint256,uint256)\":{\"details\":\"Effecitvely deletes the pending array.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.Emits a {AssetRejected} event with assetId = 0.\",\"params\":{\"maxRejections\":\"Maximum number of expected assets to reject, used to prevent from rejecting assets which  arrive just before this operation.\",\"tokenId\":\"ID of the token of which to clear the pending array.\"}},\"rejectAllChildren(uint256,uint256)\":{\"details\":\"Removes the children from the pending array mapping.This does not update the ownership storage data on children. If necessary, ownership can be reclaimed by the  rootOwner of the previous parent.Requirements: Requirements: - `parentId` must exist\",\"params\":{\"maxRejections\":\"Maximum number of expected children to reject, used to prevent from rejecting children which  arrive just before this operation.\",\"parentId\":\"ID of the parent token for which to reject all of the pending tokens.\"}},\"rejectAsset(uint256,uint256,uint64)\":{\"details\":\"Removes the asset from the token's pending asset array.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - `index` must be in range of the length of the pending asset array.Emits a {AssetRejected} event.\",\"params\":{\"assetId\":\"ID of the asset that is being rejected\",\"index\":\"Index of the asset in the pending array to be rejected\",\"tokenId\":\"ID of the token that the asset is being rejected from\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must exist and be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.Emits a {Transfer} event.\",\"params\":{\"from\":\"Address to transfer the tokens from\",\"to\":\"Address to transfer the tokens to\",\"tokenId\":\"ID of the token to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must exist and be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data without a specified format to be sent along with the token transaction\",\"from\":\"Address to transfer the tokens from\",\"to\":\"Address to transfer the tokens to\",\"tokenId\":\"ID of the token to transfer\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.Requirements: - The `operator` cannot be the caller.Emits an {ApprovalForAll} event.\",\"params\":{\"approved\":\"A boolean value signifying whether the approval is being granted (`true`) or (`revoked`)\",\"operator\":\"Address of the operator being managed\"}},\"setApprovalForAllForAssets(address,bool)\":{\"details\":\"Operators can call {acceptAsset}, {rejectAsset}, {rejectAllAssets} or {setPriority} for any token  owned by the caller.Requirements:  - The `operator` cannot be the caller.Emits an {ApprovalForAllForAssets} event.\",\"params\":{\"approved\":\"The boolean value indicating whether the operator role is being granted (`true`) or revoked  (`false`)\",\"operator\":\"Address of the account to which the operator role is granted or revoked from\"}},\"setPriority(uint256,uint64[])\":{\"details\":\"The priority array is a non-sequential list of `uint64`s, where the lowest value is considered highest  priority.Value `0` of a priority is a special case equivalent to unitialized.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - The length of `priorities` must be equal the length of the active assets array.Emits a {AssetPrioritySet} event.\",\"params\":{\"priorities\":\"An array of priority values\",\"tokenId\":\"ID of the token to set the priorities for\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)\":{\"details\":\"When transferring a child token, the owner of the token is set to `to`, or is not updated in the event of  `to` being the `0x0` address.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract.\",\"childId\":\"ID of the child token in its own collection smart contract.\",\"childIndex\":\"Index of a token we are transferring, in the array it belongs to (can be either active array or  pending array)\",\"data\":\"Additional data with no specified format, sent in call to `_to`\",\"destinationId\":\"ID of the token to receive this child token (MUST be 0 if the destination is not a token)\",\"isPending\":\"A boolean value indicating whether the child token being transferred is in the pending array of  the parent token (`true`) or in the active array (`false`)\",\"to\":\"Address to which to transfer the token to\",\"tokenId\":\"ID of the parent token from which the child token is being transferred\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.Emits a {Transfer} event.\",\"params\":{\"from\":\"Address from which to transfer the token from\",\"to\":\"Address to which to transfer the token to\",\"tokenId\":\"ID of the token to transfer\"}},\"unequip(uint256,uint64,uint64)\":{\"details\":\"This can only be called by the owner of the token or by an account that has been granted permission to  manage the given token by the current owner.\",\"params\":{\"assetId\":\"ID of the parent's asset that contains the `Slot` into which the child is equipped\",\"slotPartId\":\"ID of the `Slot` from which to unequip the child\",\"tokenId\":\"ID of the parent from which the child is being unequipped\"}}},\"stateVariables\":{\"_tokenApprovalsForAssets\":{\"details\":\"The approver is necessary so approvals are invalidated for nested children on transfer.WARNING: If a child NFT returns the original root owner, old permissions would be active again.\"}},\"title\":\"RMRKEquippable\",\"version\":1},\"userdoc\":{\"errors\":{\"ERC721AddressZeroIsNotaValidOwner()\":[{\"notice\":\"Attempting to grant the token to 0x0 address\"}],\"ERC721ApprovalToCurrentOwner()\":[{\"notice\":\"Attempting to grant approval to the current owner of the token\"}],\"ERC721ApproveCallerIsNotOwnerNorApprovedForAll()\":[{\"notice\":\"Attempting to grant approval when not being owner or approved for all should not be permitted\"}],\"ERC721ApproveToCaller()\":[{\"notice\":\"Attempting to grant approval to self\"}],\"ERC721InvalidTokenId()\":[{\"notice\":\"Attempting to use an invalid token ID\"}],\"ERC721NotApprovedOrOwner()\":[{\"notice\":\"Attempting to manage a token without being its owner or approved by the owner\"}],\"ERC721TransferFromIncorrectOwner()\":[{\"notice\":\"Attempting to transfer the token from an address that is not the owner\"}],\"ERC721TransferToNonReceiverImplementer()\":[{\"notice\":\"Attempting to safe transfer to an address that is unable to receive the token\"}],\"ERC721TransferToTheZeroAddress()\":[{\"notice\":\"Attempting to transfer the token to a 0x0 address\"}],\"RMRKApprovalForAssetsToCurrentOwner()\":[{\"notice\":\"Attempting to grant approval of assets to their current owner\"}],\"RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll()\":[{\"notice\":\"Attempting to grant approval of assets without being the caller or approved for all\"}],\"RMRKBadPriorityListLength()\":[{\"notice\":\"Attempting to set the priorities with an array of length that doesn't match the length of active assets array\"}],\"RMRKChildAlreadyExists()\":[{\"notice\":\"Attempting to accept a child that has already been accepted\"}],\"RMRKChildIndexOutOfRange()\":[{\"notice\":\"Attempting to interact with a child, using index that is higher than the number of children\"}],\"RMRKEquippableEquipNotAllowedByCatalog()\":[{\"notice\":\"Attempting to equip a `Part` with a child not approved by the Catalog\"}],\"RMRKIndexOutOfRange()\":[{\"notice\":\"Attempting to interact with an asset, using index greater than number of assets\"}],\"RMRKIsNotContract()\":[{\"notice\":\"Attempting to interact with an end-user account when the contract account is expected\"}],\"RMRKMaxPendingChildrenReached()\":[{\"notice\":\"Attempting to add a pending child after the number of pending children has reached the limit (default limit is 128)\"}],\"RMRKMaxRecursiveBurnsReached(address,uint256)\":[{\"notice\":\"Attempting to burn a total number of recursive children higher than maximum set\"}],\"RMRKMustUnequipFirst()\":[{\"notice\":\"Attempting to transfer a child before it is unequipped\"}],\"RMRKNestableTooDeep()\":[{\"notice\":\"Attempting to nest a child over the nestable limit (current limit is 100 levels of nesting)\"}],\"RMRKNestableTransferToDescendant()\":[{\"notice\":\"Attempting to nest the token to own descendant, which would create a loop and leave the looped tokens in limbo\"}],\"RMRKNestableTransferToNonRMRKNestableImplementer()\":[{\"notice\":\"Attempting to nest the token to a smart contract that doesn't support nesting\"}],\"RMRKNestableTransferToSelf()\":[{\"notice\":\"Attempting to nest the token into itself\"}],\"RMRKNotApprovedForAssetsOrOwner()\":[{\"notice\":\"Attempting to manage an asset without owning it or having been granted permission by the owner to do so\"}],\"RMRKNotApprovedOrDirectOwner()\":[{\"notice\":\"Attempting to interact with a token without being its owner or having been granted permission by the  owner to do so\"}],\"RMRKNotEquipped()\":[{\"notice\":\"Attempting to unequip an item that isn't equipped\"}],\"RMRKPendingChildIndexOutOfRange()\":[{\"notice\":\"Attempting to interact with a pending child using an index greater than the size of pending array\"}],\"RMRKSlotAlreadyUsed()\":[{\"notice\":\"Attempting to equip an item into a slot that already has an item equipped\"}],\"RMRKTargetAssetCannotReceiveSlot()\":[{\"notice\":\"Attempting to equip an item into a `Slot` that the target asset does not implement\"}],\"RMRKTokenCannotBeEquippedWithAssetIntoSlot()\":[{\"notice\":\"Attempting to equip a child into a `Slot` and parent that the child's collection doesn't support\"}],\"RMRKTokenDoesNotHaveAsset()\":[{\"notice\":\"Attempting to compose a NFT of a token without active assets\"}],\"RMRKUnexpectedAssetId()\":[{\"notice\":\"Attempting to accept or reject an asset which does not match the one at the specified index\"}],\"RMRKUnexpectedChildId()\":[{\"notice\":\"Attempting to accept or transfer a child which does not match the one at the specified index\"}],\"RMRKUnexpectedNumberOfAssets()\":[{\"notice\":\"Attempting to reject all pending assets but more assets than expected are pending\"}],\"RMRKUnexpectedNumberOfChildren()\":[{\"notice\":\"Attempting to reject all pending children but children assets than expected are pending\"}]},\"events\":{\"AllChildrenRejected(uint256)\":{\"notice\":\"Used to notify listeners that all pending child tokens of a given token have been rejected.\"},\"ApprovalForAllForAssets(address,address,bool)\":{\"notice\":\"Used to notify listeners that owner has granted approval to the user to manage assets of all of their  tokens.\"},\"ApprovalForAssets(address,address,uint256)\":{\"notice\":\"Used to notify listeners that owner has granted an approval to the user to manage the assets of a  given token.\"},\"AssetAccepted(uint256,uint64,uint64)\":{\"notice\":\"Used to notify listeners that an asset object at `assetId` is accepted by the token and migrated  from token's pending assets array to active assets array of the token.\"},\"AssetAddedToTokens(uint256[],uint64,uint64)\":{\"notice\":\"Used to notify listeners that an asset object at `assetId` is added to token's pending asset  array.\"},\"AssetPrioritySet(uint256)\":{\"notice\":\"Used to notify listeners that token's prioritiy array is reordered.\"},\"AssetRejected(uint256,uint64)\":{\"notice\":\"Used to notify listeners that an asset object at `assetId` is rejected from token and is dropped  from the pending assets array of the token.\"},\"AssetSet(uint64)\":{\"notice\":\"Used to notify listeners that an asset object is initialized at `assetId`.\"},\"ChildAccepted(uint256,uint256,address,uint256)\":{\"notice\":\"Used to notify listeners that a new child token was accepted by the parent token.\"},\"ChildAssetEquipped(uint256,uint64,uint64,uint256,address,uint64)\":{\"notice\":\"Used to notify listeners that a child's asset has been equipped into one of its parent assets.\"},\"ChildAssetUnequipped(uint256,uint64,uint64,uint256,address,uint64)\":{\"notice\":\"Used to notify listeners that a child's asset has been unequipped from one of its parent assets.\"},\"ChildProposed(uint256,uint256,address,uint256)\":{\"notice\":\"Used to notify listeners that a new token has been added to a given token's pending children array.\"},\"ChildTransferred(uint256,uint256,address,uint256,bool,bool)\":{\"notice\":\"Used to notify listeners a child token has been transferred from parent token.\"},\"NestTransfer(address,address,uint256,uint256,uint256)\":{\"notice\":\"Used to notify listeners that the token is being transferred.\"},\"ValidParentEquippableGroupIdSet(uint64,uint64,address)\":{\"notice\":\"Used to notify listeners that the assets belonging to a `equippableGroupId` have been marked as  equippable into a given slot and parent\"}},\"kind\":\"user\",\"methods\":{\"VERSION()\":{\"notice\":\"Version of the @rmrk-team/evm-contracts package\"},\"acceptAsset(uint256,uint256,uint64)\":{\"notice\":\"Accepts a asset at from the pending array of given token.\"},\"acceptChild(uint256,uint256,address,uint256)\":{\"notice\":\"Used to accept a pending child token for a given parent token.\"},\"addChild(uint256,uint256,bytes)\":{\"notice\":\"Used to add a child token to a given parent token.\"},\"approve(address,uint256)\":{\"notice\":\"Used to grant a one-time approval to manage one's token.\"},\"approveForAssets(address,uint256)\":{\"notice\":\"Used to grant approvals for specific tokens to a specified address.\"},\"balanceOf(address)\":{\"notice\":\"Used to retrieve the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"notice\":\"Used to burn a given token.\"},\"burn(uint256,uint256)\":{\"notice\":\"Used to burn a given token.\"},\"canTokenBeEquippedWithAssetIntoSlot(address,uint256,uint64,uint64)\":{\"notice\":\"Used to verify whether a token can be equipped into a given parent's slot.\"},\"childOf(uint256,uint256)\":{\"notice\":\"Used to retrieve a specific active child token for a given parent token.\"},\"childrenOf(uint256)\":{\"notice\":\"Used to retrieve the active child tokens of a given parent token.\"},\"directOwnerOf(uint256)\":{\"notice\":\"Used to retrieve the immediate owner of the given token.\"},\"equip((uint256,uint256,uint64,uint64,uint64))\":{\"notice\":\"Used to equip a child into a token.\"},\"getActiveAssetPriorities(uint256)\":{\"notice\":\"Used to retrieve the priorities of the active resoources of a given token.\"},\"getActiveAssets(uint256)\":{\"notice\":\"Used to retrieve IDs of the active assets of given token.\"},\"getApproved(uint256)\":{\"notice\":\"Used to retrieve the account approved to manage given token.\"},\"getApprovedForAssets(uint256)\":{\"notice\":\"Used to get the address of the user that is approved to manage the specified token from the current  owner.\"},\"getAssetAndEquippableData(uint256,uint64)\":{\"notice\":\"Used to get the asset and equippable data associated with given `assetId`.\"},\"getAssetMetadata(uint256,uint64)\":{\"notice\":\"Used to fetch the asset metadata of the specified token's active asset with the given index.\"},\"getAssetReplacements(uint256,uint64)\":{\"notice\":\"Used to retrieve the asset that will be replaced if a given asset from the token's pending array  is accepted.\"},\"getEquipment(uint256,address,uint64)\":{\"notice\":\"Used to get the Equipment object equipped into the specified slot of the desired token.\"},\"getPendingAssets(uint256)\":{\"notice\":\"Used to retrieve IDs of the pending assets of given token.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Used to check if the given address is allowed to manage the tokens of the specified address.\"},\"isApprovedForAllForAssets(address,address)\":{\"notice\":\"Used to check whether the address has been granted the operator role by a given address or not.\"},\"isChildEquipped(uint256,address,uint256)\":{\"notice\":\"Used to check whether the token has a given child equipped.\"},\"nestTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Used to transfer the token into another token.\"},\"ownerOf(uint256)\":{\"notice\":\"Used to retrieve the *root* owner of a given token.\"},\"pendingChildOf(uint256,uint256)\":{\"notice\":\"Used to retrieve a specific pending child token from a given parent token.\"},\"pendingChildrenOf(uint256)\":{\"notice\":\"Used to retrieve the pending child tokens of a given parent token.\"},\"rejectAllAssets(uint256,uint256)\":{\"notice\":\"Rejects all assets from the pending array of a given token.\"},\"rejectAllChildren(uint256,uint256)\":{\"notice\":\"Used to reject all pending children of a given parent token.\"},\"rejectAsset(uint256,uint256,uint64)\":{\"notice\":\"Rejects a asset from the pending array of given token.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Used to safely transfer a given token token from `from` to `to`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Used to safely transfer a given token token from `from` to `to`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Used to approve or remove `operator` as an operator for the caller.\"},\"setApprovalForAllForAssets(address,bool)\":{\"notice\":\"Used to add or remove an operator of assets for the caller.\"},\"setPriority(uint256,uint64[])\":{\"notice\":\"Sets a new priority array for a given token.\"},\"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)\":{\"notice\":\"Used to transfer a child token from a given parent token.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers a given token from `from` to `to`.\"},\"unequip(uint256,uint64,uint64)\":{\"notice\":\"Used to unequip child from parent token.\"}},\"notice\":\"Smart contract of the RMRK Equippable module.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKEquippable.sol\":\"RMRKEquippable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rmrk-team/=node_modules/@rmrk-team/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/catalog/IRMRKCatalog.sol\":{\"keccak256\":\"0xf14074edcd3bcef665f17659d206465bd9ea5cd7999acf28065e623f88f04a86\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c967f0cc9fbf3dd16f8759d051220e750b8fca69ec503f33bf25c95ef5486403\",\"dweb:/ipfs/QmecpKwQKAPrd85Pi2jKTWfEjFrg2ZudjmMNEFhtxRbrat\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/core/RMRKCore.sol\":{\"keccak256\":\"0x2aed82db53e50724cefa3ee8ca62e7b9e4fb170a2b324cd5f518914480ba9b5b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://962a4c262e1710c8b0f3bb94f77513ee3aa1e561c85d9acb06960f36ede3bba7\",\"dweb:/ipfs/QmTQKxurANXy8HCtdLLcaxfwCPMoVJPKpYxtsj9CwiYQaZ\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/IERC6220.sol\":{\"keccak256\":\"0x4fcd6ea56d18b4daee46873794c002ad78160ba4a07d4f49362313c38ec0e28a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bbc28006dd8439bc0e1f332679d36a4c8b8a46ae2e4f37a5e4c0bdaaab85655e\",\"dweb:/ipfs/QmU1eN6R97EhpUUsQWD4qoz3KCsyMHZ8GvihVPnAoEk5dU\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKEquippable.sol\":{\"keccak256\":\"0x6bfea49c4d924f83e0c0b8e63b6f81953f28b6433b36bbf9678828bf32662cb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d70c5eed89802d32821b12c4b2ce76fdbba20eb211dbdf4570a334cb5f93c62\",\"dweb:/ipfs/QmV1GfvqPSaxnzTB5fnjpDYPe9BqxBnts7sWKNWyK5p3pp\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKErrors.sol\":{\"keccak256\":\"0x7d6a3648047dca37d1e21550c723d960e4c9d3783e3d0efb84602266cce45b35\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://170064f8e2d6211e251a7610236beada23c8c598987cb3dbd62826007a4ca553\",\"dweb:/ipfs/QmSgM9T5Q2azFicGQsiXPG8YZSiDEGgRYeHBUe2iAcP3gN\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKLib.sol\":{\"keccak256\":\"0x953bb028766f17fdafddd5a49b47d76058c4a8e18dee358a51ebe6a2927033db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://40bb3aec2b5942591536a3d4428cb08154f7ab80d3b94c3e4ccf85ca053606d8\",\"dweb:/ipfs/QmdyYsoYthTGFjcEQ35Ra57qmywiXh6UxDCyvAJZGKsUJH\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/AbstractMultiAsset.sol\":{\"keccak256\":\"0x6fe69bc7dcd8a51af76e294101955f216d486385db5cf5ff52d6c227c68a2deb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f75b0fda22fadeb0072c488dd77167796dce09b69886d3506dff95347c08708\",\"dweb:/ipfs/QmcdMSEq8zBsQVF9Kw2HQageFaCr4pDh7raAEBMdGaSyWb\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/IERC5773.sol\":{\"keccak256\":\"0x4e5b78824f54620c5b610a5e2c944cd159b8b054065fabf3af2aaea2f3360d89\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://713b179262117f3ff772aed51aa26e48bf7e3ff5c7ec6588060a887e634fe0f1\",\"dweb:/ipfs/Qme2B9DrgB93HPQy96Pia23jzrkdmUrVQPHdAqCxA8dzYY\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/IERC7401.sol\":{\"keccak256\":\"0x5feb73f09676b2961b45e5f165d95ff8197609e01e115590a627a47940690fb3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://93ea41ba10af02b385dbbe036e85f286f6f923e8adea11eb28ed21890a1fe953\",\"dweb:/ipfs/QmRgJKeYyh8VNNtdKF5Pcyei1qKDKNE5zmvXRt3Txoapfo\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/RMRKNestable.sol\":{\"keccak256\":\"0x97d3668f636376f3235ab4a8ffd44b0dd031d04d0d7f09ff65f850a747d959ae\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8071f816bc1d03ef7848bc6df0c0990f1fb2d972a736f9444824e058b93ed45\",\"dweb:/ipfs/QmZdgThWs3hdq7ZXJhgc3519vR2x2knwm9ULUfYVroRoHj\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x14a91bf4e2ca7a5423b903c551aedb08c98f9d089e429998f9711286c0c17882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e07319bbc8447047f9fa596d1af95ab5d235661b5f48159eaee6144d45261f0\",\"dweb:/ipfs/QmdAvUL5jmAx9ExoyR6199KUmkXfd8q4SfBuvJXygKHNbx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721AddressZeroIsNotaValidOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApproveCallerIsNotOwnerNorApprovedForAll"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721InvalidTokenId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721NotApprovedOrOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToNonReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToTheZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKApprovalForAssetsToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKBadPriorityListLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKChildAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKChildIndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKEquippableEquipNotAllowedByCatalog"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKIndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKIsNotContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKMaxPendingChildrenReached"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "childContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RMRKMaxRecursiveBurnsReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKMustUnequipFirst"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNestableTooDeep"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNestableTransferToDescendant"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNestableTransferToNonRMRKNestableImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNestableTransferToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNotApprovedForAssetsOrOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNotApprovedOrDirectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNotEquipped"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKPendingChildIndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKSlotAlreadyUsed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKTargetAssetCannotReceiveSlot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKTokenCannotBeEquippedWithAssetIntoSlot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKTokenDoesNotHaveAsset"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKUnexpectedAssetId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKUnexpectedChildId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKUnexpectedNumberOfAssets"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKUnexpectedNumberOfChildren"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AllChildrenRejected",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAllForAssets",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ApprovalForAssets",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "replacesId",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssetAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "replacesId",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssetAddedToTokens",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssetPrioritySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssetRejected",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssetSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ChildAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "childAssetId",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChildAssetEquipped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "childAssetId",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChildAssetUnequipped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ChildProposed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "fromPending",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "toZero",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChildTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NestTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "equippableGroupId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "parentAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ValidParentEquippableGroupIdSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RMRK_INTERFACE",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptAsset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptChild"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addChild"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveForAssets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxChildrenBurns",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "parent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "slotId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canTokenBeEquippedWithAssetIntoSlot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "childOf",
          "outputs": [
            {
              "internalType": "struct IERC7401.Child",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "childrenOf",
          "outputs": [
            {
              "internalType": "struct IERC7401.Child[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "directOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IERC6220.IntakeEquip",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "childIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "assetId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "slotPartId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "childAssetId",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "equip"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveAssetPriorities",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveAssets",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApprovedForAssets",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssetAndEquippableData",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssetMetadata",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "newAssetId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssetReplacements",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "targetCatalogAddress",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEquipment",
          "outputs": [
            {
              "internalType": "struct IERC6220.Equipment",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "assetId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "childAssetId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "childId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "childEquippableAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPendingAssets",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAllForAssets",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isChildEquipped",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "destinationId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "nestTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingChildOf",
          "outputs": [
            {
              "internalType": "struct IERC7401.Child",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingChildrenOf",
          "outputs": [
            {
              "internalType": "struct IERC7401.Child[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxRejections",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rejectAllAssets"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxRejections",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rejectAllChildren"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rejectAsset"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAllForAssets"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "priorities",
              "type": "uint64[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPriority"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "destinationId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPending",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferChild"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unequip"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptAsset(uint256,uint256,uint64)": {
            "details": "Migrates the asset from the token's pending asset array to the token's active asset array.Active assets cannot be removed by anyone, but can be replaced by a new asset.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - `index` must be in range of the length of the pending asset array.Emits an {AssetAccepted} event.",
            "params": {
              "assetId": "ID of the asset that is being accepted",
              "index": "Index of the asset in the pending array to accept",
              "tokenId": "ID of the token for which to accept the pending asset"
            }
          },
          "acceptChild(uint256,uint256,address,uint256)": {
            "details": "This moves the child token from parent token's pending child tokens array into the active child tokens  array.",
            "params": {
              "childAddress": "Address of the collection smart contract of the child token expected to be located at the  specified index of the given parent token's pending children array",
              "childId": "ID of the child token expected to be located at the specified index of the given parent token's  pending children array",
              "childIndex": "Index of a child tokem in the given parent's pending children array",
              "parentId": "ID of the parent token for which the child token is being accepted"
            }
          },
          "addChild(uint256,uint256,bytes)": {
            "details": "This adds the child token into the given parent token's pending child tokens array.Requirements:  - `directOwnerOf` on the child contract must resolve to the called contract.  - the pending array of the parent contract must not be full.",
            "params": {
              "childId": "ID of the new proposed child token",
              "data": "Additional data with no specified format",
              "parentId": "ID of the parent token to receive the new child token"
            }
          },
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account.The approval is cleared when the token is transferred.Only a single account can be approved at a time, so approving the zero address clears previous approvals.Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist.Emits an {Approval} event.",
            "params": {
              "to": "Address receiving the approval",
              "tokenId": "ID of the token for which the approval is being granted"
            }
          },
          "approveForAssets(address,uint256)": {
            "details": "This can only be called by the owner of the token or by an account that has been granted permission to  manage all of the owner's assets.",
            "params": {
              "to": "Address of the account to receive the approval to the specified token",
              "tokenId": "ID of the token for which we are granting the permission"
            }
          },
          "balanceOf(address)": {
            "params": {
              "owner": "Address of the account being checked"
            },
            "returns": {
              "_0": "The balance of the given account"
            }
          },
          "burn(uint256)": {
            "details": "In case the token has any child tokens, the execution will be reverted.",
            "params": {
              "tokenId": "ID of the token to burn"
            }
          },
          "burn(uint256,uint256)": {
            "details": "When a token is burned, all of its child tokens are recursively burned as well.When specifying the maximum recursive burns, the execution will be reverted if there are more children to be  burned.Setting the `maxRecursiveBurn` value to 0 will only attempt to burn the specified token and revert if there  are any child tokens present.The approvals are cleared when the token is burned.Requirements:  - `tokenId` must exist.Emits a {Transfer} event.",
            "params": {
              "maxRecursiveBurns": "Maximum number of tokens to recursively burn",
              "tokenId": "ID of the token to burn"
            },
            "returns": {
              "_0": "Number of recursively burned children"
            }
          },
          "canTokenBeEquippedWithAssetIntoSlot(address,uint256,uint64,uint64)": {
            "params": {
              "assetId": "ID of the asset associated with the token we want to equip",
              "parent": "Address of the parent token's smart contract",
              "slotId": "ID of the slot that we want to equip the token into",
              "tokenId": "ID of the token we want to equip"
            },
            "returns": {
              "_0": "A boolean indicating whether the token with the given asset can be equipped into the desired slot"
            }
          },
          "childOf(uint256,uint256)": {
            "details": "Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
            "params": {
              "index": "Index of the child token in the parent token's active child tokens array",
              "parentId": "ID of the parent token for which the child is being retrieved"
            },
            "returns": {
              "_0": "A Child struct containing data about the specified child"
            }
          },
          "childrenOf(uint256)": {
            "details": "Returns array of Child structs existing for parent token.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
            "params": {
              "parentId": "ID of the parent token for which to retrieve the active child tokens"
            },
            "returns": {
              "_0": "An array of Child structs containing the parent token's active child tokens"
            }
          },
          "directOwnerOf(uint256)": {
            "details": "If the immediate owner is another token, the address returned, should be the one of the parent token's  collection smart contract.",
            "params": {
              "tokenId": "ID of the token for which the RMRK owner is being retrieved"
            },
            "returns": {
              "_0": "Address of the given token's owner",
              "_1": "The ID of the parent token. Should be `0` if the owner is an externally owned account",
              "_2": "The boolean value signifying whether the owner is an NFT or not"
            }
          },
          "equip((uint256,uint256,uint64,uint64,uint64))": {
            "details": "The `IntakeEquip` stuct contains the following data:  [      tokenId,      childIndex,      assetId,      slotPartId,      childAssetId  ]",
            "params": {
              "data": "An `IntakeEquip` struct specifying the equip data"
            }
          },
          "getActiveAssetPriorities(uint256)": {
            "details": "Asset priorities are a non-sequential array of uint64 values with an array size equal to active asset  priorites.",
            "params": {
              "tokenId": "ID of the token for which to retrieve the priorities of the active assets"
            },
            "returns": {
              "_0": "An array of priorities of the active assets of the given token"
            }
          },
          "getActiveAssets(uint256)": {
            "details": "Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.You can safely get 10k",
            "params": {
              "tokenId": "ID of the token to retrieve the IDs of the active assets"
            },
            "returns": {
              "_0": "An array of active asset IDs of the given token"
            }
          },
          "getApproved(uint256)": {
            "details": "Requirements:  - `tokenId` must exist.",
            "params": {
              "tokenId": "ID of the token to check for approval"
            },
            "returns": {
              "_0": "Address of the account approved to manage the token"
            }
          },
          "getApprovedForAssets(uint256)": {
            "params": {
              "tokenId": "ID of the token we are checking"
            },
            "returns": {
              "_0": "Address of the account that is approved to manage the token"
            }
          },
          "getAssetAndEquippableData(uint256,uint64)": {
            "params": {
              "assetId": "ID of the asset of which we are retrieving",
              "tokenId": "ID of the token for which to retrieve the asset"
            },
            "returns": {
              "_0": "The metadata URI of the asset",
              "_1": "ID of the equippable group this asset belongs to",
              "_2": "The address of the catalog the part belongs to",
              "_3": "An array of IDs of parts included in the asset"
            }
          },
          "getAssetMetadata(uint256,uint64)": {
            "details": "Assets are stored by reference mapping `_assets[assetId]`.Can be overriden to implement enumerate, fallback or other custom logic.",
            "params": {
              "assetId": "Asset Id, must be in the active assets array",
              "tokenId": "ID of the token from which to retrieve the asset metadata"
            },
            "returns": {
              "_0": "The metadata of the asset belonging to the specified index in the token's active assets  array"
            }
          },
          "getAssetReplacements(uint256,uint64)": {
            "details": "Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.",
            "params": {
              "newAssetId": "ID of the pending asset which will be accepted",
              "tokenId": "ID of the token to check"
            },
            "returns": {
              "_0": "ID of the asset which will be replaced"
            }
          },
          "getEquipment(uint256,address,uint64)": {
            "details": "The `Equipment` struct consists of the following data:  [      assetId,      childAssetId,      childId,      childEquippableAddress  ]",
            "params": {
              "slotPartId": "ID of the `Slot` part that we are checking for equipped objects",
              "targetCatalogAddress": "Address of the `Catalog` associated with the `Slot` part of the token",
              "tokenId": "ID of the token for which we are retrieving the equipped object"
            },
            "returns": {
              "_0": "The `Equipment` struct containing data about the equipped object"
            }
          },
          "getPendingAssets(uint256)": {
            "details": "Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.",
            "params": {
              "tokenId": "ID of the token to retrieve the IDs of the pending assets"
            },
            "returns": {
              "_0": "An array of pending asset IDs of the given token"
            }
          },
          "isApprovedForAll(address,address)": {
            "params": {
              "operator": "Address being checked for approval",
              "owner": "Address of the owner of the tokens"
            },
            "returns": {
              "_0": "A boolean value signifying whether the *operator* is allowed to manage the tokens of the *owner* (`true`)  or not (`false`)"
            }
          },
          "isApprovedForAllForAssets(address,address)": {
            "details": "See {setApprovalForAllForAssets}.",
            "params": {
              "operator": "Address of the account that we are checking whether it has the operator role or not",
              "owner": "Address of the account that we are checking for whether it has granted the operator role"
            },
            "returns": {
              "_0": "A boolean value indicating wehter the account we are checking has been granted the operator role"
            }
          },
          "isChildEquipped(uint256,address,uint256)": {
            "details": "This is used to prevent from transferring a child that is equipped.",
            "params": {
              "childAddress": "Address of the child token's smart contract",
              "childId": "ID of the child token",
              "tokenId": "ID of the parent token for which we are querying for"
            },
            "returns": {
              "_0": "A boolean value indicating whether the child token is equipped into the given token or not"
            }
          },
          "nestTransferFrom(address,address,uint256,uint256,bytes)": {
            "params": {
              "data": "Additional data with no specified format, sent in the addChild call",
              "destinationId": "ID of the token to receive the token being transferred",
              "from": "Address of the direct owner of the token to be transferred",
              "to": "Address of the receiving token's collection smart contract",
              "tokenId": "ID of the token being transferred"
            }
          },
          "ownerOf(uint256)": {
            "details": "The *root* owner of the token is an externally owned account (EOA). If the given token is child of another  NFT, this will return an EOA address. Otherwise, if the token is owned by an EOA, this EOA wil be returned.",
            "params": {
              "tokenId": "ID of the token for which the *root* owner has been retrieved"
            },
            "returns": {
              "_0": "The *root* owner of the token"
            }
          },
          "pendingChildOf(uint256,uint256)": {
            "details": "Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
            "params": {
              "index": "Index of the child token in the parent token's pending child tokens array",
              "parentId": "ID of the parent token for which the pending child token is being retrieved"
            },
            "returns": {
              "_0": "A Child struct containting data about the specified child"
            }
          },
          "pendingChildrenOf(uint256)": {
            "details": "Returns array of pending Child structs existing for given parent.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
            "params": {
              "parentId": "ID of the parent token for which to retrieve the pending child tokens"
            },
            "returns": {
              "_0": "An array of Child structs containing the parent token's pending child tokens"
            }
          },
          "rejectAllAssets(uint256,uint256)": {
            "details": "Effecitvely deletes the pending array.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.Emits a {AssetRejected} event with assetId = 0.",
            "params": {
              "maxRejections": "Maximum number of expected assets to reject, used to prevent from rejecting assets which  arrive just before this operation.",
              "tokenId": "ID of the token of which to clear the pending array."
            }
          },
          "rejectAllChildren(uint256,uint256)": {
            "details": "Removes the children from the pending array mapping.This does not update the ownership storage data on children. If necessary, ownership can be reclaimed by the  rootOwner of the previous parent.Requirements: Requirements: - `parentId` must exist",
            "params": {
              "maxRejections": "Maximum number of expected children to reject, used to prevent from rejecting children which  arrive just before this operation.",
              "parentId": "ID of the parent token for which to reject all of the pending tokens."
            }
          },
          "rejectAsset(uint256,uint256,uint64)": {
            "details": "Removes the asset from the token's pending asset array.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - `index` must be in range of the length of the pending asset array.Emits a {AssetRejected} event.",
            "params": {
              "assetId": "ID of the asset that is being rejected",
              "index": "Index of the asset in the pending array to be rejected",
              "tokenId": "ID of the token that the asset is being rejected from"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must exist and be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.Emits a {Transfer} event.",
            "params": {
              "from": "Address to transfer the tokens from",
              "to": "Address to transfer the tokens to",
              "tokenId": "ID of the token to transfer"
            }
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must exist and be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.Emits a {Transfer} event.",
            "params": {
              "data": "Additional data without a specified format to be sent along with the token transaction",
              "from": "Address to transfer the tokens from",
              "to": "Address to transfer the tokens to",
              "tokenId": "ID of the token to transfer"
            }
          },
          "setApprovalForAll(address,bool)": {
            "details": "Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.Requirements: - The `operator` cannot be the caller.Emits an {ApprovalForAll} event.",
            "params": {
              "approved": "A boolean value signifying whether the approval is being granted (`true`) or (`revoked`)",
              "operator": "Address of the operator being managed"
            }
          },
          "setApprovalForAllForAssets(address,bool)": {
            "details": "Operators can call {acceptAsset}, {rejectAsset}, {rejectAllAssets} or {setPriority} for any token  owned by the caller.Requirements:  - The `operator` cannot be the caller.Emits an {ApprovalForAllForAssets} event.",
            "params": {
              "approved": "The boolean value indicating whether the operator role is being granted (`true`) or revoked  (`false`)",
              "operator": "Address of the account to which the operator role is granted or revoked from"
            }
          },
          "setPriority(uint256,uint64[])": {
            "details": "The priority array is a non-sequential list of `uint64`s, where the lowest value is considered highest  priority.Value `0` of a priority is a special case equivalent to unitialized.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - The length of `priorities` must be equal the length of the active assets array.Emits a {AssetPrioritySet} event.",
            "params": {
              "priorities": "An array of priority values",
              "tokenId": "ID of the token to set the priorities for"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": {
            "details": "When transferring a child token, the owner of the token is set to `to`, or is not updated in the event of  `to` being the `0x0` address.",
            "params": {
              "childAddress": "Address of the child token's collection smart contract.",
              "childId": "ID of the child token in its own collection smart contract.",
              "childIndex": "Index of a token we are transferring, in the array it belongs to (can be either active array or  pending array)",
              "data": "Additional data with no specified format, sent in call to `_to`",
              "destinationId": "ID of the token to receive this child token (MUST be 0 if the destination is not a token)",
              "isPending": "A boolean value indicating whether the child token being transferred is in the pending array of  the parent token (`true`) or in the active array (`false`)",
              "to": "Address to which to transfer the token to",
              "tokenId": "ID of the parent token from which the child token is being transferred"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.Emits a {Transfer} event.",
            "params": {
              "from": "Address from which to transfer the token from",
              "to": "Address to which to transfer the token to",
              "tokenId": "ID of the token to transfer"
            }
          },
          "unequip(uint256,uint64,uint64)": {
            "details": "This can only be called by the owner of the token or by an account that has been granted permission to  manage the given token by the current owner.",
            "params": {
              "assetId": "ID of the parent's asset that contains the `Slot` into which the child is equipped",
              "slotPartId": "ID of the `Slot` from which to unequip the child",
              "tokenId": "ID of the parent from which the child is being unequipped"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "VERSION()": {
            "notice": "Version of the @rmrk-team/evm-contracts package"
          },
          "acceptAsset(uint256,uint256,uint64)": {
            "notice": "Accepts a asset at from the pending array of given token."
          },
          "acceptChild(uint256,uint256,address,uint256)": {
            "notice": "Used to accept a pending child token for a given parent token."
          },
          "addChild(uint256,uint256,bytes)": {
            "notice": "Used to add a child token to a given parent token."
          },
          "approve(address,uint256)": {
            "notice": "Used to grant a one-time approval to manage one's token."
          },
          "approveForAssets(address,uint256)": {
            "notice": "Used to grant approvals for specific tokens to a specified address."
          },
          "balanceOf(address)": {
            "notice": "Used to retrieve the number of tokens in `owner`'s account."
          },
          "burn(uint256)": {
            "notice": "Used to burn a given token."
          },
          "burn(uint256,uint256)": {
            "notice": "Used to burn a given token."
          },
          "canTokenBeEquippedWithAssetIntoSlot(address,uint256,uint64,uint64)": {
            "notice": "Used to verify whether a token can be equipped into a given parent's slot."
          },
          "childOf(uint256,uint256)": {
            "notice": "Used to retrieve a specific active child token for a given parent token."
          },
          "childrenOf(uint256)": {
            "notice": "Used to retrieve the active child tokens of a given parent token."
          },
          "directOwnerOf(uint256)": {
            "notice": "Used to retrieve the immediate owner of the given token."
          },
          "equip((uint256,uint256,uint64,uint64,uint64))": {
            "notice": "Used to equip a child into a token."
          },
          "getActiveAssetPriorities(uint256)": {
            "notice": "Used to retrieve the priorities of the active resoources of a given token."
          },
          "getActiveAssets(uint256)": {
            "notice": "Used to retrieve IDs of the active assets of given token."
          },
          "getApproved(uint256)": {
            "notice": "Used to retrieve the account approved to manage given token."
          },
          "getApprovedForAssets(uint256)": {
            "notice": "Used to get the address of the user that is approved to manage the specified token from the current  owner."
          },
          "getAssetAndEquippableData(uint256,uint64)": {
            "notice": "Used to get the asset and equippable data associated with given `assetId`."
          },
          "getAssetMetadata(uint256,uint64)": {
            "notice": "Used to fetch the asset metadata of the specified token's active asset with the given index."
          },
          "getAssetReplacements(uint256,uint64)": {
            "notice": "Used to retrieve the asset that will be replaced if a given asset from the token's pending array  is accepted."
          },
          "getEquipment(uint256,address,uint64)": {
            "notice": "Used to get the Equipment object equipped into the specified slot of the desired token."
          },
          "getPendingAssets(uint256)": {
            "notice": "Used to retrieve IDs of the pending assets of given token."
          },
          "isApprovedForAll(address,address)": {
            "notice": "Used to check if the given address is allowed to manage the tokens of the specified address."
          },
          "isApprovedForAllForAssets(address,address)": {
            "notice": "Used to check whether the address has been granted the operator role by a given address or not."
          },
          "isChildEquipped(uint256,address,uint256)": {
            "notice": "Used to check whether the token has a given child equipped."
          },
          "nestTransferFrom(address,address,uint256,uint256,bytes)": {
            "notice": "Used to transfer the token into another token."
          },
          "ownerOf(uint256)": {
            "notice": "Used to retrieve the *root* owner of a given token."
          },
          "pendingChildOf(uint256,uint256)": {
            "notice": "Used to retrieve a specific pending child token from a given parent token."
          },
          "pendingChildrenOf(uint256)": {
            "notice": "Used to retrieve the pending child tokens of a given parent token."
          },
          "rejectAllAssets(uint256,uint256)": {
            "notice": "Rejects all assets from the pending array of a given token."
          },
          "rejectAllChildren(uint256,uint256)": {
            "notice": "Used to reject all pending children of a given parent token."
          },
          "rejectAsset(uint256,uint256,uint64)": {
            "notice": "Rejects a asset from the pending array of given token."
          },
          "safeTransferFrom(address,address,uint256)": {
            "notice": "Used to safely transfer a given token token from `from` to `to`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "notice": "Used to safely transfer a given token token from `from` to `to`."
          },
          "setApprovalForAll(address,bool)": {
            "notice": "Used to approve or remove `operator` as an operator for the caller."
          },
          "setApprovalForAllForAssets(address,bool)": {
            "notice": "Used to add or remove an operator of assets for the caller."
          },
          "setPriority(uint256,uint64[])": {
            "notice": "Sets a new priority array for a given token."
          },
          "transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": {
            "notice": "Used to transfer a child token from a given parent token."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Transfers a given token from `from` to `to`."
          },
          "unequip(uint256,uint64,uint64)": {
            "notice": "Used to unequip child from parent token."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@latticexyz/=node_modules/@latticexyz/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@rmrk-team/=node_modules/@rmrk-team/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKEquippable.sol": "RMRKEquippable"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/catalog/IRMRKCatalog.sol": {
        "keccak256": "0xf14074edcd3bcef665f17659d206465bd9ea5cd7999acf28065e623f88f04a86",
        "urls": [
          "bzz-raw://c967f0cc9fbf3dd16f8759d051220e750b8fca69ec503f33bf25c95ef5486403",
          "dweb:/ipfs/QmecpKwQKAPrd85Pi2jKTWfEjFrg2ZudjmMNEFhtxRbrat"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/core/RMRKCore.sol": {
        "keccak256": "0x2aed82db53e50724cefa3ee8ca62e7b9e4fb170a2b324cd5f518914480ba9b5b",
        "urls": [
          "bzz-raw://962a4c262e1710c8b0f3bb94f77513ee3aa1e561c85d9acb06960f36ede3bba7",
          "dweb:/ipfs/QmTQKxurANXy8HCtdLLcaxfwCPMoVJPKpYxtsj9CwiYQaZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/IERC6220.sol": {
        "keccak256": "0x4fcd6ea56d18b4daee46873794c002ad78160ba4a07d4f49362313c38ec0e28a",
        "urls": [
          "bzz-raw://bbc28006dd8439bc0e1f332679d36a4c8b8a46ae2e4f37a5e4c0bdaaab85655e",
          "dweb:/ipfs/QmU1eN6R97EhpUUsQWD4qoz3KCsyMHZ8GvihVPnAoEk5dU"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKEquippable.sol": {
        "keccak256": "0x6bfea49c4d924f83e0c0b8e63b6f81953f28b6433b36bbf9678828bf32662cb0",
        "urls": [
          "bzz-raw://8d70c5eed89802d32821b12c4b2ce76fdbba20eb211dbdf4570a334cb5f93c62",
          "dweb:/ipfs/QmV1GfvqPSaxnzTB5fnjpDYPe9BqxBnts7sWKNWyK5p3pp"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKErrors.sol": {
        "keccak256": "0x7d6a3648047dca37d1e21550c723d960e4c9d3783e3d0efb84602266cce45b35",
        "urls": [
          "bzz-raw://170064f8e2d6211e251a7610236beada23c8c598987cb3dbd62826007a4ca553",
          "dweb:/ipfs/QmSgM9T5Q2azFicGQsiXPG8YZSiDEGgRYeHBUe2iAcP3gN"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKLib.sol": {
        "keccak256": "0x953bb028766f17fdafddd5a49b47d76058c4a8e18dee358a51ebe6a2927033db",
        "urls": [
          "bzz-raw://40bb3aec2b5942591536a3d4428cb08154f7ab80d3b94c3e4ccf85ca053606d8",
          "dweb:/ipfs/QmdyYsoYthTGFjcEQ35Ra57qmywiXh6UxDCyvAJZGKsUJH"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/AbstractMultiAsset.sol": {
        "keccak256": "0x6fe69bc7dcd8a51af76e294101955f216d486385db5cf5ff52d6c227c68a2deb",
        "urls": [
          "bzz-raw://3f75b0fda22fadeb0072c488dd77167796dce09b69886d3506dff95347c08708",
          "dweb:/ipfs/QmcdMSEq8zBsQVF9Kw2HQageFaCr4pDh7raAEBMdGaSyWb"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/IERC5773.sol": {
        "keccak256": "0x4e5b78824f54620c5b610a5e2c944cd159b8b054065fabf3af2aaea2f3360d89",
        "urls": [
          "bzz-raw://713b179262117f3ff772aed51aa26e48bf7e3ff5c7ec6588060a887e634fe0f1",
          "dweb:/ipfs/Qme2B9DrgB93HPQy96Pia23jzrkdmUrVQPHdAqCxA8dzYY"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/IERC7401.sol": {
        "keccak256": "0x5feb73f09676b2961b45e5f165d95ff8197609e01e115590a627a47940690fb3",
        "urls": [
          "bzz-raw://93ea41ba10af02b385dbbe036e85f286f6f923e8adea11eb28ed21890a1fe953",
          "dweb:/ipfs/QmRgJKeYyh8VNNtdKF5Pcyei1qKDKNE5zmvXRt3Txoapfo"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/RMRKNestable.sol": {
        "keccak256": "0x97d3668f636376f3235ab4a8ffd44b0dd031d04d0d7f09ff65f850a747d959ae",
        "urls": [
          "bzz-raw://e8071f816bc1d03ef7848bc6df0c0990f1fb2d972a736f9444824e058b93ed45",
          "dweb:/ipfs/QmZdgThWs3hdq7ZXJhgc3519vR2x2knwm9ULUfYVroRoHj"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/security/ReentrancyGuard.sol": {
        "keccak256": "0x14a91bf4e2ca7a5423b903c551aedb08c98f9d089e429998f9711286c0c17882",
        "urls": [
          "bzz-raw://4e07319bbc8447047f9fa596d1af95ab5d235661b5f48159eaee6144d45261f0",
          "dweb:/ipfs/QmdAvUL5jmAx9ExoyR6199KUmkXfd8q4SfBuvJXygKHNbx"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKEquippable.sol",
    "id": 29631,
    "exportedSymbols": {
      "AbstractMultiAsset": [
        34689
      ],
      "Address": [
        28171
      ],
      "Context": [
        28193
      ],
      "ERC721AddressZeroIsNotaValidOwner": [
        33549
      ],
      "ERC721ApprovalToCurrentOwner": [
        33552
      ],
      "ERC721ApproveCallerIsNotOwnerNorApprovedForAll": [
        33555
      ],
      "ERC721ApproveToCaller": [
        33561
      ],
      "ERC721ApprovedQueryForNonexistentToken": [
        33558
      ],
      "ERC721InvalidTokenId": [
        33564
      ],
      "ERC721MintToTheZeroAddress": [
        33567
      ],
      "ERC721NotApprovedOrOwner": [
        33570
      ],
      "ERC721TokenAlreadyMinted": [
        33573
      ],
      "ERC721TransferFromIncorrectOwner": [
        33576
      ],
      "ERC721TransferToNonReceiverImplementer": [
        33579
      ],
      "ERC721TransferToTheZeroAddress": [
        33582
      ],
      "IERC165": [
        28205
      ],
      "IERC5773": [
        34868
      ],
      "IERC6220": [
        28682
      ],
      "IERC721": [
        27796
      ],
      "IERC721Receiver": [
        27814
      ],
      "IERC7401": [
        35078
      ],
      "IRMRKCatalog": [
        28530
      ],
      "RMRKApprovalForAssetsToCurrentOwner": [
        33585
      ],
      "RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll": [
        33588
      ],
      "RMRKAssetAlreadyExists": [
        33745
      ],
      "RMRKBadConfig": [
        33591
      ],
      "RMRKBadPriorityListLength": [
        33594
      ],
      "RMRKCanOnlyDoBulkOperationsOnOwnedTokens": [
        33784
      ],
      "RMRKCanOnlyDoBulkOperationsWithOneTokenAtATime": [
        33787
      ],
      "RMRKCannotTransferSoulbound": [
        33600
      ],
      "RMRKCatalogRequiredForParts": [
        33597
      ],
      "RMRKChildAlreadyExists": [
        33603
      ],
      "RMRKChildIndexOutOfRange": [
        33606
      ],
      "RMRKChildNotFoundInParent": [
        33609
      ],
      "RMRKCollaboratorArraysNotEqualLength": [
        33612
      ],
      "RMRKCollectionAlreadyRegistered": [
        33615
      ],
      "RMRKCollectionNotRegistered": [
        33618
      ],
      "RMRKCore": [
        28541
      ],
      "RMRKEquippable": [
        29630
      ],
      "RMRKEquippableEquipNotAllowedByCatalog": [
        33621
      ],
      "RMRKExpiredDeadline": [
        33624
      ],
      "RMRKIdZeroForbidden": [
        33627
      ],
      "RMRKIndexOutOfRange": [
        33630
      ],
      "RMRKInvalidChildReclaim": [
        33633
      ],
      "RMRKInvalidSignature": [
        33636
      ],
      "RMRKIsNotContract": [
        33639
      ],
      "RMRKLib": [
        33873
      ],
      "RMRKLocked": [
        33642
      ],
      "RMRKMaxPendingAssetsReached": [
        33648
      ],
      "RMRKMaxPendingChildrenReached": [
        33645
      ],
      "RMRKMaxRecursiveBurnsReached": [
        33655
      ],
      "RMRKMintOverMax": [
        33658
      ],
      "RMRKMintToNonRMRKNestableImplementer": [
        33661
      ],
      "RMRKMintZero": [
        33664
      ],
      "RMRKMismachedArrayLength": [
        33667
      ],
      "RMRKMustUnequipFirst": [
        33670
      ],
      "RMRKNestable": [
        37368
      ],
      "RMRKNestableTooDeep": [
        33673
      ],
      "RMRKNestableTransferToDescendant": [
        33676
      ],
      "RMRKNestableTransferToNonRMRKNestableImplementer": [
        33679
      ],
      "RMRKNestableTransferToSelf": [
        33682
      ],
      "RMRKNewContributorIsZeroAddress": [
        33724
      ],
      "RMRKNewOwnerIsZeroAddress": [
        33721
      ],
      "RMRKNoAssetMatchingId": [
        33685
      ],
      "RMRKNotApprovedForAssetsOrOwner": [
        33688
      ],
      "RMRKNotApprovedOrDirectOwner": [
        33691
      ],
      "RMRKNotCollectionCollaborator": [
        33694
      ],
      "RMRKNotCollectionIssuer": [
        33697
      ],
      "RMRKNotCollectionIssuerOrCollaborator": [
        33700
      ],
      "RMRKNotComposableAsset": [
        33703
      ],
      "RMRKNotEquipped": [
        33706
      ],
      "RMRKNotOwner": [
        33709
      ],
      "RMRKNotOwnerOrContributor": [
        33712
      ],
      "RMRKNotSpecificAddress": [
        33715
      ],
      "RMRKNotTokenOwner": [
        33718
      ],
      "RMRKOwnableNotImplemented": [
        33727
      ],
      "RMRKParentIsNotNFT": [
        33730
      ],
      "RMRKPartAlreadyExists": [
        33733
      ],
      "RMRKPartDoesNotExist": [
        33736
      ],
      "RMRKPartIsNotSlot": [
        33739
      ],
      "RMRKPendingChildIndexOutOfRange": [
        33742
      ],
      "RMRKRoyaltiesTooHigh": [
        33781
      ],
      "RMRKSlotAlreadyUsed": [
        33748
      ],
      "RMRKTargetAssetCannotReceiveSlot": [
        33751
      ],
      "RMRKTokenCannotBeEquippedWithAssetIntoSlot": [
        33754
      ],
      "RMRKTokenDoesNotHaveAsset": [
        33757
      ],
      "RMRKTokenHasNoAssets": [
        33760
      ],
      "RMRKUnexpectedAssetId": [
        33772
      ],
      "RMRKUnexpectedChildId": [
        33763
      ],
      "RMRKUnexpectedNumberOfAssets": [
        33766
      ],
      "RMRKUnexpectedNumberOfChildren": [
        33769
      ],
      "RMRKUnexpectedParent": [
        33775
      ],
      "RMRKWrongValueSent": [
        33790
      ],
      "RMRKZeroLengthIdsPassed": [
        33778
      ],
      "ReentrancyGuard": [
        37419
      ],
      "RentrantCall": [
        37372
      ]
    },
    "nodeType": "SourceUnit",
    "src": "98:21647:78",
    "nodes": [
      {
        "id": 28684,
        "nodeType": "PragmaDirective",
        "src": "98:24:78",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 28685,
        "nodeType": "ImportDirective",
        "src": "124:37:78",
        "nodes": [],
        "absolutePath": "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/catalog/IRMRKCatalog.sol",
        "file": "../catalog/IRMRKCatalog.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29631,
        "sourceUnit": 28531,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28686,
        "nodeType": "ImportDirective",
        "src": "162:32:78",
        "nodes": [],
        "absolutePath": "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKLib.sol",
        "file": "../library/RMRKLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29631,
        "sourceUnit": 33874,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28687,
        "nodeType": "ImportDirective",
        "src": "195:46:78",
        "nodes": [],
        "absolutePath": "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/AbstractMultiAsset.sol",
        "file": "../multiasset/AbstractMultiAsset.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29631,
        "sourceUnit": 34690,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28688,
        "nodeType": "ImportDirective",
        "src": "242:38:78",
        "nodes": [],
        "absolutePath": "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/RMRKNestable.sol",
        "file": "../nestable/RMRKNestable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29631,
        "sourceUnit": 37369,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28689,
        "nodeType": "ImportDirective",
        "src": "281:41:78",
        "nodes": [],
        "absolutePath": "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/security/ReentrancyGuard.sol",
        "file": "../security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29631,
        "sourceUnit": 37420,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28690,
        "nodeType": "ImportDirective",
        "src": "323:24:78",
        "nodes": [],
        "absolutePath": "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/IERC6220.sol",
        "file": "./IERC6220.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29631,
        "sourceUnit": 28683,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29630,
        "nodeType": "ContractDefinition",
        "src": "460:21284:78",
        "nodes": [
          {
            "id": 28703,
            "nodeType": "UsingForDirective",
            "src": "569:27:78",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 28700,
              "name": "RMRKLib",
              "nameLocations": [
                "575:7:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33873,
              "src": "575:7:78"
            },
            "typeName": {
              "baseType": {
                "id": 28701,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "587:6:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "id": 28702,
              "nodeType": "ArrayTypeName",
              "src": "587:8:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
                "typeString": "uint64[]"
              }
            }
          },
          {
            "id": 28710,
            "nodeType": "VariableDeclaration",
            "src": "1024:88:78",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 28704,
              "nodeType": "StructuredDocumentation",
              "src": "711:308:78",
              "text": " @notice Mapping from token ID to approver address to approved address for assets.\n @dev The approver is necessary so approvals are invalidated for nested children on transfer.\n @dev WARNING: If a child NFT returns the original root owner, old permissions would be active again."
            },
            "mutability": "mutable",
            "name": "_tokenApprovalsForAssets",
            "nameLocation": "1088:24:78",
            "scope": 29630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(uint256 => mapping(address => address))"
            },
            "typeName": {
              "id": 28709,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 28705,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1032:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1024:47:78",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(uint256 => mapping(address => address))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 28708,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 28706,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1051:7:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1043:27:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 28707,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1062:7:78",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 28715,
            "nodeType": "VariableDeclaration",
            "src": "1241:53:78",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 28711,
              "nodeType": "StructuredDocumentation",
              "src": "1172:64:78",
              "text": "Mapping of uint64 asset ID to corresponding catalog address."
            },
            "mutability": "mutable",
            "name": "_catalogAddresses",
            "nameLocation": "1277:17:78",
            "scope": 29630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_address_$",
              "typeString": "mapping(uint64 => address)"
            },
            "typeName": {
              "id": 28714,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 28712,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1249:6:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1241:26:78",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_address_$",
                "typeString": "mapping(uint64 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 28713,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1259:7:78",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28720,
            "nodeType": "VariableDeclaration",
            "src": "1346:54:78",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 28716,
              "nodeType": "StructuredDocumentation",
              "src": "1300:41:78",
              "text": "Mapping of uint64 ID to asset object."
            },
            "mutability": "mutable",
            "name": "_equippableGroupIds",
            "nameLocation": "1381:19:78",
            "scope": 29630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
              "typeString": "mapping(uint64 => uint64)"
            },
            "typeName": {
              "id": 28719,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 28717,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1354:6:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1346:25:78",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                "typeString": "mapping(uint64 => uint64)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 28718,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1364:6:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28726,
            "nodeType": "VariableDeclaration",
            "src": "1496:45:78",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 28721,
              "nodeType": "StructuredDocumentation",
              "src": "1406:85:78",
              "text": "Mapping of assetId to catalog parts applicable to this asset, both fixed and slot"
            },
            "mutability": "mutable",
            "name": "_partIds",
            "nameLocation": "1533:8:78",
            "scope": 29630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_uint64_$dyn_storage_$",
              "typeString": "mapping(uint64 => uint64[])"
            },
            "typeName": {
              "id": 28725,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 28722,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1504:6:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "1496:27:78",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_uint64_$dyn_storage_$",
                "typeString": "mapping(uint64 => uint64[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 28723,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1514:6:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "id": 28724,
                "nodeType": "ArrayTypeName",
                "src": "1514:8:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
                  "typeString": "uint64[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28736,
            "nodeType": "VariableDeclaration",
            "src": "1661:97:78",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 28727,
              "nodeType": "StructuredDocumentation",
              "src": "1548:108:78",
              "text": "Mapping of token ID to catalog address to slot part ID to equipment information. Used to compose an NFT."
            },
            "mutability": "mutable",
            "name": "_equipments",
            "nameLocation": "1747:11:78",
            "scope": 29630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$_$",
              "typeString": "mapping(uint256 => mapping(address => mapping(uint64 => struct IERC6220.Equipment)))"
            },
            "typeName": {
              "id": 28735,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 28728,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1669:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1661:68:78",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$_$",
                "typeString": "mapping(uint256 => mapping(address => mapping(uint64 => struct IERC6220.Equipment)))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 28734,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 28729,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1688:7:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1680:48:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$",
                  "typeString": "mapping(address => mapping(uint64 => struct IERC6220.Equipment))"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 28733,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 28730,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1699:28:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$",
                    "typeString": "mapping(uint64 => struct IERC6220.Equipment)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 28732,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28731,
                      "name": "Equipment",
                      "nameLocations": [
                        "1717:9:78"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28557,
                      "src": "1717:9:78"
                    },
                    "referencedDeclaration": 28557,
                    "src": "1717:9:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Equipment_$28557_storage_ptr",
                      "typeString": "struct IERC6220.Equipment"
                    }
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28745,
            "nodeType": "VariableDeclaration",
            "src": "1888:104:78",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 28737,
              "nodeType": "StructuredDocumentation",
              "src": "1765:118:78",
              "text": "Mapping of token ID to child (nestable) address to child ID to count of equipped items. Used to check if equipped."
            },
            "mutability": "mutable",
            "name": "_equipCountPerChild",
            "nameLocation": "1973:19:78",
            "scope": 29630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
              "typeString": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
            },
            "typeName": {
              "id": 28744,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 28738,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1896:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1888:67:78",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                "typeString": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 28743,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 28739,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1915:7:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1907:47:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 28742,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 28740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1926:27:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 28741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28752,
            "nodeType": "VariableDeclaration",
            "src": "2085:72:78",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 28746,
              "nodeType": "StructuredDocumentation",
              "src": "1999:81:78",
              "text": "Mapping of `equippableGroupId` to parent contract address and valid `slotId`."
            },
            "mutability": "mutable",
            "name": "_validParentSlots",
            "nameLocation": "2140:17:78",
            "scope": 29630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_uint64_$_$",
              "typeString": "mapping(uint64 => mapping(address => uint64))"
            },
            "typeName": {
              "id": 28751,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 28747,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "2093:6:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              },
              "nodeType": "Mapping",
              "src": "2085:45:78",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_uint64_$_$",
                "typeString": "mapping(uint64 => mapping(address => uint64))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 28750,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 28748,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2111:7:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2103:26:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
                  "typeString": "mapping(address => uint64)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 28749,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2122:6:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28769,
            "nodeType": "FunctionDefinition",
            "src": "2387:196:78",
            "nodes": [],
            "body": {
              "id": 28768,
              "nodeType": "Block",
              "src": "2457:126:78",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 28763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2471:51:78",
                    "subExpression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 28759,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28183,
                            "src": "2500:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 28760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:12:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 28761,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28755,
                          "src": "2514:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 28758,
                        "name": "_isApprovedForAssetsOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29036,
                        "src": "2472:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) view returns (bool)"
                        }
                      },
                      "id": 28762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2472:50:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28767,
                  "nodeType": "IfStatement",
                  "src": "2467:109:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28764,
                        "name": "RMRKNotApprovedForAssetsOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33688,
                        "src": "2543:31:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 28765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2543:33:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28766,
                    "nodeType": "RevertStatement",
                    "src": "2536:40:78"
                  }
                }
              ]
            },
            "documentation": {
              "id": 28753,
              "nodeType": "StructuredDocumentation",
              "src": "2164:218:78",
              "text": " @notice Used to verify that the caller is either the owner of the given token or approved to manage the token's assets\n  of the owner.\n @param tokenId ID of the token that we are checking"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyApprovedForAssetsOrOwner",
            "nameLocation": "2396:29:78",
            "parameters": {
              "id": 28756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28755,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2434:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28769,
                  "src": "2426:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2426:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2425:17:78"
            },
            "returnParameters": {
              "id": 28757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:0:78"
            },
            "scope": 29630,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 28780,
            "nodeType": "ModifierDefinition",
            "src": "2897:121:78",
            "nodes": [],
            "body": {
              "id": 28779,
              "nodeType": "Block",
              "src": "2952:66:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28775,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28772,
                        "src": "2992:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28774,
                      "name": "_onlyApprovedForAssetsOrOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28769,
                      "src": "2962:29:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 28776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2962:38:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28777,
                  "nodeType": "ExpressionStatement",
                  "src": "2962:38:78"
                },
                {
                  "id": 28778,
                  "nodeType": "PlaceholderStatement",
                  "src": "3010:1:78"
                }
              ]
            },
            "documentation": {
              "id": 28770,
              "nodeType": "StructuredDocumentation",
              "src": "2589:303:78",
              "text": " @notice Used to ensure that the caller is either the owner of the given token or approved to manage the token's assets\n  of the owner.\n @dev If that is not the case, the execution of the function will be reverted.\n @param tokenId ID of the token that we are checking"
            },
            "name": "onlyApprovedForAssetsOrOwner",
            "nameLocation": "2906:28:78",
            "parameters": {
              "id": 28773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28772,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2943:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28780,
                  "src": "2935:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2935:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2934:17:78"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 28811,
            "nodeType": "FunctionDefinition",
            "src": "3067:321:78",
            "nodes": [],
            "body": {
              "id": 28810,
              "nodeType": "Block",
              "src": "3195:193:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 28801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 28793,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28783,
                            "src": "3255:11:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 28791,
                            "name": "RMRKNestable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37368,
                            "src": "3224:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_RMRKNestable_$37368_$",
                              "typeString": "type(contract RMRKNestable)"
                            }
                          },
                          "id": 28792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3237:17:78",
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35230,
                          "src": "3224:30:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (bytes4) view returns (bool)"
                          }
                        },
                        "id": 28794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3224:43:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 28800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28795,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28783,
                          "src": "3283:11:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 28797,
                                "name": "IERC5773",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34868,
                                "src": "3303:8:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC5773_$34868_$",
                                  "typeString": "type(contract IERC5773)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC5773_$34868_$",
                                  "typeString": "type(contract IERC5773)"
                                }
                              ],
                              "id": 28796,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "3298:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 28798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3298:14:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC5773_$34868",
                              "typeString": "type(contract IERC5773)"
                            }
                          },
                          "id": 28799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3313:11:78",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "3298:26:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "3283:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3224:100:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 28807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 28802,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28783,
                        "src": "3340:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28804,
                              "name": "IERC6220",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28682,
                              "src": "3360:8:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC6220_$28682_$",
                                "typeString": "type(contract IERC6220)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC6220_$28682_$",
                                "typeString": "type(contract IERC6220)"
                              }
                            ],
                            "id": 28803,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3355:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 28805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3355:14:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC6220_$28682",
                            "typeString": "type(contract IERC6220)"
                          }
                        },
                        "id": 28806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3370:11:78",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "3355:26:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "3340:41:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3224:157:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28790,
                  "id": 28809,
                  "nodeType": "Return",
                  "src": "3205:176:78"
                }
              ]
            },
            "baseFunctions": [
              28204,
              35230
            ],
            "documentation": {
              "id": 28781,
              "nodeType": "StructuredDocumentation",
              "src": "3024:38:78",
              "text": " @inheritdoc IERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3076:17:78",
            "overrides": {
              "id": 28787,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 28785,
                  "name": "IERC165",
                  "nameLocations": [
                    "3157:7:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28205,
                  "src": "3157:7:78"
                },
                {
                  "id": 28786,
                  "name": "RMRKNestable",
                  "nameLocations": [
                    "3166:12:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37368,
                  "src": "3166:12:78"
                }
              ],
              "src": "3148:31:78"
            },
            "parameters": {
              "id": 28784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28783,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3110:11:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28811,
                  "src": "3103:18:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 28782,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3103:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3093:34:78"
            },
            "returnParameters": {
              "id": 28790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28789,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28811,
                  "src": "3189:4:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28788,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3188:6:78"
            },
            "scope": 29630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28831,
            "nodeType": "FunctionDefinition",
            "src": "4309:206:78",
            "nodes": [],
            "body": {
              "id": 28830,
              "nodeType": "Block",
              "src": "4461:54:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28825,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28814,
                        "src": "4484:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28826,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28816,
                        "src": "4493:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28827,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28818,
                        "src": "4500:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 28824,
                      "name": "_acceptAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34185,
                      "src": "4471:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint256,uint64)"
                      }
                    },
                    "id": 28828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:37:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28829,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:37:78"
                }
              ]
            },
            "baseFunctions": [
              34759
            ],
            "documentation": {
              "id": 28812,
              "nodeType": "StructuredDocumentation",
              "src": "3549:755:78",
              "text": " @notice Accepts a asset at from the pending array of given token.\n @dev Migrates the asset from the token's pending asset array to the token's active asset array.\n @dev Active assets cannot be removed by anyone, but can be replaced by a new asset.\n @dev Requirements:\n  - The caller must own the token or be approved to manage the token's assets\n  - `tokenId` must exist.\n  - `index` must be in range of the length of the pending asset array.\n @dev Emits an {AssetAccepted} event.\n @param tokenId ID of the token for which to accept the pending asset\n @param index Index of the asset in the pending array to accept\n @param assetId ID of the asset that is being accepted"
            },
            "functionSelector": "fc3517c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28821,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28814,
                    "src": "4452:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 28822,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28820,
                  "name": "onlyApprovedForAssetsOrOwner",
                  "nameLocations": [
                    "4423:28:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28780,
                  "src": "4423:28:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "4423:37:78"
              }
            ],
            "name": "acceptAsset",
            "nameLocation": "4318:11:78",
            "parameters": {
              "id": 28819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28814,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4347:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28831,
                  "src": "4339:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4339:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28816,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "4372:5:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28831,
                  "src": "4364:13:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4364:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28818,
                  "mutability": "mutable",
                  "name": "assetId",
                  "nameLocation": "4394:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28831,
                  "src": "4387:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 28817,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4387:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4329:78:78"
            },
            "returnParameters": {
              "id": 28823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4461:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28851,
            "nodeType": "FunctionDefinition",
            "src": "5156:206:78",
            "nodes": [],
            "body": {
              "id": 28850,
              "nodeType": "Block",
              "src": "5308:54:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28845,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28834,
                        "src": "5331:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28846,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28836,
                        "src": "5340:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28847,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28838,
                        "src": "5347:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 28844,
                      "name": "_rejectAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34232,
                      "src": "5318:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint256,uint64)"
                      }
                    },
                    "id": 28848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5318:37:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28849,
                  "nodeType": "ExpressionStatement",
                  "src": "5318:37:78"
                }
              ]
            },
            "baseFunctions": [
              34769
            ],
            "documentation": {
              "id": 28832,
              "nodeType": "StructuredDocumentation",
              "src": "4521:630:78",
              "text": " @notice Rejects a asset from the pending array of given token.\n @dev Removes the asset from the token's pending asset array.\n @dev Requirements:\n  - The caller must own the token or be approved to manage the token's assets\n  - `tokenId` must exist.\n  - `index` must be in range of the length of the pending asset array.\n @dev Emits a {AssetRejected} event.\n @param tokenId ID of the token that the asset is being rejected from\n @param index Index of the asset in the pending array to be rejected\n @param assetId ID of the asset that is being rejected"
            },
            "functionSelector": "22f6da9c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28841,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28834,
                    "src": "5299:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 28842,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28840,
                  "name": "onlyApprovedForAssetsOrOwner",
                  "nameLocations": [
                    "5270:28:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28780,
                  "src": "5270:28:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "5270:37:78"
              }
            ],
            "name": "rejectAsset",
            "nameLocation": "5165:11:78",
            "parameters": {
              "id": 28839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28834,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5194:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28851,
                  "src": "5186:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28836,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5219:5:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28851,
                  "src": "5211:13:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28838,
                  "mutability": "mutable",
                  "name": "assetId",
                  "nameLocation": "5241:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28851,
                  "src": "5234:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 28837,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5176:78:78"
            },
            "returnParameters": {
              "id": 28843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5308:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28868,
            "nodeType": "FunctionDefinition",
            "src": "5954:197:78",
            "nodes": [],
            "body": {
              "id": 28867,
              "nodeType": "Block",
              "src": "6094:57:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28863,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28854,
                        "src": "6121:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28864,
                        "name": "maxRejections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28856,
                        "src": "6130:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28862,
                      "name": "_rejectAllAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34361,
                      "src": "6104:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6104:40:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28866,
                  "nodeType": "ExpressionStatement",
                  "src": "6104:40:78"
                }
              ]
            },
            "baseFunctions": [
              34777
            ],
            "documentation": {
              "id": 28852,
              "nodeType": "StructuredDocumentation",
              "src": "5368:581:78",
              "text": " @notice Rejects all assets from the pending array of a given token.\n @dev Effecitvely deletes the pending array.\n @dev Requirements:\n  - The caller must own the token or be approved to manage the token's assets\n  - `tokenId` must exist.\n @dev Emits a {AssetRejected} event with assetId = 0.\n @param tokenId ID of the token of which to clear the pending array.\n @param maxRejections Maximum number of expected assets to reject, used to prevent from rejecting assets which\n  arrive just before this operation."
            },
            "functionSelector": "e7de4de4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28859,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28854,
                    "src": "6085:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 28860,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28858,
                  "name": "onlyApprovedForAssetsOrOwner",
                  "nameLocations": [
                    "6056:28:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28780,
                  "src": "6056:28:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "6056:37:78"
              }
            ],
            "name": "rejectAllAssets",
            "nameLocation": "5963:15:78",
            "parameters": {
              "id": 28857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28854,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5996:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28868,
                  "src": "5988:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5988:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28856,
                  "mutability": "mutable",
                  "name": "maxRejections",
                  "nameLocation": "6021:13:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28868,
                  "src": "6013:21:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6013:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5978:62:78"
            },
            "returnParameters": {
              "id": 28861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6094:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28886,
            "nodeType": "FunctionDefinition",
            "src": "6849:193:78",
            "nodes": [],
            "body": {
              "id": 28885,
              "nodeType": "Block",
              "src": "6992:50:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28881,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28871,
                        "src": "7015:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28882,
                        "name": "priorities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28874,
                        "src": "7024:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                          "typeString": "uint64[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                          "typeString": "uint64[] calldata"
                        }
                      ],
                      "id": 28880,
                      "name": "_setPriority",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34406,
                      "src": "7002:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint64_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256,uint64[] calldata)"
                      }
                    },
                    "id": 28883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7002:33:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28884,
                  "nodeType": "ExpressionStatement",
                  "src": "7002:33:78"
                }
              ]
            },
            "baseFunctions": [
              34786
            ],
            "documentation": {
              "id": 28869,
              "nodeType": "StructuredDocumentation",
              "src": "6157:687:78",
              "text": " @notice Sets a new priority array for a given token.\n @dev The priority array is a non-sequential list of `uint64`s, where the lowest value is considered highest\n  priority.\n @dev Value `0` of a priority is a special case equivalent to unitialized.\n @dev Requirements:\n  - The caller must own the token or be approved to manage the token's assets\n  - `tokenId` must exist.\n  - The length of `priorities` must be equal the length of the active assets array.\n @dev Emits a {AssetPrioritySet} event.\n @param tokenId ID of the token to set the priorities for\n @param priorities An array of priority values"
            },
            "functionSelector": "de8e602c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28877,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28871,
                    "src": "6983:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 28878,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28876,
                  "name": "onlyApprovedForAssetsOrOwner",
                  "nameLocations": [
                    "6954:28:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28780,
                  "src": "6954:28:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "6954:37:78"
              }
            ],
            "name": "setPriority",
            "nameLocation": "6858:11:78",
            "parameters": {
              "id": 28875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28871,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6887:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28886,
                  "src": "6879:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6879:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28874,
                  "mutability": "mutable",
                  "name": "priorities",
                  "nameLocation": "6922:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28886,
                  "src": "6904:28:78",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                    "typeString": "uint64[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28872,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "6904:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 28873,
                    "nodeType": "ArrayTypeName",
                    "src": "6904:8:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
                      "typeString": "uint64[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6869:69:78"
            },
            "returnParameters": {
              "id": 28879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6992:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28940,
            "nodeType": "FunctionDefinition",
            "src": "7701:498:78",
            "nodes": [],
            "body": {
              "id": 28939,
              "nodeType": "Block",
              "src": "7901:298:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28902,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28889,
                        "src": "7926:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 28903,
                        "name": "metadataURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28895,
                        "src": "7930:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 28901,
                      "name": "_addAssetEntry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28940,
                        34458
                      ],
                      "referencedDeclaration": 34458,
                      "src": "7911:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint64,string memory)"
                      }
                    },
                    "id": 28904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7911:31:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28905,
                  "nodeType": "ExpressionStatement",
                  "src": "7911:31:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 28911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 28906,
                        "name": "catalogAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28893,
                        "src": "7957:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 28909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7983:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 28908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7975:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 28907,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7975:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7975:10:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7957:28:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 28915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 28912,
                          "name": "partIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28898,
                          "src": "7989:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
                            "typeString": "uint64[] memory"
                          }
                        },
                        "id": 28913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7997:6:78",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7989:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 28914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8007:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7989:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7957:51:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28920,
                  "nodeType": "IfStatement",
                  "src": "7953:105:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28917,
                        "name": "RMRKCatalogRequiredForParts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33597,
                        "src": "8029:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 28918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8029:29:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28919,
                    "nodeType": "RevertStatement",
                    "src": "8022:36:78"
                  }
                },
                {
                  "expression": {
                    "id": 28925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28921,
                        "name": "_catalogAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28715,
                        "src": "8069:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_address_$",
                          "typeString": "mapping(uint64 => address)"
                        }
                      },
                      "id": 28923,
                      "indexExpression": {
                        "id": 28922,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28889,
                        "src": "8087:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8069:21:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28924,
                      "name": "catalogAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28893,
                      "src": "8093:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8069:38:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28926,
                  "nodeType": "ExpressionStatement",
                  "src": "8069:38:78"
                },
                {
                  "expression": {
                    "id": 28931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28927,
                        "name": "_equippableGroupIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28720,
                        "src": "8117:19:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                          "typeString": "mapping(uint64 => uint64)"
                        }
                      },
                      "id": 28929,
                      "indexExpression": {
                        "id": 28928,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28889,
                        "src": "8137:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8117:23:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28930,
                      "name": "equippableGroupId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28891,
                      "src": "8143:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "8117:43:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 28932,
                  "nodeType": "ExpressionStatement",
                  "src": "8117:43:78"
                },
                {
                  "expression": {
                    "id": 28937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28933,
                        "name": "_partIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28726,
                        "src": "8170:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_uint64_$dyn_storage_$",
                          "typeString": "mapping(uint64 => uint64[] storage ref)"
                        }
                      },
                      "id": 28935,
                      "indexExpression": {
                        "id": 28934,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28889,
                        "src": "8179:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8170:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint64_$dyn_storage",
                        "typeString": "uint64[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28936,
                      "name": "partIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28898,
                      "src": "8185:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
                        "typeString": "uint64[] memory"
                      }
                    },
                    "src": "8170:22:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$dyn_storage",
                      "typeString": "uint64[] storage ref"
                    }
                  },
                  "id": 28938,
                  "nodeType": "ExpressionStatement",
                  "src": "8170:22:78"
                }
              ]
            },
            "documentation": {
              "id": 28887,
              "nodeType": "StructuredDocumentation",
              "src": "7126:570:78",
              "text": " @notice Used to add a asset entry.\n @dev This internal function warrants custom access control to be implemented when used.\n @param id ID of the asset being added\n @param equippableGroupId ID of the equippable group being marked as equippable into the slot associated with\n  `Parts` of the `Slot` type\n @param catalogAddress Address of the `Catalog` associated with the asset\n @param metadataURI The metadata URI of the asset\n @param partIds An array of IDs of fixed and slot parts to be included in the asset"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addAssetEntry",
            "nameLocation": "7710:14:78",
            "parameters": {
              "id": 28899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28889,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "7741:2:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28940,
                  "src": "7734:9:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 28888,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7734:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28891,
                  "mutability": "mutable",
                  "name": "equippableGroupId",
                  "nameLocation": "7760:17:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28940,
                  "src": "7753:24:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 28890,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7753:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28893,
                  "mutability": "mutable",
                  "name": "catalogAddress",
                  "nameLocation": "7795:14:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28940,
                  "src": "7787:22:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7787:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28895,
                  "mutability": "mutable",
                  "name": "metadataURI",
                  "nameLocation": "7833:11:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28940,
                  "src": "7819:25:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28894,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7819:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28898,
                  "mutability": "mutable",
                  "name": "partIds",
                  "nameLocation": "7870:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28940,
                  "src": "7854:23:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
                    "typeString": "uint64[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28896,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "7854:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 28897,
                    "nodeType": "ArrayTypeName",
                    "src": "7854:8:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
                      "typeString": "uint64[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7724:159:78"
            },
            "returnParameters": {
              "id": 28900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7901:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 28982,
            "nodeType": "FunctionDefinition",
            "src": "8700:415:78",
            "nodes": [],
            "body": {
              "id": 28981,
              "nodeType": "Block",
              "src": "8770:345:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28949,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8788:5:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 28981,
                      "src": "8780:13:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28948,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8780:7:78",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28953,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 28951,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28945,
                        "src": "8804:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28950,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35980,
                      "src": "8796:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 28952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8796:16:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8780:32:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28954,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28943,
                      "src": "8826:2:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 28955,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28949,
                      "src": "8832:5:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8826:11:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28960,
                  "nodeType": "IfStatement",
                  "src": "8822:61:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28957,
                        "name": "RMRKApprovalForAssetsToCurrentOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33585,
                        "src": "8846:35:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 28958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8846:37:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28959,
                    "nodeType": "RevertStatement",
                    "src": "8839:44:78"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 28964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 28961,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28183,
                          "src": "8911:10:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 28962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8911:12:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 28963,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28949,
                        "src": "8927:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "8911:21:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 28970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "8948:47:78",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 28966,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28949,
                            "src": "8975:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 28967,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28183,
                              "src": "8982:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 28968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8982:12:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28965,
                          "name": "isApprovedForAllForAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34033,
                          "src": "8949:25:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 28969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8949:46:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8911:84:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28975,
                  "nodeType": "IfStatement",
                  "src": "8894:174:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28972,
                        "name": "RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33588,
                        "src": "9013:53:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 28973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9013:55:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28974,
                    "nodeType": "RevertStatement",
                    "src": "9006:62:78"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28977,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28943,
                        "src": "9096:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28978,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28945,
                        "src": "9100:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28976,
                      "name": "_approveForAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29065,
                      "src": "9078:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 28979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9078:30:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28980,
                  "nodeType": "ExpressionStatement",
                  "src": "9078:30:78"
                }
              ]
            },
            "baseFunctions": [
              34841
            ],
            "documentation": {
              "id": 28941,
              "nodeType": "StructuredDocumentation",
              "src": "8278:417:78",
              "text": " @notice Used to grant approvals for specific tokens to a specified address.\n @dev This can only be called by the owner of the token or by an account that has been granted permission to\n  manage all of the owner's assets.\n @param to Address of the account to receive the approval to the specified token\n @param tokenId ID of the token for which we are granting the permission"
            },
            "functionSelector": "5ea72f36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveForAssets",
            "nameLocation": "8709:16:78",
            "parameters": {
              "id": 28946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28943,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8734:2:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28982,
                  "src": "8726:10:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8726:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28945,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8746:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 28982,
                  "src": "8738:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8738:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8725:29:78"
            },
            "returnParameters": {
              "id": 28947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8770:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 29003,
            "nodeType": "FunctionDefinition",
            "src": "9396:207:78",
            "nodes": [],
            "body": {
              "id": 29002,
              "nodeType": "Block",
              "src": "9495:108:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28991,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28985,
                        "src": "9520:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28990,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36542,
                      "src": "9505:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 28992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9505:23:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28993,
                  "nodeType": "ExpressionStatement",
                  "src": "9505:23:78"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 28994,
                        "name": "_tokenApprovalsForAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28710,
                        "src": "9545:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_address_$_$",
                          "typeString": "mapping(uint256 => mapping(address => address))"
                        }
                      },
                      "id": 28996,
                      "indexExpression": {
                        "id": 28995,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28985,
                        "src": "9570:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9545:33:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 29000,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 28998,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28985,
                          "src": "9587:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 28997,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35980,
                        "src": "9579:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 28999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9579:16:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9545:51:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 28989,
                  "id": 29001,
                  "nodeType": "Return",
                  "src": "9538:58:78"
                }
              ]
            },
            "baseFunctions": [
              34849
            ],
            "documentation": {
              "id": 28983,
              "nodeType": "StructuredDocumentation",
              "src": "9121:270:78",
              "text": " @notice Used to get the address of the user that is approved to manage the specified token from the current\n  owner.\n @param tokenId ID of the token we are checking\n @return Address of the account that is approved to manage the token"
            },
            "functionSelector": "e467a48f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApprovedForAssets",
            "nameLocation": "9405:20:78",
            "parameters": {
              "id": 28986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28985,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9443:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29003,
                  "src": "9435:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9435:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9425:31:78"
            },
            "returnParameters": {
              "id": 28989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29003,
                  "src": "9486:7:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9486:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9485:9:78"
            },
            "scope": 29630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 29036,
            "nodeType": "FunctionDefinition",
            "src": "10241:315:78",
            "nodes": [],
            "body": {
              "id": 29035,
              "nodeType": "Block",
              "src": "10368:188:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    29014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29014,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "10386:5:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29035,
                      "src": "10378:13:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29013,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10378:7:78",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29018,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29016,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29008,
                        "src": "10402:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29015,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35980,
                      "src": "10394:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 29017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10394:16:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10378:32:78"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 29032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 29026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 29021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 29019,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29006,
                              "src": "10428:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 29020,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29014,
                              "src": "10436:5:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10428:13:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 29023,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29014,
                                "src": "10483:5:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 29024,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29006,
                                "src": "10490:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 29022,
                              "name": "isApprovedForAllForAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34033,
                              "src": "10457:25:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view returns (bool)"
                              }
                            },
                            "id": 29025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10457:38:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10428:67:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 29031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 29028,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29008,
                                "src": "10532:7:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 29027,
                              "name": "getApprovedForAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29003,
                              "src": "10511:20:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 29029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10511:29:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 29030,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29006,
                            "src": "10544:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10511:37:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10428:120:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 29033,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10427:122:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 29012,
                  "id": 29034,
                  "nodeType": "Return",
                  "src": "10420:129:78"
                }
              ]
            },
            "documentation": {
              "id": 29004,
              "nodeType": "StructuredDocumentation",
              "src": "9609:627:78",
              "text": " @notice Internal function to check whether the queried user is either:\n   1. The root owner of the token associated with `tokenId`.\n   2. Is approved for all assets of the current owner via the `setApprovalForAllForAssets` function.\n   3. Is granted approval for the specific tokenId for asset management via the `approveForAssets` function.\n @param user Address of the user we are checking for permission\n @param tokenId ID of the token to query for permission for a given `user`\n @return A boolean value indicating whether the user is approved to manage the token or not"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedForAssetsOrOwner",
            "nameLocation": "10250:27:78",
            "parameters": {
              "id": 29009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29006,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10295:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29036,
                  "src": "10287:12:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10287:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29008,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10317:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29036,
                  "src": "10309:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10309:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10277:53:78"
            },
            "returnParameters": {
              "id": 29012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29036,
                  "src": "10362:4:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29010,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10362:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10361:6:78"
            },
            "scope": 29630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 29065,
            "nodeType": "FunctionDefinition",
            "src": "10798:229:78",
            "nodes": [],
            "body": {
              "id": 29064,
              "nodeType": "Block",
              "src": "10871:156:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    29045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29045,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "10889:5:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29064,
                      "src": "10881:13:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29044,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10881:7:78",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29049,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29047,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29041,
                        "src": "10905:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29046,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35980,
                      "src": "10897:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 29048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10897:16:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10881:32:78"
                },
                {
                  "expression": {
                    "id": 29056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 29050,
                          "name": "_tokenApprovalsForAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28710,
                          "src": "10923:24:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(uint256 => mapping(address => address))"
                          }
                        },
                        "id": 29053,
                        "indexExpression": {
                          "id": 29051,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29041,
                          "src": "10948:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10923:33:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 29054,
                      "indexExpression": {
                        "id": 29052,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29045,
                        "src": "10957:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10923:40:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29055,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29039,
                      "src": "10966:2:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10923:45:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29057,
                  "nodeType": "ExpressionStatement",
                  "src": "10923:45:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29059,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29045,
                        "src": "11001:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29060,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29039,
                        "src": "11008:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29061,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29041,
                        "src": "11012:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29058,
                      "name": "ApprovalForAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34740,
                      "src": "10983:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 29062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10983:37:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29063,
                  "nodeType": "EmitStatement",
                  "src": "10978:42:78"
                }
              ]
            },
            "documentation": {
              "id": 29037,
              "nodeType": "StructuredDocumentation",
              "src": "10562:231:78",
              "text": " @notice Internal function for granting approvals for a specific token.\n @param to Address of the account we are granting an approval to\n @param tokenId ID of the token we are granting the approval for"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approveForAssets",
            "nameLocation": "10807:17:78",
            "parameters": {
              "id": 29042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29039,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10833:2:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29065,
                  "src": "10825:10:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10825:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29041,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10845:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29065,
                  "src": "10837:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10837:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10824:29:78"
            },
            "returnParameters": {
              "id": 29043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10871:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 29081,
            "nodeType": "FunctionDefinition",
            "src": "11181:123:78",
            "nodes": [],
            "body": {
              "id": 29080,
              "nodeType": "Block",
              "src": "11249:55:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 29075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11285:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 29074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11277:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29073,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11277:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11277:10:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29077,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29068,
                        "src": "11289:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29072,
                      "name": "_approveForAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29065,
                      "src": "11259:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 29078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11259:38:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29079,
                  "nodeType": "ExpressionStatement",
                  "src": "11259:38:78"
                }
              ]
            },
            "baseFunctions": [
              36449
            ],
            "documentation": {
              "id": 29066,
              "nodeType": "StructuredDocumentation",
              "src": "11033:143:78",
              "text": " @notice Used to clear the approvals on a given token.\n @param tokenId ID of the token we are clearing the approvals of"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_cleanApprovals",
            "nameLocation": "11190:15:78",
            "overrides": {
              "id": 29070,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11240:8:78"
            },
            "parameters": {
              "id": 29069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29068,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11214:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29081,
                  "src": "11206:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11206:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11205:17:78"
            },
            "returnParameters": {
              "id": 29071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11249:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 29129,
            "nodeType": "FunctionDefinition",
            "src": "11439:637:78",
            "nodes": [],
            "body": {
              "id": 29128,
              "nodeType": "Block",
              "src": "11705:371:78",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 29103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "11719:10:78",
                    "subExpression": {
                      "id": 29102,
                      "name": "isPending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29096,
                      "src": "11720:9:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29114,
                  "nodeType": "IfStatement",
                  "src": "11715:139:78",
                  "trueBody": {
                    "id": 29113,
                    "nodeType": "Block",
                    "src": "11731:123:78",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 29105,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29084,
                              "src": "11765:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 29106,
                              "name": "childAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29092,
                              "src": "11774:12:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 29107,
                              "name": "childId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29094,
                              "src": "11788:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 29104,
                            "name": "isChildEquipped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29447,
                            "src": "11749:15:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256,address,uint256) view returns (bool)"
                            }
                          },
                          "id": 29108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11749:47:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29112,
                        "nodeType": "IfStatement",
                        "src": "11745:98:78",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 29109,
                              "name": "RMRKMustUnequipFirst",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33670,
                              "src": "11821:20:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 29110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11821:22:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 29111,
                          "nodeType": "RevertStatement",
                          "src": "11814:29:78"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29118,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29084,
                        "src": "11897:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29119,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29086,
                        "src": "11918:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29120,
                        "name": "destinationId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29088,
                        "src": "11934:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29121,
                        "name": "childIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29090,
                        "src": "11961:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29122,
                        "name": "childAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29092,
                        "src": "11985:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29123,
                        "name": "childId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29094,
                        "src": "12011:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29124,
                        "name": "isPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29096,
                        "src": "12032:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 29125,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29098,
                        "src": "12055:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 29115,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11863:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RMRKEquippable_$29630_$",
                          "typeString": "type(contract super RMRKEquippable)"
                        }
                      },
                      "id": 29117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11869:14:78",
                      "memberName": "_transferChild",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37049,
                      "src": "11863:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,uint256,uint256,address,uint256,bool,bytes memory)"
                      }
                    },
                    "id": 29126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11863:206:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29127,
                  "nodeType": "ExpressionStatement",
                  "src": "11863:206:78"
                }
              ]
            },
            "baseFunctions": [
              37049
            ],
            "documentation": {
              "id": 29082,
              "nodeType": "StructuredDocumentation",
              "src": "11391:43:78",
              "text": " @inheritdoc RMRKNestable"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferChild",
            "nameLocation": "11448:14:78",
            "overrides": {
              "id": 29100,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11696:8:78"
            },
            "parameters": {
              "id": 29099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29084,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11480:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29129,
                  "src": "11472:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11472:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29086,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11505:2:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29129,
                  "src": "11497:10:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11497:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29088,
                  "mutability": "mutable",
                  "name": "destinationId",
                  "nameLocation": "11525:13:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29129,
                  "src": "11517:21:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11517:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29090,
                  "mutability": "mutable",
                  "name": "childIndex",
                  "nameLocation": "11556:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29129,
                  "src": "11548:18:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11548:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29092,
                  "mutability": "mutable",
                  "name": "childAddress",
                  "nameLocation": "11584:12:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29129,
                  "src": "11576:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11576:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29094,
                  "mutability": "mutable",
                  "name": "childId",
                  "nameLocation": "11614:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29129,
                  "src": "11606:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11606:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29096,
                  "mutability": "mutable",
                  "name": "isPending",
                  "nameLocation": "11636:9:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29129,
                  "src": "11631:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29095,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11631:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29098,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11668:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29129,
                  "src": "11655:17:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29097,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11655:5:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11462:216:78"
            },
            "returnParameters": {
              "id": 29101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11705:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 29147,
            "nodeType": "FunctionDefinition",
            "src": "12126:154:78",
            "nodes": [],
            "body": {
              "id": 29146,
              "nodeType": "Block",
              "src": "12251:29:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29143,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29133,
                        "src": "12268:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                          "typeString": "struct IERC6220.IntakeEquip memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                          "typeString": "struct IERC6220.IntakeEquip memory"
                        }
                      ],
                      "id": 29142,
                      "name": "_equip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29296,
                      "src": "12261:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_IntakeEquip_$28569_memory_ptr_$returns$__$",
                        "typeString": "function (struct IERC6220.IntakeEquip memory)"
                      }
                    },
                    "id": 29144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12261:12:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29145,
                  "nodeType": "ExpressionStatement",
                  "src": "12261:12:78"
                }
              ]
            },
            "baseFunctions": [
              28615
            ],
            "documentation": {
              "id": 29130,
              "nodeType": "StructuredDocumentation",
              "src": "12082:39:78",
              "text": " @inheritdoc IERC6220"
            },
            "functionSelector": "38dcf74c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 29136,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29133,
                      "src": "12224:4:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                        "typeString": "struct IERC6220.IntakeEquip memory"
                      }
                    },
                    "id": 29137,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12229:7:78",
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28560,
                    "src": "12224:12:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 29138,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29135,
                  "name": "onlyApprovedForAssetsOrOwner",
                  "nameLocations": [
                    "12195:28:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28780,
                  "src": "12195:28:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "12195:42:78"
              },
              {
                "id": 29140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29139,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "12238:12:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37402,
                  "src": "12238:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "12238:12:78"
              }
            ],
            "name": "equip",
            "nameLocation": "12135:5:78",
            "parameters": {
              "id": 29134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29133,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12169:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29147,
                  "src": "12150:23:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                    "typeString": "struct IERC6220.IntakeEquip"
                  },
                  "typeName": {
                    "id": 29132,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29131,
                      "name": "IntakeEquip",
                      "nameLocations": [
                        "12150:11:78"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28569,
                      "src": "12150:11:78"
                    },
                    "referencedDeclaration": 28569,
                    "src": "12150:11:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IntakeEquip_$28569_storage_ptr",
                      "typeString": "struct IERC6220.IntakeEquip"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12140:39:78"
            },
            "returnParameters": {
              "id": 29141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12251:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 29296,
            "nodeType": "FunctionDefinition",
            "src": "12964:1972:78",
            "nodes": [],
            "body": {
              "id": 29295,
              "nodeType": "Block",
              "src": "13022:1914:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    29155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29155,
                      "mutability": "mutable",
                      "name": "catalogAddress",
                      "nameLocation": "13040:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29295,
                      "src": "13032:22:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29154,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13032:7:78",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29160,
                  "initialValue": {
                    "baseExpression": {
                      "id": 29156,
                      "name": "_catalogAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28715,
                      "src": "13057:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint64_$_t_address_$",
                        "typeString": "mapping(uint64 => address)"
                      }
                    },
                    "id": 29159,
                    "indexExpression": {
                      "expression": {
                        "id": 29157,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29151,
                        "src": "13075:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                          "typeString": "struct IERC6220.IntakeEquip memory"
                        }
                      },
                      "id": 29158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13080:7:78",
                      "memberName": "assetId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28564,
                      "src": "13075:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13057:31:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13032:56:78"
                },
                {
                  "assignments": [
                    29162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29162,
                      "mutability": "mutable",
                      "name": "slotPartId",
                      "nameLocation": "13105:10:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29295,
                      "src": "13098:17:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 29161,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "13098:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29165,
                  "initialValue": {
                    "expression": {
                      "id": 29163,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29151,
                      "src": "13118:4:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                        "typeString": "struct IERC6220.IntakeEquip memory"
                      }
                    },
                    "id": 29164,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13123:10:78",
                    "memberName": "slotPartId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28566,
                    "src": "13118:15:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13098:35:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 29179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 29166,
                              "name": "_equipments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28736,
                              "src": "13160:11:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$_$",
                                "typeString": "mapping(uint256 => mapping(address => mapping(uint64 => struct IERC6220.Equipment storage ref)))"
                              }
                            },
                            "id": 29169,
                            "indexExpression": {
                              "expression": {
                                "id": 29167,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29151,
                                "src": "13172:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                                  "typeString": "struct IERC6220.IntakeEquip memory"
                                }
                              },
                              "id": 29168,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13177:7:78",
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28560,
                              "src": "13172:12:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13160:25:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$",
                              "typeString": "mapping(address => mapping(uint64 => struct IERC6220.Equipment storage ref))"
                            }
                          },
                          "id": 29171,
                          "indexExpression": {
                            "id": 29170,
                            "name": "catalogAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29155,
                            "src": "13186:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13160:41:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$",
                            "typeString": "mapping(uint64 => struct IERC6220.Equipment storage ref)"
                          }
                        },
                        "id": 29173,
                        "indexExpression": {
                          "id": 29172,
                          "name": "slotPartId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29162,
                          "src": "13202:10:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13160:53:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Equipment_$28557_storage",
                          "typeString": "struct IERC6220.Equipment storage ref"
                        }
                      },
                      "id": 29174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13231:22:78",
                      "memberName": "childEquippableAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28556,
                      "src": "13160:93:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 29177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13265:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 29176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13257:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 29175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13257:7:78",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 29178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13257:10:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13160:107:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29183,
                  "nodeType": "IfStatement",
                  "src": "13143:163:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29180,
                        "name": "RMRKSlotAlreadyUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33748,
                        "src": "13285:19:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 29181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13285:21:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 29182,
                    "nodeType": "RevertStatement",
                    "src": "13278:28:78"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29185,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29151,
                          "src": "13390:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                            "typeString": "struct IERC6220.IntakeEquip memory"
                          }
                        },
                        "id": 29186,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13395:7:78",
                        "memberName": "assetId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28564,
                        "src": "13390:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 29187,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29162,
                        "src": "13404:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 29184,
                      "name": "_checkAssetAcceptsSlot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29320,
                      "src": "13367:22:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (uint64,uint64) view"
                      }
                    },
                    "id": 29188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13367:48:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29189,
                  "nodeType": "ExpressionStatement",
                  "src": "13367:48:78"
                },
                {
                  "assignments": [
                    29194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29194,
                      "mutability": "mutable",
                      "name": "child",
                      "nameLocation": "13448:5:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29295,
                      "src": "13426:27:78",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                        "typeString": "struct IERC7401.Child"
                      },
                      "typeName": {
                        "id": 29193,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 29192,
                          "name": "IERC7401.Child",
                          "nameLocations": [
                            "13426:8:78",
                            "13435:5:78"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34941,
                          "src": "13426:14:78"
                        },
                        "referencedDeclaration": 34941,
                        "src": "13426:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Child_$34941_storage_ptr",
                          "typeString": "struct IERC7401.Child"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29201,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29196,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29151,
                          "src": "13464:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                            "typeString": "struct IERC6220.IntakeEquip memory"
                          }
                        },
                        "id": 29197,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13469:7:78",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28560,
                        "src": "13464:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 29198,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29151,
                          "src": "13478:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                            "typeString": "struct IERC6220.IntakeEquip memory"
                          }
                        },
                        "id": 29199,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13483:10:78",
                        "memberName": "childIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28562,
                        "src": "13478:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29195,
                      "name": "childOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37151,
                      "src": "13456:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_struct$_Child_$34941_memory_ptr_$",
                        "typeString": "function (uint256,uint256) view returns (struct IERC7401.Child memory)"
                      }
                    },
                    "id": 29200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13456:38:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                      "typeString": "struct IERC7401.Child memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13426:68:78"
                },
                {
                  "condition": {
                    "id": 29217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "13681:244:78",
                    "subExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 29209,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "13796:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RMRKEquippable_$29630",
                                "typeString": "contract RMRKEquippable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RMRKEquippable_$29630",
                                "typeString": "contract RMRKEquippable"
                              }
                            ],
                            "id": 29208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13788:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29207,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13788:7:78",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13788:13:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 29211,
                            "name": "child",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29194,
                            "src": "13823:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                              "typeString": "struct IERC7401.Child memory"
                            }
                          },
                          "id": 29212,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13829:7:78",
                          "memberName": "tokenId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34938,
                          "src": "13823:13:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 29213,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29151,
                            "src": "13858:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                              "typeString": "struct IERC6220.IntakeEquip memory"
                            }
                          },
                          "id": 29214,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13863:12:78",
                          "memberName": "childAssetId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28568,
                          "src": "13858:17:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 29215,
                          "name": "slotPartId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29162,
                          "src": "13897:10:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 29203,
                                "name": "child",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29194,
                                "src": "13691:5:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                                  "typeString": "struct IERC7401.Child memory"
                                }
                              },
                              "id": 29204,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13697:15:78",
                              "memberName": "contractAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34940,
                              "src": "13691:21:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 29202,
                            "name": "IERC6220",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28682,
                            "src": "13682:8:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC6220_$28682_$",
                              "typeString": "type(contract IERC6220)"
                            }
                          },
                          "id": 29205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13682:31:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC6220_$28682",
                            "typeString": "contract IERC6220"
                          }
                        },
                        "id": 29206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13731:35:78",
                        "memberName": "canTokenBeEquippedWithAssetIntoSlot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28651,
                        "src": "13682:84:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_uint64_$_t_uint64_$returns$_t_bool_$",
                          "typeString": "function (address,uint256,uint64,uint64) view external returns (bool)"
                        }
                      },
                      "id": 29216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13682:243:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29221,
                  "nodeType": "IfStatement",
                  "src": "13664:323:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29218,
                        "name": "RMRKTokenCannotBeEquippedWithAssetIntoSlot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33754,
                        "src": "13943:42:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 29219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13943:44:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 29220,
                    "nodeType": "RevertStatement",
                    "src": "13936:51:78"
                  }
                },
                {
                  "condition": {
                    "id": 29230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "14057:128:78",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 29226,
                          "name": "slotPartId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29162,
                          "src": "14122:10:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "expression": {
                            "id": 29227,
                            "name": "child",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29194,
                            "src": "14150:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                              "typeString": "struct IERC7401.Child memory"
                            }
                          },
                          "id": 29228,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14156:15:78",
                          "memberName": "contractAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34940,
                          "src": "14150:21:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 29223,
                              "name": "catalogAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29155,
                              "src": "14071:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 29222,
                            "name": "IRMRKCatalog",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28530,
                            "src": "14058:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IRMRKCatalog_$28530_$",
                              "typeString": "type(contract IRMRKCatalog)"
                            }
                          },
                          "id": 29224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14058:28:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRMRKCatalog_$28530",
                            "typeString": "contract IRMRKCatalog"
                          }
                        },
                        "id": 29225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14087:17:78",
                        "memberName": "checkIsEquippable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28501,
                        "src": "14058:46:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint64_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (uint64,address) view external returns (bool)"
                        }
                      },
                      "id": 29229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14058:127:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29234,
                  "nodeType": "IfStatement",
                  "src": "14040:203:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29231,
                        "name": "RMRKEquippableEquipNotAllowedByCatalog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33621,
                        "src": "14203:38:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 29232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14203:40:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 29233,
                    "nodeType": "RevertStatement",
                    "src": "14196:47:78"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29236,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29151,
                        "src": "14267:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                          "typeString": "struct IERC6220.IntakeEquip memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                          "typeString": "struct IERC6220.IntakeEquip memory"
                        }
                      ],
                      "id": 29235,
                      "name": "_beforeEquip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29599,
                      "src": "14254:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_IntakeEquip_$28569_memory_ptr_$returns$__$",
                        "typeString": "function (struct IERC6220.IntakeEquip memory)"
                      }
                    },
                    "id": 29237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14254:18:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29238,
                  "nodeType": "ExpressionStatement",
                  "src": "14254:18:78"
                },
                {
                  "assignments": [
                    29241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29241,
                      "mutability": "mutable",
                      "name": "newEquip",
                      "nameLocation": "14299:8:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29295,
                      "src": "14282:25:78",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                        "typeString": "struct IERC6220.Equipment"
                      },
                      "typeName": {
                        "id": 29240,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 29239,
                          "name": "Equipment",
                          "nameLocations": [
                            "14282:9:78"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28557,
                          "src": "14282:9:78"
                        },
                        "referencedDeclaration": 28557,
                        "src": "14282:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Equipment_$28557_storage_ptr",
                          "typeString": "struct IERC6220.Equipment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29252,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29243,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29151,
                          "src": "14343:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                            "typeString": "struct IERC6220.IntakeEquip memory"
                          }
                        },
                        "id": 29244,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14348:7:78",
                        "memberName": "assetId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28564,
                        "src": "14343:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 29245,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29151,
                          "src": "14383:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                            "typeString": "struct IERC6220.IntakeEquip memory"
                          }
                        },
                        "id": 29246,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14388:12:78",
                        "memberName": "childAssetId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28568,
                        "src": "14383:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 29247,
                          "name": "child",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29194,
                          "src": "14423:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                            "typeString": "struct IERC7401.Child memory"
                          }
                        },
                        "id": 29248,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14429:7:78",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34938,
                        "src": "14423:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 29249,
                          "name": "child",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29194,
                          "src": "14474:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                            "typeString": "struct IERC7401.Child memory"
                          }
                        },
                        "id": 29250,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14480:15:78",
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34940,
                        "src": "14474:21:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29242,
                      "name": "Equipment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28557,
                      "src": "14310:9:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Equipment_$28557_storage_ptr_$",
                        "typeString": "type(struct IERC6220.Equipment storage pointer)"
                      }
                    },
                    "id": 29251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "14334:7:78",
                      "14369:12:78",
                      "14414:7:78",
                      "14450:22:78"
                    ],
                    "names": [
                      "assetId",
                      "childAssetId",
                      "childId",
                      "childEquippableAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "14310:196:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                      "typeString": "struct IERC6220.Equipment memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14282:224:78"
                },
                {
                  "expression": {
                    "id": 29262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 29253,
                            "name": "_equipments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28736,
                            "src": "14517:11:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$_$",
                              "typeString": "mapping(uint256 => mapping(address => mapping(uint64 => struct IERC6220.Equipment storage ref)))"
                            }
                          },
                          "id": 29258,
                          "indexExpression": {
                            "expression": {
                              "id": 29254,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29151,
                              "src": "14529:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                                "typeString": "struct IERC6220.IntakeEquip memory"
                              }
                            },
                            "id": 29255,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14534:7:78",
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28560,
                            "src": "14529:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14517:25:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$",
                            "typeString": "mapping(address => mapping(uint64 => struct IERC6220.Equipment storage ref))"
                          }
                        },
                        "id": 29259,
                        "indexExpression": {
                          "id": 29256,
                          "name": "catalogAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29155,
                          "src": "14543:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14517:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$",
                          "typeString": "mapping(uint64 => struct IERC6220.Equipment storage ref)"
                        }
                      },
                      "id": 29260,
                      "indexExpression": {
                        "id": 29257,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29162,
                        "src": "14559:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14517:53:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Equipment_$28557_storage",
                        "typeString": "struct IERC6220.Equipment storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29261,
                      "name": "newEquip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29241,
                      "src": "14573:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                        "typeString": "struct IERC6220.Equipment memory"
                      }
                    },
                    "src": "14517:64:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Equipment_$28557_storage",
                      "typeString": "struct IERC6220.Equipment storage ref"
                    }
                  },
                  "id": 29263,
                  "nodeType": "ExpressionStatement",
                  "src": "14517:64:78"
                },
                {
                  "expression": {
                    "id": 29275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 29264,
                            "name": "_equipCountPerChild",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28745,
                            "src": "14591:19:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                              "typeString": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
                            }
                          },
                          "id": 29271,
                          "indexExpression": {
                            "expression": {
                              "id": 29265,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29151,
                              "src": "14611:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                                "typeString": "struct IERC6220.IntakeEquip memory"
                              }
                            },
                            "id": 29266,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14616:7:78",
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28560,
                            "src": "14611:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14591:33:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 29272,
                        "indexExpression": {
                          "expression": {
                            "id": 29267,
                            "name": "child",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29194,
                            "src": "14625:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                              "typeString": "struct IERC7401.Child memory"
                            }
                          },
                          "id": 29268,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14631:15:78",
                          "memberName": "contractAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34940,
                          "src": "14625:21:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14591:56:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 29273,
                      "indexExpression": {
                        "expression": {
                          "id": 29269,
                          "name": "child",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29194,
                          "src": "14661:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                            "typeString": "struct IERC7401.Child memory"
                          }
                        },
                        "id": 29270,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14667:7:78",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34938,
                        "src": "14661:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14591:93:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 29274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14688:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14591:98:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29276,
                  "nodeType": "ExpressionStatement",
                  "src": "14591:98:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29278,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29151,
                          "src": "14737:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                            "typeString": "struct IERC6220.IntakeEquip memory"
                          }
                        },
                        "id": 29279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14742:7:78",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28560,
                        "src": "14737:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 29280,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29151,
                          "src": "14763:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                            "typeString": "struct IERC6220.IntakeEquip memory"
                          }
                        },
                        "id": 29281,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14768:7:78",
                        "memberName": "assetId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28564,
                        "src": "14763:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 29282,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29162,
                        "src": "14789:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 29283,
                          "name": "child",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29194,
                          "src": "14813:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                            "typeString": "struct IERC7401.Child memory"
                          }
                        },
                        "id": 29284,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14819:7:78",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34938,
                        "src": "14813:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 29285,
                          "name": "child",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29194,
                          "src": "14840:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Child_$34941_memory_ptr",
                            "typeString": "struct IERC7401.Child memory"
                          }
                        },
                        "id": 29286,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14846:15:78",
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34940,
                        "src": "14840:21:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 29287,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29151,
                          "src": "14875:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                            "typeString": "struct IERC6220.IntakeEquip memory"
                          }
                        },
                        "id": 29288,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14880:12:78",
                        "memberName": "childAssetId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28568,
                        "src": "14875:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 29277,
                      "name": "ChildAssetEquipped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28584,
                      "src": "14705:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint64_$_t_uint64_$_t_uint256_$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64,uint64,uint256,address,uint64)"
                      }
                    },
                    "id": 29289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14705:197:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29290,
                  "nodeType": "EmitStatement",
                  "src": "14700:202:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29292,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29151,
                        "src": "14924:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                          "typeString": "struct IERC6220.IntakeEquip memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                          "typeString": "struct IERC6220.IntakeEquip memory"
                        }
                      ],
                      "id": 29291,
                      "name": "_afterEquip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29607,
                      "src": "14912:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_IntakeEquip_$28569_memory_ptr_$returns$__$",
                        "typeString": "function (struct IERC6220.IntakeEquip memory)"
                      }
                    },
                    "id": 29293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14912:17:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29294,
                  "nodeType": "ExpressionStatement",
                  "src": "14912:17:78"
                }
              ]
            },
            "documentation": {
              "id": 29148,
              "nodeType": "StructuredDocumentation",
              "src": "12286:673:78",
              "text": " @notice Private function used to equip a child into a token.\n @dev If the `Slot` already has an item equipped, the execution will be reverted.\n @dev If the child can't be used in the given `Slot`, the execution will be reverted.\n @dev If the catalog doesn't allow this equip to happen, the execution will be reverted.\n @dev The `IntakeEquip` stuct contains the following data:\n  [\n      tokenId,\n      childIndex,\n      assetId,\n      slotPartId,\n      childAssetId\n  ]\n @dev Emits ***ChildAssetEquipped*** event.\n @param data An `IntakeEquip` struct specifying the equip data"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_equip",
            "nameLocation": "12973:6:78",
            "parameters": {
              "id": 29152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29151,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12999:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29296,
                  "src": "12980:23:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                    "typeString": "struct IERC6220.IntakeEquip"
                  },
                  "typeName": {
                    "id": 29150,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29149,
                      "name": "IntakeEquip",
                      "nameLocations": [
                        "12980:11:78"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28569,
                      "src": "12980:11:78"
                    },
                    "referencedDeclaration": 28569,
                    "src": "12980:11:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IntakeEquip_$28569_storage_ptr",
                      "typeString": "struct IERC6220.IntakeEquip"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12979:25:78"
            },
            "returnParameters": {
              "id": 29153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13022:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 29320,
            "nodeType": "FunctionDefinition",
            "src": "15208:236:78",
            "nodes": [],
            "body": {
              "id": 29319,
              "nodeType": "Block",
              "src": "15310:134:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    29305
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 29305,
                      "mutability": "mutable",
                      "name": "found",
                      "nameLocation": "15328:5:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29319,
                      "src": "15323:10:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 29304,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "15323:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29312,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29310,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29301,
                        "src": "15363:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 29306,
                          "name": "_partIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28726,
                          "src": "15337:8:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_uint64_$dyn_storage_$",
                            "typeString": "mapping(uint64 => uint64[] storage ref)"
                          }
                        },
                        "id": 29308,
                        "indexExpression": {
                          "id": 29307,
                          "name": "assetId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29299,
                          "src": "15346:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15337:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_storage",
                          "typeString": "uint64[] storage ref"
                        }
                      },
                      "id": 29309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15355:7:78",
                      "memberName": "indexOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33872,
                      "src": "15337:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint64_$dyn_memory_ptr_$_t_uint64_$returns$_t_uint256_$_t_bool_$attached_to$_t_array$_t_uint64_$dyn_memory_ptr_$",
                        "typeString": "function (uint64[] memory,uint64) pure returns (uint256,bool)"
                      }
                    },
                    "id": 29311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15337:37:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15320:54:78"
                },
                {
                  "condition": {
                    "id": 29314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "15388:6:78",
                    "subExpression": {
                      "id": 29313,
                      "name": "found",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29305,
                      "src": "15389:5:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29318,
                  "nodeType": "IfStatement",
                  "src": "15384:53:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29315,
                        "name": "RMRKTargetAssetCannotReceiveSlot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33751,
                        "src": "15403:32:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 29316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15403:34:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 29317,
                    "nodeType": "RevertStatement",
                    "src": "15396:41:78"
                  }
                }
              ]
            },
            "documentation": {
              "id": 29297,
              "nodeType": "StructuredDocumentation",
              "src": "14942:261:78",
              "text": " @notice Private function to check if a given asset accepts a given slot or not.\n @dev Execution will be reverted if the `Slot` does not apply for the asset.\n @param assetId ID of the asset\n @param slotPartId ID of the `Slot`"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkAssetAcceptsSlot",
            "nameLocation": "15217:22:78",
            "parameters": {
              "id": 29302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29299,
                  "mutability": "mutable",
                  "name": "assetId",
                  "nameLocation": "15256:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29320,
                  "src": "15249:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29298,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "15249:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29301,
                  "mutability": "mutable",
                  "name": "slotPartId",
                  "nameLocation": "15280:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29320,
                  "src": "15273:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29300,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "15273:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15239:57:78"
            },
            "returnParameters": {
              "id": 29303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15310:0:78"
            },
            "scope": 29630,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 29340,
            "nodeType": "FunctionDefinition",
            "src": "15494:207:78",
            "nodes": [],
            "body": {
              "id": 29339,
              "nodeType": "Block",
              "src": "15646:55:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29334,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29323,
                        "src": "15665:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29335,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29325,
                        "src": "15674:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 29336,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29327,
                        "src": "15683:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 29333,
                      "name": "_unequip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29424,
                      "src": "15656:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64,uint64)"
                      }
                    },
                    "id": 29337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15656:38:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29338,
                  "nodeType": "ExpressionStatement",
                  "src": "15656:38:78"
                }
              ]
            },
            "baseFunctions": [
              28625
            ],
            "documentation": {
              "id": 29321,
              "nodeType": "StructuredDocumentation",
              "src": "15450:39:78",
              "text": " @inheritdoc IERC6220"
            },
            "functionSelector": "c259a988",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 29330,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29323,
                    "src": "15637:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 29331,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29329,
                  "name": "onlyApprovedForAssetsOrOwner",
                  "nameLocations": [
                    "15608:28:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28780,
                  "src": "15608:28:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "15608:37:78"
              }
            ],
            "name": "unequip",
            "nameLocation": "15503:7:78",
            "parameters": {
              "id": 29328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29323,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15528:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29340,
                  "src": "15520:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15520:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29325,
                  "mutability": "mutable",
                  "name": "assetId",
                  "nameLocation": "15552:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29340,
                  "src": "15545:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29324,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "15545:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29327,
                  "mutability": "mutable",
                  "name": "slotPartId",
                  "nameLocation": "15576:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29340,
                  "src": "15569:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29326,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "15569:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15510:82:78"
            },
            "returnParameters": {
              "id": 29332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15646:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 29424,
            "nodeType": "FunctionDefinition",
            "src": "16107:926:78",
            "nodes": [],
            "body": {
              "id": 29423,
              "nodeType": "Block",
              "src": "16224:809:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    29351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29351,
                      "mutability": "mutable",
                      "name": "targetCatalogAddress",
                      "nameLocation": "16242:20:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29423,
                      "src": "16234:28:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29350,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16234:7:78",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29355,
                  "initialValue": {
                    "baseExpression": {
                      "id": 29352,
                      "name": "_catalogAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28715,
                      "src": "16265:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint64_$_t_address_$",
                        "typeString": "mapping(uint64 => address)"
                      }
                    },
                    "id": 29354,
                    "indexExpression": {
                      "id": 29353,
                      "name": "assetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29345,
                      "src": "16283:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16265:26:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16234:57:78"
                },
                {
                  "assignments": [
                    29358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29358,
                      "mutability": "mutable",
                      "name": "equipment",
                      "nameLocation": "16318:9:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29423,
                      "src": "16301:26:78",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                        "typeString": "struct IERC6220.Equipment"
                      },
                      "typeName": {
                        "id": 29357,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 29356,
                          "name": "Equipment",
                          "nameLocations": [
                            "16301:9:78"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28557,
                          "src": "16301:9:78"
                        },
                        "referencedDeclaration": 28557,
                        "src": "16301:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Equipment_$28557_storage_ptr",
                          "typeString": "struct IERC6220.Equipment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29366,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 29359,
                          "name": "_equipments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28736,
                          "src": "16330:11:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$_$",
                            "typeString": "mapping(uint256 => mapping(address => mapping(uint64 => struct IERC6220.Equipment storage ref)))"
                          }
                        },
                        "id": 29361,
                        "indexExpression": {
                          "id": 29360,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29343,
                          "src": "16342:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16330:20:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$",
                          "typeString": "mapping(address => mapping(uint64 => struct IERC6220.Equipment storage ref))"
                        }
                      },
                      "id": 29363,
                      "indexExpression": {
                        "id": 29362,
                        "name": "targetCatalogAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29351,
                        "src": "16351:20:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16330:42:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$",
                        "typeString": "mapping(uint64 => struct IERC6220.Equipment storage ref)"
                      }
                    },
                    "id": 29365,
                    "indexExpression": {
                      "id": 29364,
                      "name": "slotPartId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29347,
                      "src": "16386:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16330:76:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Equipment_$28557_storage",
                      "typeString": "struct IERC6220.Equipment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16301:105:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 29373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 29367,
                        "name": "equipment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29358,
                        "src": "16420:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                          "typeString": "struct IERC6220.Equipment memory"
                        }
                      },
                      "id": 29368,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16430:22:78",
                      "memberName": "childEquippableAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28556,
                      "src": "16420:32:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 29371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16464:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 29370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16456:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 29369,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16456:7:78",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 29372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16456:10:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16420:46:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29377,
                  "nodeType": "IfStatement",
                  "src": "16416:88:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29374,
                        "name": "RMRKNotEquipped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33706,
                        "src": "16487:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 29375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16487:17:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 29376,
                    "nodeType": "RevertStatement",
                    "src": "16480:24:78"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29379,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29343,
                        "src": "16529:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29380,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29345,
                        "src": "16538:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 29381,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29347,
                        "src": "16547:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 29378,
                      "name": "_beforeUnequip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29618,
                      "src": "16514:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64,uint64)"
                      }
                    },
                    "id": 29382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16514:44:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29383,
                  "nodeType": "ExpressionStatement",
                  "src": "16514:44:78"
                },
                {
                  "expression": {
                    "id": 29391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "16569:61:78",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 29384,
                            "name": "_equipments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28736,
                            "src": "16576:11:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$_$",
                              "typeString": "mapping(uint256 => mapping(address => mapping(uint64 => struct IERC6220.Equipment storage ref)))"
                            }
                          },
                          "id": 29386,
                          "indexExpression": {
                            "id": 29385,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29343,
                            "src": "16588:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16576:20:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$",
                            "typeString": "mapping(address => mapping(uint64 => struct IERC6220.Equipment storage ref))"
                          }
                        },
                        "id": 29388,
                        "indexExpression": {
                          "id": 29387,
                          "name": "targetCatalogAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29351,
                          "src": "16597:20:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16576:42:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$",
                          "typeString": "mapping(uint64 => struct IERC6220.Equipment storage ref)"
                        }
                      },
                      "id": 29390,
                      "indexExpression": {
                        "id": 29389,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29347,
                        "src": "16619:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16576:54:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Equipment_$28557_storage",
                        "typeString": "struct IERC6220.Equipment storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29392,
                  "nodeType": "ExpressionStatement",
                  "src": "16569:61:78"
                },
                {
                  "expression": {
                    "id": 29403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 29393,
                            "name": "_equipCountPerChild",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28745,
                            "src": "16640:19:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                              "typeString": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
                            }
                          },
                          "id": 29399,
                          "indexExpression": {
                            "id": 29394,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29343,
                            "src": "16660:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16640:28:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 29400,
                        "indexExpression": {
                          "expression": {
                            "id": 29395,
                            "name": "equipment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29358,
                            "src": "16669:9:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                              "typeString": "struct IERC6220.Equipment memory"
                            }
                          },
                          "id": 29396,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16679:22:78",
                          "memberName": "childEquippableAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28556,
                          "src": "16669:32:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16640:62:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 29401,
                      "indexExpression": {
                        "expression": {
                          "id": 29397,
                          "name": "equipment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29358,
                          "src": "16716:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                            "typeString": "struct IERC6220.Equipment memory"
                          }
                        },
                        "id": 29398,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16726:7:78",
                        "memberName": "childId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28554,
                        "src": "16716:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16640:103:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 29402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16747:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "16640:108:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29404,
                  "nodeType": "ExpressionStatement",
                  "src": "16640:108:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29406,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29343,
                        "src": "16798:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29407,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29345,
                        "src": "16819:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 29408,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29347,
                        "src": "16840:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 29409,
                          "name": "equipment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29358,
                          "src": "16864:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                            "typeString": "struct IERC6220.Equipment memory"
                          }
                        },
                        "id": 29410,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16874:7:78",
                        "memberName": "childId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28554,
                        "src": "16864:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 29411,
                          "name": "equipment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29358,
                          "src": "16895:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                            "typeString": "struct IERC6220.Equipment memory"
                          }
                        },
                        "id": 29412,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16905:22:78",
                        "memberName": "childEquippableAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28556,
                        "src": "16895:32:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 29413,
                          "name": "equipment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29358,
                          "src": "16941:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                            "typeString": "struct IERC6220.Equipment memory"
                          }
                        },
                        "id": 29414,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16951:12:78",
                        "memberName": "childAssetId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28552,
                        "src": "16941:22:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 29405,
                      "name": "ChildAssetUnequipped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28599,
                      "src": "16764:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint64_$_t_uint64_$_t_uint256_$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64,uint64,uint256,address,uint64)"
                      }
                    },
                    "id": 29415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16764:209:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29416,
                  "nodeType": "EmitStatement",
                  "src": "16759:214:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29418,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29343,
                        "src": "16997:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29419,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29345,
                        "src": "17006:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 29420,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29347,
                        "src": "17015:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 29417,
                      "name": "_afterUnequip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29629,
                      "src": "16983:13:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64,uint64)"
                      }
                    },
                    "id": 29421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16983:43:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29422,
                  "nodeType": "ExpressionStatement",
                  "src": "16983:43:78"
                }
              ]
            },
            "documentation": {
              "id": 29341,
              "nodeType": "StructuredDocumentation",
              "src": "15707:395:78",
              "text": " @notice Private function used to unequip child from parent token.\n @dev Emits ***ChildAssetUnequipped*** event.\n @param tokenId ID of the parent from which the child is being unequipped\n @param assetId ID of the parent's asset that contains the `Slot` into which the child is equipped\n @param slotPartId ID of the `Slot` from which to unequip the child"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unequip",
            "nameLocation": "16116:8:78",
            "parameters": {
              "id": 29348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29343,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "16142:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29424,
                  "src": "16134:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16134:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29345,
                  "mutability": "mutable",
                  "name": "assetId",
                  "nameLocation": "16166:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29424,
                  "src": "16159:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29344,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "16159:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29347,
                  "mutability": "mutable",
                  "name": "slotPartId",
                  "nameLocation": "16190:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29424,
                  "src": "16183:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29346,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "16183:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16124:82:78"
            },
            "returnParameters": {
              "id": 29349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16224:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 29447,
            "nodeType": "FunctionDefinition",
            "src": "17083:226:78",
            "nodes": [],
            "body": {
              "id": 29446,
              "nodeType": "Block",
              "src": "17229:80:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 29444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 29436,
                            "name": "_equipCountPerChild",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28745,
                            "src": "17246:19:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                              "typeString": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
                            }
                          },
                          "id": 29438,
                          "indexExpression": {
                            "id": 29437,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29427,
                            "src": "17266:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17246:28:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 29440,
                        "indexExpression": {
                          "id": 29439,
                          "name": "childAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29429,
                          "src": "17275:12:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17246:42:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 29442,
                      "indexExpression": {
                        "id": 29441,
                        "name": "childId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29431,
                        "src": "17289:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17246:51:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 29443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17301:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17246:56:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 29435,
                  "id": 29445,
                  "nodeType": "Return",
                  "src": "17239:63:78"
                }
              ]
            },
            "baseFunctions": [
              28637
            ],
            "documentation": {
              "id": 29425,
              "nodeType": "StructuredDocumentation",
              "src": "17039:39:78",
              "text": " @inheritdoc IERC6220"
            },
            "functionSelector": "ee1dffcf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isChildEquipped",
            "nameLocation": "17092:15:78",
            "parameters": {
              "id": 29432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29427,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17125:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29447,
                  "src": "17117:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17117:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29429,
                  "mutability": "mutable",
                  "name": "childAddress",
                  "nameLocation": "17150:12:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29447,
                  "src": "17142:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17142:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29431,
                  "mutability": "mutable",
                  "name": "childId",
                  "nameLocation": "17180:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29447,
                  "src": "17172:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17172:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17107:86:78"
            },
            "returnParameters": {
              "id": 29435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29447,
                  "src": "17223:4:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29433,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17223:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17222:6:78"
            },
            "scope": 29630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 29489,
            "nodeType": "FunctionDefinition",
            "src": "17963:490:78",
            "nodes": [],
            "body": {
              "id": 29488,
              "nodeType": "Block",
              "src": "18121:332:78",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 29469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 29462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 29457,
                        "name": "equippableGroupId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29450,
                        "src": "18135:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 29460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18163:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 29459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18156:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 29458,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "18156:6:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18156:9:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "18135:30:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 29468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 29463,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29454,
                        "src": "18169:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 29466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18190:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 29465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18183:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 29464,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "18183:6:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18183:9:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "18169:23:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "18135:57:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29473,
                  "nodeType": "IfStatement",
                  "src": "18131:103:78",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29470,
                        "name": "RMRKIdZeroForbidden",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33627,
                        "src": "18213:19:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 29471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18213:21:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 29472,
                    "nodeType": "RevertStatement",
                    "src": "18206:28:78"
                  }
                },
                {
                  "expression": {
                    "id": 29480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 29474,
                          "name": "_validParentSlots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28752,
                          "src": "18244:17:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_uint64_$_$",
                            "typeString": "mapping(uint64 => mapping(address => uint64))"
                          }
                        },
                        "id": 29477,
                        "indexExpression": {
                          "id": 29475,
                          "name": "equippableGroupId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29450,
                          "src": "18262:17:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18244:36:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
                          "typeString": "mapping(address => uint64)"
                        }
                      },
                      "id": 29478,
                      "indexExpression": {
                        "id": 29476,
                        "name": "parentAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29452,
                        "src": "18281:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18244:51:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29479,
                      "name": "slotPartId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29454,
                      "src": "18298:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "18244:64:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 29481,
                  "nodeType": "ExpressionStatement",
                  "src": "18244:64:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29483,
                        "name": "equippableGroupId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29450,
                        "src": "18368:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 29484,
                        "name": "slotPartId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29454,
                        "src": "18399:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 29485,
                        "name": "parentAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29452,
                        "src": "18423:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29482,
                      "name": "ValidParentEquippableGroupIdSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28608,
                      "src": "18323:31:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_uint64_$_t_address_$returns$__$",
                        "typeString": "function (uint64,uint64,address)"
                      }
                    },
                    "id": 29486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18323:123:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29487,
                  "nodeType": "EmitStatement",
                  "src": "18318:128:78"
                }
              ]
            },
            "documentation": {
              "id": 29448,
              "nodeType": "StructuredDocumentation",
              "src": "17384:574:78",
              "text": " @notice Internal function used to declare that the assets belonging to a given `equippableGroupId` are\n  equippable into the `Slot` associated with the `partId` of the collection at the specified `parentAddress`.\n @dev Emits ***ValidParentEquippableGroupIdSet*** event.\n @param equippableGroupId ID of the equippable group\n @param parentAddress Address of the parent into which the equippable group can be equipped into\n @param slotPartId ID of the `Slot` that the items belonging to the equippable group can be equipped into"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setValidParentForEquippableGroup",
            "nameLocation": "17972:33:78",
            "parameters": {
              "id": 29455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29450,
                  "mutability": "mutable",
                  "name": "equippableGroupId",
                  "nameLocation": "18022:17:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29489,
                  "src": "18015:24:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29449,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "18015:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29452,
                  "mutability": "mutable",
                  "name": "parentAddress",
                  "nameLocation": "18057:13:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29489,
                  "src": "18049:21:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18049:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29454,
                  "mutability": "mutable",
                  "name": "slotPartId",
                  "nameLocation": "18087:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29489,
                  "src": "18080:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29453,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "18080:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18005:98:78"
            },
            "returnParameters": {
              "id": 29456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18121:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 29536,
            "nodeType": "FunctionDefinition",
            "src": "18503:502:78",
            "nodes": [],
            "body": {
              "id": 29535,
              "nodeType": "Block",
              "src": "18685:320:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    29504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29504,
                      "mutability": "mutable",
                      "name": "equippableGroupId",
                      "nameLocation": "18702:17:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29535,
                      "src": "18695:24:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 29503,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "18695:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29508,
                  "initialValue": {
                    "baseExpression": {
                      "id": 29505,
                      "name": "_equippableGroupIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28720,
                      "src": "18722:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                        "typeString": "mapping(uint64 => uint64)"
                      }
                    },
                    "id": 29507,
                    "indexExpression": {
                      "id": 29506,
                      "name": "assetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29496,
                      "src": "18742:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18722:28:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18695:55:78"
                },
                {
                  "assignments": [
                    29510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29510,
                      "mutability": "mutable",
                      "name": "equippableSlot",
                      "nameLocation": "18767:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 29535,
                      "src": "18760:21:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 29509,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "18760:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29516,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 29511,
                        "name": "_validParentSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28752,
                        "src": "18784:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_uint64_$_$",
                          "typeString": "mapping(uint64 => mapping(address => uint64))"
                        }
                      },
                      "id": 29513,
                      "indexExpression": {
                        "id": 29512,
                        "name": "equippableGroupId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29504,
                        "src": "18802:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "18784:36:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
                        "typeString": "mapping(address => uint64)"
                      }
                    },
                    "id": 29515,
                    "indexExpression": {
                      "id": 29514,
                      "name": "parent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29492,
                      "src": "18821:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18784:44:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18760:68:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 29519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29517,
                      "name": "equippableSlot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29510,
                      "src": "18842:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 29518,
                      "name": "slotId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29498,
                      "src": "18860:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "18842:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29532,
                  "nodeType": "IfStatement",
                  "src": "18838:139:78",
                  "trueBody": {
                    "id": 29531,
                    "nodeType": "Block",
                    "src": "18868:109:78",
                    "statements": [
                      {
                        "assignments": [
                          null,
                          29521
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 29521,
                            "mutability": "mutable",
                            "name": "found",
                            "nameLocation": "18890:5:78",
                            "nodeType": "VariableDeclaration",
                            "scope": 29531,
                            "src": "18885:10:78",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 29520,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "18885:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 29528,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 29526,
                              "name": "assetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29496,
                              "src": "18932:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 29523,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29494,
                                  "src": "18915:7:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 29522,
                                "name": "getActiveAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33971,
                                "src": "18899:15:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_uint64_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) view returns (uint64[] memory)"
                                }
                              },
                              "id": 29524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18899:24:78",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
                                "typeString": "uint64[] memory"
                              }
                            },
                            "id": 29525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18924:7:78",
                            "memberName": "indexOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33872,
                            "src": "18899:32:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint64_$dyn_memory_ptr_$_t_uint64_$returns$_t_uint256_$_t_bool_$attached_to$_t_array$_t_uint64_$dyn_memory_ptr_$",
                              "typeString": "function (uint64[] memory,uint64) pure returns (uint256,bool)"
                            }
                          },
                          "id": 29527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18899:41:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                            "typeString": "tuple(uint256,bool)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18882:58:78"
                      },
                      {
                        "expression": {
                          "id": 29529,
                          "name": "found",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29521,
                          "src": "18961:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 29502,
                        "id": 29530,
                        "nodeType": "Return",
                        "src": "18954:12:78"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 29533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18993:5:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 29502,
                  "id": 29534,
                  "nodeType": "Return",
                  "src": "18986:12:78"
                }
              ]
            },
            "baseFunctions": [
              28651
            ],
            "documentation": {
              "id": 29490,
              "nodeType": "StructuredDocumentation",
              "src": "18459:39:78",
              "text": " @inheritdoc IERC6220"
            },
            "functionSelector": "074334fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canTokenBeEquippedWithAssetIntoSlot",
            "nameLocation": "18512:35:78",
            "parameters": {
              "id": 29499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29492,
                  "mutability": "mutable",
                  "name": "parent",
                  "nameLocation": "18565:6:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29536,
                  "src": "18557:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18557:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29494,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "18589:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29536,
                  "src": "18581:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18581:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29496,
                  "mutability": "mutable",
                  "name": "assetId",
                  "nameLocation": "18613:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29536,
                  "src": "18606:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29495,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "18606:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29498,
                  "mutability": "mutable",
                  "name": "slotId",
                  "nameLocation": "18637:6:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29536,
                  "src": "18630:13:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29497,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "18630:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18547:102:78"
            },
            "returnParameters": {
              "id": 29502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29536,
                  "src": "18679:4:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29500,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18679:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18678:6:78"
            },
            "scope": 29630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 29569,
            "nodeType": "FunctionDefinition",
            "src": "19131:399:78",
            "nodes": [],
            "body": {
              "id": 29568,
              "nodeType": "Block",
              "src": "19335:195:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 29554,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29539,
                            "src": "19383:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 29555,
                            "name": "assetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29541,
                            "src": "19392:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "id": 29553,
                          "name": "getAssetMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33957,
                          "src": "19366:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256,uint64) view returns (string memory)"
                          }
                        },
                        "id": 29556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19366:34:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 29557,
                          "name": "_equippableGroupIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28720,
                          "src": "19414:19:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_uint64_$",
                            "typeString": "mapping(uint64 => uint64)"
                          }
                        },
                        "id": 29559,
                        "indexExpression": {
                          "id": 29558,
                          "name": "assetId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29541,
                          "src": "19434:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19414:28:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 29560,
                          "name": "_catalogAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28715,
                          "src": "19456:17:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_address_$",
                            "typeString": "mapping(uint64 => address)"
                          }
                        },
                        "id": 29562,
                        "indexExpression": {
                          "id": 29561,
                          "name": "assetId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29541,
                          "src": "19474:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19456:26:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 29563,
                          "name": "_partIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28726,
                          "src": "19496:8:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_uint64_$dyn_storage_$",
                            "typeString": "mapping(uint64 => uint64[] storage ref)"
                          }
                        },
                        "id": 29565,
                        "indexExpression": {
                          "id": 29564,
                          "name": "assetId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29541,
                          "src": "19505:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19496:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_storage",
                          "typeString": "uint64[] storage ref"
                        }
                      }
                    ],
                    "id": 29566,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "19352:171:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint64_$_t_address_$_t_array$_t_uint64_$dyn_storage_$",
                      "typeString": "tuple(string memory,uint64,address,uint64[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 29552,
                  "id": 29567,
                  "nodeType": "Return",
                  "src": "19345:178:78"
                }
              ]
            },
            "baseFunctions": [
              28681
            ],
            "documentation": {
              "id": 29537,
              "nodeType": "StructuredDocumentation",
              "src": "19087:39:78",
              "text": " @inheritdoc IERC6220"
            },
            "functionSelector": "4e60edba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetAndEquippableData",
            "nameLocation": "19140:25:78",
            "parameters": {
              "id": 29542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29539,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "19183:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29569,
                  "src": "19175:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19175:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29541,
                  "mutability": "mutable",
                  "name": "assetId",
                  "nameLocation": "19207:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29569,
                  "src": "19200:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29540,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "19200:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19165:55:78"
            },
            "returnParameters": {
              "id": 29552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29569,
                  "src": "19282:13:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29543,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19282:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29546,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29569,
                  "src": "19297:6:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29545,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "19297:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29548,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29569,
                  "src": "19305:7:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19305:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29551,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29569,
                  "src": "19314:15:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
                    "typeString": "uint64[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 29549,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "19314:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 29550,
                    "nodeType": "ArrayTypeName",
                    "src": "19314:8:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
                      "typeString": "uint64[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19281:49:78"
            },
            "scope": 29630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 29591,
            "nodeType": "FunctionDefinition",
            "src": "19697:243:78",
            "nodes": [],
            "body": {
              "id": 29590,
              "nodeType": "Block",
              "src": "19862:78:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 29582,
                          "name": "_equipments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28736,
                          "src": "19879:11:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$_$",
                            "typeString": "mapping(uint256 => mapping(address => mapping(uint64 => struct IERC6220.Equipment storage ref)))"
                          }
                        },
                        "id": 29584,
                        "indexExpression": {
                          "id": 29583,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29572,
                          "src": "19891:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19879:20:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$_$",
                          "typeString": "mapping(address => mapping(uint64 => struct IERC6220.Equipment storage ref))"
                        }
                      },
                      "id": 29586,
                      "indexExpression": {
                        "id": 29585,
                        "name": "targetCatalogAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29574,
                        "src": "19900:20:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "19879:42:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Equipment_$28557_storage_$",
                        "typeString": "mapping(uint64 => struct IERC6220.Equipment storage ref)"
                      }
                    },
                    "id": 29588,
                    "indexExpression": {
                      "id": 29587,
                      "name": "slotPartId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29576,
                      "src": "19922:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19879:54:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Equipment_$28557_storage",
                      "typeString": "struct IERC6220.Equipment storage ref"
                    }
                  },
                  "functionReturnParameters": 29581,
                  "id": 29589,
                  "nodeType": "Return",
                  "src": "19872:61:78"
                }
              ]
            },
            "baseFunctions": [
              28664
            ],
            "documentation": {
              "id": 29570,
              "nodeType": "StructuredDocumentation",
              "src": "19653:39:78",
              "text": " @inheritdoc IERC6220"
            },
            "functionSelector": "7507e2ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEquipment",
            "nameLocation": "19706:12:78",
            "parameters": {
              "id": 29577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29572,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "19736:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29591,
                  "src": "19728:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19728:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29574,
                  "mutability": "mutable",
                  "name": "targetCatalogAddress",
                  "nameLocation": "19761:20:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29591,
                  "src": "19753:28:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19753:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29576,
                  "mutability": "mutable",
                  "name": "slotPartId",
                  "nameLocation": "19798:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29591,
                  "src": "19791:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29575,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "19791:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19718:96:78"
            },
            "returnParameters": {
              "id": 29581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29580,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29591,
                  "src": "19844:16:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Equipment_$28557_memory_ptr",
                    "typeString": "struct IERC6220.Equipment"
                  },
                  "typeName": {
                    "id": 29579,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29578,
                      "name": "Equipment",
                      "nameLocations": [
                        "19844:9:78"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28557,
                      "src": "19844:9:78"
                    },
                    "referencedDeclaration": 28557,
                    "src": "19844:9:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Equipment_$28557_storage_ptr",
                      "typeString": "struct IERC6220.Equipment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19843:18:78"
            },
            "scope": 29630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 29599,
            "nodeType": "FunctionDefinition",
            "src": "20351:66:78",
            "nodes": [],
            "body": {
              "id": 29598,
              "nodeType": "Block",
              "src": "20415:2:78",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 29592,
              "nodeType": "StructuredDocumentation",
              "src": "19960:386:78",
              "text": " @notice A hook to be called before a equipping a asset to the token.\n @dev The `IntakeEquip` struct consist of the following data:\n  [\n      tokenId,\n      childIndex,\n      assetId,\n      slotPartId,\n      childAssetId\n  ]\n @param data The `IntakeEquip` struct containing data of the asset that is being equipped"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeEquip",
            "nameLocation": "20360:12:78",
            "parameters": {
              "id": 29596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29595,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "20392:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29599,
                  "src": "20373:23:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                    "typeString": "struct IERC6220.IntakeEquip"
                  },
                  "typeName": {
                    "id": 29594,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29593,
                      "name": "IntakeEquip",
                      "nameLocations": [
                        "20373:11:78"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28569,
                      "src": "20373:11:78"
                    },
                    "referencedDeclaration": 28569,
                    "src": "20373:11:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IntakeEquip_$28569_storage_ptr",
                      "typeString": "struct IERC6220.IntakeEquip"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20372:25:78"
            },
            "returnParameters": {
              "id": 29597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20415:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 29607,
            "nodeType": "FunctionDefinition",
            "src": "20806:65:78",
            "nodes": [],
            "body": {
              "id": 29606,
              "nodeType": "Block",
              "src": "20869:2:78",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 29600,
              "nodeType": "StructuredDocumentation",
              "src": "20423:378:78",
              "text": " @notice A hook to be called after equipping a asset to the token.\n @dev The `IntakeEquip` struct consist of the following data:\n  [\n      tokenId,\n      childIndex,\n      assetId,\n      slotPartId,\n      childAssetId\n  ]\n @param data The `IntakeEquip` struct containing data of the asset that was equipped"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterEquip",
            "nameLocation": "20815:11:78",
            "parameters": {
              "id": 29604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29603,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "20846:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29607,
                  "src": "20827:23:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IntakeEquip_$28569_memory_ptr",
                    "typeString": "struct IERC6220.IntakeEquip"
                  },
                  "typeName": {
                    "id": 29602,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29601,
                      "name": "IntakeEquip",
                      "nameLocations": [
                        "20827:11:78"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28569,
                      "src": "20827:11:78"
                    },
                    "referencedDeclaration": 28569,
                    "src": "20827:11:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IntakeEquip_$28569_storage_ptr",
                      "typeString": "struct IERC6220.IntakeEquip"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20826:25:78"
            },
            "returnParameters": {
              "id": 29605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20869:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 29618,
            "nodeType": "FunctionDefinition",
            "src": "21186:125:78",
            "nodes": [],
            "body": {
              "id": 29617,
              "nodeType": "Block",
              "src": "21309:2:78",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 29608,
              "nodeType": "StructuredDocumentation",
              "src": "20877:304:78",
              "text": " @notice A hook to be called before unequipping a asset from the token.\n @param tokenId ID of the token from which the asset is being unequipped\n @param assetId ID of the asset being unequipped\n @param slotPartId ID of the slot from which the asset is being unequipped"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeUnequip",
            "nameLocation": "21195:14:78",
            "parameters": {
              "id": 29615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29610,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "21227:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29618,
                  "src": "21219:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21219:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29612,
                  "mutability": "mutable",
                  "name": "assetId",
                  "nameLocation": "21251:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29618,
                  "src": "21244:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29611,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "21244:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29614,
                  "mutability": "mutable",
                  "name": "slotPartId",
                  "nameLocation": "21275:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29618,
                  "src": "21268:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29613,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "21268:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21209:82:78"
            },
            "returnParameters": {
              "id": 29616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21309:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 29629,
            "nodeType": "FunctionDefinition",
            "src": "21618:124:78",
            "nodes": [],
            "body": {
              "id": 29628,
              "nodeType": "Block",
              "src": "21740:2:78",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 29619,
              "nodeType": "StructuredDocumentation",
              "src": "21317:296:78",
              "text": " @notice A hook to be called after unequipping a asset from the token.\n @param tokenId ID of the token from which the asset was unequipped\n @param assetId ID of the asset that was unequipped\n @param slotPartId ID of the slot from which the asset was unequipped"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterUnequip",
            "nameLocation": "21627:13:78",
            "parameters": {
              "id": 29626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29621,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "21658:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29629,
                  "src": "21650:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21650:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29623,
                  "mutability": "mutable",
                  "name": "assetId",
                  "nameLocation": "21682:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29629,
                  "src": "21675:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29622,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "21675:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29625,
                  "mutability": "mutable",
                  "name": "slotPartId",
                  "nameLocation": "21706:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 29629,
                  "src": "21699:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29624,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "21699:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21640:82:78"
            },
            "returnParameters": {
              "id": 29627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21740:0:78"
            },
            "scope": 29630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28692,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "491:15:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37419,
              "src": "491:15:78"
            },
            "id": 28693,
            "nodeType": "InheritanceSpecifier",
            "src": "491:15:78"
          },
          {
            "baseName": {
              "id": 28694,
              "name": "RMRKNestable",
              "nameLocations": [
                "512:12:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37368,
              "src": "512:12:78"
            },
            "id": 28695,
            "nodeType": "InheritanceSpecifier",
            "src": "512:12:78"
          },
          {
            "baseName": {
              "id": 28696,
              "name": "AbstractMultiAsset",
              "nameLocations": [
                "530:18:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34689,
              "src": "530:18:78"
            },
            "id": 28697,
            "nodeType": "InheritanceSpecifier",
            "src": "530:18:78"
          },
          {
            "baseName": {
              "id": 28698,
              "name": "IERC6220",
              "nameLocations": [
                "554:8:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28682,
              "src": "554:8:78"
            },
            "id": 28699,
            "nodeType": "InheritanceSpecifier",
            "src": "554:8:78"
          }
        ],
        "canonicalName": "RMRKEquippable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28691,
          "nodeType": "StructuredDocumentation",
          "src": "349:110:78",
          "text": " @title RMRKEquippable\n @author RMRK team\n @notice Smart contract of the RMRK Equippable module."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29630,
          28682,
          34689,
          34868,
          37368,
          28541,
          35078,
          27796,
          28205,
          28193,
          37419
        ],
        "name": "RMRKEquippable",
        "nameLocation": "469:14:78",
        "scope": 29631,
        "usedErrors": [
          33549,
          33552,
          33555,
          33561,
          33564,
          33570,
          33576,
          33579,
          33582,
          33585,
          33588,
          33594,
          33603,
          33606,
          33621,
          33630,
          33639,
          33645,
          33655,
          33670,
          33673,
          33676,
          33679,
          33682,
          33688,
          33691,
          33706,
          33742,
          33748,
          33751,
          33754,
          33757,
          33763,
          33766,
          33769,
          33772,
          37372
        ],
        "usedEvents": [
          27695,
          27704,
          27713,
          28584,
          28599,
          28608,
          34700,
          34710,
          34719,
          34726,
          34731,
          34740,
          34749,
          34893,
          34904,
          34915,
          34920,
          34935
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 78
}