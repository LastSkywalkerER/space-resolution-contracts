{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "collectionMetadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "royaltyPercentageBps",
          "type": "uint16"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ERC721AddressZeroIsNotaValidOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApproveCallerIsNotOwnerNorApprovedForAll",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721MintToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721NotApprovedOrOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TokenAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToNonReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKApprovalForAssetsToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKAssetAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKBadPriorityListLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKCatalogRequiredForParts",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKChildAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKChildIndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKEquippableEquipNotAllowedByCatalog",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKIdZeroForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKIndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKIsNotContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKMaxPendingAssetsReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKMaxPendingChildrenReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        }
      ],
      "name": "RMRKMaxRecursiveBurnsReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKMintOverMax",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKMintToNonRMRKNestableImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKMintZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKMustUnequipFirst",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNestableTooDeep",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNestableTransferToDescendant",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNestableTransferToNonRMRKNestableImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNestableTransferToSelf",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNewContributorIsZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNewOwnerIsZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNoAssetMatchingId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNotApprovedForAssetsOrOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNotApprovedOrDirectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNotEquipped",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKNotOwnerOrContributor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKPendingChildIndexOutOfRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKRoyaltiesTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKSlotAlreadyUsed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKTargetAssetCannotReceiveSlot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKTokenCannotBeEquippedWithAssetIntoSlot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKTokenDoesNotHaveAsset",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKUnexpectedAssetId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKUnexpectedChildId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKUnexpectedNumberOfAssets",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RMRKUnexpectedNumberOfChildren",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "AllChildrenRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAllForAssets",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ApprovalForAssets",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "replacesId",
          "type": "uint64"
        }
      ],
      "name": "AssetAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "replacesId",
          "type": "uint64"
        }
      ],
      "name": "AssetAddedToTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "AssetPrioritySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "AssetRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "AssetSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        }
      ],
      "name": "ChildAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "slotPartId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "childAssetId",
          "type": "uint64"
        }
      ],
      "name": "ChildAssetEquipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "slotPartId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "childAssetId",
          "type": "uint64"
        }
      ],
      "name": "ChildAssetUnequipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        }
      ],
      "name": "ChildProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "fromPending",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "toZero",
          "type": "bool"
        }
      ],
      "name": "ChildTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isContributor",
          "type": "bool"
        }
      ],
      "name": "ContributorUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NestTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "equippableGroupId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "slotPartId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "parentAddress",
          "type": "address"
        }
      ],
      "name": "ValidParentEquippableGroupIdSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "RMRK_INTERFACE",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "acceptAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "childIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        }
      ],
      "name": "acceptChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "name": "addAssetEntry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "replacesAssetWithId",
          "type": "uint64"
        }
      ],
      "name": "addAssetToToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "addChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "equippableGroupId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "catalogAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "internalType": "uint64[]",
          "name": "partIds",
          "type": "uint64[]"
        }
      ],
      "name": "addEquippableAssetEntry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approveForAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxChildrenBurns",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "parent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "slotId",
          "type": "uint64"
        }
      ],
      "name": "canTokenBeEquippedWithAssetIntoSlot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "childOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC7401.Child",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        }
      ],
      "name": "childrenOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC7401.Child[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectionMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "directOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "childAssetId",
              "type": "uint64"
            }
          ],
          "internalType": "struct IERC6220.IntakeEquip",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "equip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getActiveAssetPriorities",
      "outputs": [
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getActiveAssets",
      "outputs": [
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApprovedForAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "getAssetAndEquippableData",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "getAssetMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "newAssetId",
          "type": "uint64"
        }
      ],
      "name": "getAssetReplacements",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "targetCatalogAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "slotPartId",
          "type": "uint64"
        }
      ],
      "name": "getEquipment",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "childAssetId",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "childEquippableAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC6220.Equipment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPendingAssets",
      "outputs": [
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRoyaltyRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAllForAssets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        }
      ],
      "name": "isChildEquipped",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        }
      ],
      "name": "isContributor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "grantRole",
          "type": "bool"
        }
      ],
      "name": "manageContributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "numToMint",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "numToMint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "destinationId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "nestMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "destinationId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "nestTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "pendingChildOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC7401.Child",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        }
      ],
      "name": "pendingChildrenOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC7401.Child[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxRejections",
          "type": "uint256"
        }
      ],
      "name": "rejectAllAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxRejections",
          "type": "uint256"
        }
      ],
      "name": "rejectAllChildren",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "name": "rejectAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAllForAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64[]",
          "name": "priorities",
          "type": "uint64[]"
        }
      ],
      "name": "setPriority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI_",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "equippableGroupId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "parentAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "partId",
          "type": "uint64"
        }
      ],
      "name": "setValidParentForEquippableGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "specs",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "MOVE_SPEED",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "MOVE_ANGLE_SPEED",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "SHIP_MASS",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "LINEAR_DAMPING",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "ANGULAR_DAMPING",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "FIRE_RATE",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "destinationId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "childIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "childAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "childId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPending",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "assetId",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "slotPartId",
          "type": "uint64"
        }
      ],
      "name": "unequip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        }
      ],
      "name": "updateRoyaltyRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "329:3206:0:-:0;;;699:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1690:17:80;:39;;-1:-1:-1;;;;;;1690:39:80;-1:-1:-1;;;;;1690:39:80;;;;;938:4:0;944:6;952:18;972:9;1690:39:80;1223:416:96;;;1690:39:80;1223:416:96;988:5:80;964:20;:29;960:64;;1002:22;;-1:-1:-1;;;1002:22:80;;;;;;;;;;;960:64;1034:21;:44;;;2036:7:89;:22;-1:-1:-1;1850:32:74;719:10:72;1850:18:74;:32::i;:::-;1508:5:96::1;:13;1516:5:::0;1508;:13:::1;:::i;:::-;-1:-1:-1::0;1531:7:96::1;:17;1541:7:::0;1531;:17:::1;:::i;:::-;-1:-1:-1::0;1558:19:96::1;:41;1580:19:::0;1558;:41:::1;:::i;:::-;-1:-1:-1::0;;;1609:10:96::1;:23:::0;-1:-1:-1;1033:29:0::1;::::0;-1:-1:-1;1033:29:0::1;::::0;-1:-1:-1;1033:29:0:i:1;:::-;1091:1;1072:20:::0;;::::1;:16;1102::::0;;::::1;:20:::0;;;;-1:-1:-1;;1132:16:0;;;::::1;:21:::0;;;;1171:54;;::::1;::::0;::::1;::::0;;1177:4:::1;1171:54:::0;;;1183:4:::1;1171:54:::0;;::::1;::::0;;;;;;;;;;;1195:2:::1;1171:54:::0;;;;1199:3:::1;1171:54:::0;;;;1204:5:::1;1171:54:::0;;;;;;;;;;1163:5:::1;:62:::0;;-1:-1:-1;;;;;;1163:62:0;;;;;::::1;::::0;1072:20;1163:62:::1;;:::i;:::-;;;;;1023:209;699:533:::0;;;;;;329:3206;;3181:187:74;3273:6;;;-1:-1:-1;;;;;3289:17:74;;;-1:-1:-1;;;;;;3289:17:74;;;;;;;3321:40;;3273:6;;;3289:17;3273:6;;3321:40;;3254:16;;3321:40;3244:124;3181:187;:::o;329:3206:0:-;;;;;;;;;;;;;;;;;;-1:-1:-1;329:3206:0;;;-1:-1:-1;;329:3206:0:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;329:3206:0;;;-1:-1:-1;329:3206:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:98;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:98;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:98;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:98:o;991:163::-;1069:13;;1122:6;1111:18;;1101:29;;1091:57;;1144:1;1141;1134:12;1091:57;991:163;;;:::o;1159:1080::-;1303:6;1311;1319;1327;1335;1343;1396:3;1384:9;1375:7;1371:23;1367:33;1364:53;;;1413:1;1410;1403:12;1364:53;1440:16;;-1:-1:-1;;;;;1505:14:98;;;1502:34;;;1532:1;1529;1522:12;1502:34;1555:61;1608:7;1599:6;1588:9;1584:22;1555:61;:::i;:::-;1545:71;;1662:2;1651:9;1647:18;1641:25;1625:41;;1691:2;1681:8;1678:16;1675:36;;;1707:1;1704;1697:12;1675:36;1730:63;1785:7;1774:8;1763:9;1759:24;1730:63;:::i;:::-;1720:73;;1839:2;1828:9;1824:18;1818:25;1802:41;;1868:2;1858:8;1855:16;1852:36;;;1884:1;1881;1874:12;1852:36;;1907:63;1962:7;1951:8;1940:9;1936:24;1907:63;:::i;:::-;2010:2;1995:18;;1989:25;2057:3;2042:19;;2036:26;1897:73;;-1:-1:-1;1989:25:98;-1:-1:-1;2036:26:98;-1:-1:-1;;;;;;2091:31:98;;2081:42;;2071:70;;2137:1;2134;2127:12;2071:70;2160:5;-1:-1:-1;2184:49:98;2228:3;2213:19;;2184:49;:::i;:::-;2174:59;;1159:1080;;;;;;;;:::o;2244:380::-;2323:1;2319:12;;;;2366;;;2387:61;;2441:4;2433:6;2429:17;2419:27;;2387:61;2494:2;2486:6;2483:14;2463:18;2460:38;2457:161;;2540:10;2535:3;2531:20;2528:1;2521:31;2575:4;2572:1;2565:15;2603:4;2600:1;2593:15;2457:161;;2244:380;;;:::o;2755:545::-;2857:2;2852:3;2849:11;2846:448;;;2893:1;2918:5;2914:2;2907:17;2963:4;2959:2;2949:19;3033:2;3021:10;3017:19;3014:1;3010:27;3004:4;3000:38;3069:4;3057:10;3054:20;3051:47;;;-1:-1:-1;3092:4:98;3051:47;3147:2;3142:3;3138:12;3135:1;3131:20;3125:4;3121:31;3111:41;;3202:82;3220:2;3213:5;3210:13;3202:82;;;3265:17;;;3246:1;3235:13;3202:82;;;3206:3;;;2846:448;2755:545;;;:::o;3476:1352::-;3596:10;;-1:-1:-1;;;;;3618:30:98;;3615:56;;;3651:18;;:::i;:::-;3680:97;3770:6;3730:38;3762:4;3756:11;3730:38;:::i;:::-;3724:4;3680:97;:::i;:::-;3832:4;;3896:2;3885:14;;3913:1;3908:663;;;;4615:1;4632:6;4629:89;;;-1:-1:-1;4684:19:98;;;4678:26;4629:89;-1:-1:-1;;3433:1:98;3429:11;;;3425:24;3421:29;3411:40;3457:1;3453:11;;;3408:57;4731:81;;3878:944;;3908:663;2702:1;2695:14;;;2739:4;2726:18;;-1:-1:-1;;3944:20:98;;;4062:236;4076:7;4073:1;4070:14;4062:236;;;4165:19;;;4159:26;4144:42;;4257:27;;;;4225:1;4213:14;;;;4092:19;;4062:236;;;4066:3;4326:6;4317:7;4314:19;4311:201;;;4387:19;;;4381:26;-1:-1:-1;;4470:1:98;4466:14;;;4482:3;4462:24;4458:37;4454:42;4439:58;4424:74;;4311:201;-1:-1:-1;;;;;4558:1:98;4542:14;;;4538:22;4525:36;;-1:-1:-1;3476:1352:98:o;4833:127::-;329:3206:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106103f15760003560e01c80636f19951c11610215578063b88d4fde11610125578063e467a48f116100b8578063ee1dffcf11610087578063ee1dffcf14610aa4578063f2fde38b14610ae3578063fb25fb7a14610af6578063fc3517c814610b30578063ffa1ad7414610b4357600080fd5b8063e467a48f14610a2f578063e7de4de414610a42578063e97ceaa814610a55578063e985e9c514610a6857600080fd5b8063d5abeb01116100f4578063d5abeb01146109b2578063de8e602c146109ba578063defa80c3146109cd578063df6f556b146109e057600080fd5b8063b88d4fde14610966578063c259a98814610979578063c87b56dd1461098c578063d3fc98641461099f57600080fd5b80638d4f3bf5116101a857806397961336116101775780639796133614610899578063a22cb465146108ac578063a898e364146108bf578063adb7c3f7146108d2578063b390c0ab1461095357600080fd5b80638d4f3bf5146108485780638da5cb5b1461086f57806395d89b411461088057806395edc18c1461088857600080fd5b80637507e2ae116101e45780637507e2ae1461073357806379e8ca9e1461081a5780638507dc281461082d57806389ed2edf1461084057600080fd5b80636f19951c146106f257806370a0823114610705578063715018a6146107185780637280281e1461072057600080fd5b80632452cd91116103105780634e60edba116102a35780635e94354a116102725780635e94354a146106935780635ea72f36146106a65780636352211e146106b9578063635490cc146106cc57806365b67eb9146106df57600080fd5b80634e60edba1461063557806351532e5a1461065857806359c8b7dd146106785780635e2e32921461068057600080fd5b806338dcf74c116102df57806338dcf74c146105dc57806342842e0e146105ef57806342966c681461060257806344ec93441461061557600080fd5b80632452cd91146105645780632a55205a146105775780632f32f937146105a957806330ffb1d6146105c957600080fd5b80630fc499f5116103885780631d0d35f5116103575780631d0d35f5146104ff57806322e6d1601461052b57806322f6da9c1461053e57806323b872dd1461055157600080fd5b80630fc499f5146104be578063162094c4146104d157806318160ddd146104e45780631c7bb461146104ec57600080fd5b8063074334fb116103c4578063074334fb1461045a578063081812fc1461046d578063095ea7b3146104985780630ee2fd65146104ab57600080fd5b806301e1d114146103f657806301ffc9a71461040d578063064c0a3a1461043057806306fdde0314610445575b600080fd5b600b545b6040519081526020015b60405180910390f35b61042061041b3660046142fb565b610b67565b6040519015158152602001610404565b61044361043e3660046143e9565b610bc9565b005b61044d610dbd565b60405161040491906144a4565b6104206104683660046144ce565b610e4f565b61048061047b36600461451d565b610ec8565b6040516001600160a01b039091168152602001610404565b6104436104a6366004614536565b610f0e565b6103fa6104b9366004614562565b610f9a565b6104436104cc3660046145c4565b610ff8565b6104436104df3660046145e1565b611021565b6009546103fa565b6104436104fa366004614627565b611037565b61042061050d3660046145c4565b6001600160a01b031660009081526004602052604090205460011490565b610420610539366004614663565b61104a565b61044361054c36600461469c565b611078565b61044361055f3660046146c8565b6110f3565b6103fa61057236600461478f565b611118565b61058a610585366004614809565b611146565b604080516001600160a01b039093168352602083019190915201610404565b6105bc6105b7366004614809565b61117b565b604051610404919061482b565b6103fa6105d736600461484b565b611214565b6104436105ea36600461487f565b61123d565b6104436105fd3660046146c8565b6115c4565b61044361061036600461451d565b6115df565b61062861062336600461451d565b6115ea565b6040516104049190614900565b610648610643366004614960565b611669565b60405161040494939291906149c7565b61066b61066636600461451d565b611746565b6040516104049190614a0a565b6001546103fa565b61044d61068e366004614960565b6117da565b61066b6106a136600461451d565b6118c9565b6104436106b4366004614536565b611932565b6104806106c736600461451d565b6119b9565b6104436106da366004614a1d565b611a49565b6104436106ed366004614a6c565b611b5f565b61062861070036600461451d565b611b72565b6103fa6107133660046145c4565b611be2565b610443611c27565b61066b61072e36600461451d565b611c3b565b6107d0610741366004614a9a565b6040805160808082018352600080835260208084018290528385018290526060938401829052968152601e87528381206001600160a01b03968716825287528381206001600160401b03958616825287528390208351918201845280548086168352600160401b9004909416958101959095526001830154918501919091526002909101549091169082015290565b604051610404919081516001600160401b03908116825260208084015190911690820152604080830151908201526060918201516001600160a01b03169181019190915260800190565b610443610828366004614acf565b611ca4565b61044361083b366004614acf565b611d61565b61044d611df7565b61085663524d524b60e01b81565b6040516001600160e01b03199091168152602001610404565b6003546001600160a01b0316610480565b61044d611e06565b6000546001600160a01b0316610480565b6104436108a7366004614809565b611e15565b6104436108ba366004614acf565b611e95565b6105bc6108cd366004614809565b611f23565b6022546109169061ffff80821691620100008104821691640100000000820481169166010000000000008104821691600160401b8204811691600160501b90041686565b6040805161ffff978816815295871660208701529386169385019390935290841660608401528316608083015290911660a082015260c001610404565b6103fa610961366004614809565b611f80565b610443610974366004614afd565b6122e7565b610443610987366004614627565b61232d565b61044d61099a36600461451d565b6124f6565b6103fa6109ad366004614b50565b61258e565b600a546103fa565b6104436109c8366004614b92565b6125ea565b6104436109db366004614bce565b612674565b610a176109ee366004614960565b60009182526014602090815260408084206001600160401b039384168552909152909120541690565b6040516001600160401b039091168152602001610404565b610480610a3d36600461451d565b6128af565b610443610a50366004614809565b6128d2565b610443610a63366004614c69565b6129d4565b610420610a76366004614663565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b610420610ab2366004614ca8565b6000928352601f602090815260408085206001600160a01b0394909416855292815282842091845252902054151590565b610443610af13660046145c4565b6129ea565b610b09610b0436600461451d565b612a22565b604080516001600160a01b0390941684526020840192909252151590820152606001610404565b610443610b3e36600461469c565b612a8a565b61044d604051806040016040528060058152602001640322e322e360dc1b81525081565b6000610b7282612a9f565b80610b8d57506001600160e01b0319821663152a902d60e11b145b80610ba857506001600160e01b03198216635b5e139f60e01b145b80610bc357506001600160e01b0319821663524d524b60e01b145b92915050565b82610bd381612b26565b600080610bdf86612a22565b5091509150876001600160a01b0316826001600160a01b031614610c165760405163e146af6f60e01b815260040160405180910390fd5b6001600160a01b038716610c3d576040516338f646ff60e21b815260040160405180910390fd5b6001600160a01b03871630148015610c5457508486145b15610c7257604051633d76b10760e01b815260040160405180910390fd5b6001600160a01b0387163b610c9a5760405163b9d3114760e01b815260040160405180910390fd5b6040516301ffc9a760e01b81526342b0e56f60e01b60048201526001600160a01b038816906301ffc9a790602401602060405180830381865afa158015610ce5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d099190614ccf565b610d2657604051631784ec7360e21b815260040160405180910390fd5b610d31868887612bae565b610d3c888888612c9f565b6001600160a01b0388166000908152600c60205260408120805460019290610d65908490614d02565b90915550610d769050868689612cbc565b6001600160a01b0387166000908152600c60205260408120805460019290610d9f908490614d15565b90915550610db39050828883888a89612d1d565b5050505050505050565b606060068054610dcc90614d28565b80601f0160208091040260200160405190810160405280929190818152602001828054610df890614d28565b8015610e455780601f10610e1a57610100808354040283529160200191610e45565b820191906000526020600020905b815481529060010190602001808311610e2857829003601f168201915b5050505050905090565b6001600160401b038083166000908152601c602090815260408083205484168084528280528184206001600160a01b038a1685529092528220549192909181169084168103610eb9576000610ead86610ea789611c3b565b90612dfe565b9450610ec09350505050565b6000925050505b949350505050565b6000610ed382612e67565b6000828152600d6020526040812090610eeb846119b9565b6001600160a01b0390811682526020820192909252604001600020541692915050565b6000610f19826119b9565b9050806001600160a01b0316836001600160a01b031603610f4d57604051630591db6d60e01b815260040160405180910390fd5b336001600160a01b03821614801590610f6d5750610f6b8133610a76565b155b15610f8b57604051634c12315960e11b815260040160405180910390fd5b610f958383612e9f565b505050565b6000610fa4612f18565b600080610fb086612f57565b9092509050815b81811015610fec57610fc98186612fc9565b610fe488828860405180602001604052806000815250612fe1565b600101610fb7565b50909695505050505050565b6110006130b1565b600080546001600160a01b0319166001600160a01b03831617905550565b50565b611029612f18565b6110338282612fc9565b5050565b61103f612f18565b610f958383836130dc565b6001600160a01b03918216600090815260196020908152604080832093909416825291909152205460ff1690565b82611082816132d8565b61108d848484613339565b6110988484846133e1565b60008481526018602090815260408083206001600160401b0386168085529252808320805460ff1916905551909186917f1010837a46db9510cad56c9b63e97183557a136e9d4ddbec309ce52c99afb1249190a35b50505050565b806110fd81612b26565b6110ed8484846040518060200160405280600081525061342f565b6000611122612f18565b600b80546001019081905561113a9086868686613574565b50600b54949350505050565b600080546001546001600160a01b039091169190612710906111689085614d62565b6111729190614d79565b90509250929050565b60408051808201909152600080825260208201528161119984611b72565b51116111b85760405163653e642560e11b815260040160405180910390fd5b60008381526010602052604081208054849081106111d8576111d8614d9b565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b03169181019190915291505092915050565b600061121e612f18565b600b805460010190819055611233908361361b565b50600b545b919050565b8051611248816132d8565b6112506136e1565b6040808301516001600160401b039081166000908152601b602090815283822054606087015187518452601e83528584206001600160a01b0392831680865290845286852095821685529490925293909120600201549192909116156112c95760405163bd0650ab60e01b815260040160405180910390fd5b6112d7846040015182613709565b60006112eb8560000151866020015161117b565b60208101518151608088015160405163074334fb60e01b815230600482015260248101929092526001600160401b039081166044830152851660648201529192506001600160a01b03169063074334fb90608401602060405180830381865afa15801561135c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113809190614ccf565b61139d57604051632c36cd3360e01b815260040160405180910390fd5b6020810151604051636e5bceab60e11b81526001600160401b03841660048201526001600160a01b0391821660248201529084169063dcb79d5690604401602060405180830381865afa1580156113f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141c9190614ccf565b61143957604051637228eff560e11b815260040160405180910390fd5b6040805160808082018352878301516001600160401b0390811683529088015181166020808401918252855184860190815286820180516001600160a01b03908116606088019081528d516000908152601e86528981208d8416825286528981208c8916825286528981208951815498518a16600160401b026001600160801b031990991699169890981796909617875592516001808801919091559251600290960180549682166001600160a01b0319909716969096179095558b518452601f835286842090519094168352928152848220865183529052928320805492939192909190611529908490614d15565b92505081905550826001600160401b031686604001516001600160401b031687600001517f1f5de02b1d9c93ca468f54630e1daf13f6dc458a63f8061ff73e85bf9bc38884856000015186602001518b608001516040516115af939291909283526001600160a01b039190911660208301526001600160401b0316604082015260600190565b60405180910390a45050600160025550505050565b610f95838383604051806020016040528060008152506122e7565b611033816000611f80565b6000818152601160209081526040808320805482518185028101850190935280835260609493849084015b8282101561165d5760008481526020908190206040805180820190915260028502909101805482526001908101546001600160a01b0316828401529083529092019101611615565b50929695505050505050565b6060600080606061167a86866117da565b6001600160401b038087166000908152601c6020908152604080832054601b835281842054601d845293829020805483518186028101860190945280845291909516946001600160a01b03909416939283919083018282801561172e57602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b0316815260200190600801906020826007010492830192600103820291508084116116eb5790505b50505050509050935093509350935092959194509250565b6000818152601660209081526040918290208054835181840281018401909452808452606093928301828280156117ce57602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b03168152602001906008019060208260070104928301926001038202915080841161178b5790505b50505050509050919050565b60008281526018602090815260408083206001600160401b038516845290915290205460609060ff1661182057604051631b9928fd60e31b815260040160405180910390fd5b6001600160401b0382166000908152601360205260409020805461184390614d28565b80601f016020809104026020016040519081016040528092919081815260200182805461186f90614d28565b80156118bc5780601f10611891576101008083540402835291602001916118bc565b820191906000526020600020905b81548152906001019060200180831161189f57829003601f168201915b5050505050905092915050565b6000818152601760209081526040918290208054835181840281018401909452808452606093928301828280156117ce57600091825260209182902080546001600160401b0316845290820283019290916008910180841161178b575094979650505050505050565b600061193d826119b9565b9050806001600160a01b0316836001600160a01b031603611971576040516375f45abd60e01b815260040160405180910390fd5b336001600160a01b03821614801590611991575061198f813361104a565b155b156119af576040516357a2e94960e11b815260040160405180910390fd5b610f9583836137d3565b6000806000806119c885612a22565b9250925092508015611a40576040516331a9108f60e11b8152600481018390526001600160a01b03841690636352211e90602401602060405180830381865afa158015611a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3d9190614db1565b92505b50909392505050565b611a5283612e67565b33803b611a725760405163b9d3114760e01b815260040160405180910390fd5b604080518082019091528381526001600160a01b03821660208201526000611a99866115ea565b5190506080811015611af8576000868152601160209081526040822080546001808201835591845292829020855160029094020192835590840151910180546001600160a01b0319166001600160a01b03909216919091179055611b11565b60405163a53c8c0560e01b815260040160405180910390fd5b84836001600160a01b0316877fe65085e689b77b126ba0bac3b079aa8288f19f4d5445af11c76003f8ab3075dd84604051611b4e91815260200190565b60405180910390a45b505050505050565b611b67612f18565b610f9583838361384c565b600081815260106020908152604080832080548251818502810185019093528083526060949384908401821561165d5760008481526020908190206040805180820190915260028502909101805482526001908101546001600160a01b0316828401529083529092019101611615565b60006001600160a01b038216611c0b57604051633bb9143360e11b815260040160405180910390fd5b506001600160a01b03166000908152600c602052604090205490565b611c2f6130b1565b611c3960006138fe565b565b6000818152601560209081526040918290208054835181840281018401909452808452606093928301828280156117ce57600091825260209182902080546001600160401b0316845290820283019290916008910180841161178b575094979650505050505050565b611cac6130b1565b6001600160a01b038216611cd35760405163016b812760e71b815260040160405180910390fd5b80611cf8576001600160a01b0382166000908152600460205260408120819055611d17565b6001600160a01b03821660009081526004602052604090206001908190555b50816001600160a01b03167f4b5657e84cf8a17ac5587bbeb3cc2bab9826c4c67b8bad81b4849de49d37aac282604051611d55911515815260200190565b60405180910390a25050565b6001600160a01b0382163303611d8a576040516375f45abd60e01b815260040160405180910390fd5b3360008181526019602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f0cff4fcf777050010027190b8061fd8bfd1de16d81b1f94e9752df1427a2623591015b60405180910390a35050565b606060058054610dcc90614d28565b606060078054610dcc90614d28565b81611e1f81613950565b600083815260116020526040902054821015611e4e57604051631e73178b60e11b815260040160405180910390fd5b6000838152601160205260408120611e65916141ab565b60405183907f8ac4a0d65950c3e40448afb2260e2e0ec36ea15644d9b39e37e85472e5f9445190600090a2505050565b6001600160a01b0382163303611ebe57604051630b7b99b960e21b815260040160405180910390fd5b336000818152600e602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101611deb565b604080518082019091526000808252602082015281611f41846115ea565b5111611f605760405163da22687f60e01b815260040160405180910390fd5b60008381526011602052604081208054849081106111d8576111d8614d9b565b600082611f8c81612b26565b600080611f9886612a22565b50915091506000611fa8876119b9565b9050611fb683600089612c9f565b6040805160208101909152600090526001600160a01b0383166000908152600c60205260408120805460019290611fee908490614d02565b90915550611fff9050600088612e9f565b61200a6000886137d3565b600061201588611b72565b600089815260106020526040812091925061203091906141ab565b6000888152601160205260408120612047916141ab565b6000888152600d602090815260408083206001600160a01b0386168452909152812080546001600160a01b031916905581518190815b8181101561224c578a83106120f65784818151811061209e5761209e614d9b565b6020026020010151602001518582815181106120bc576120bc614d9b565b6020908102919091010151516040516306177b2560e41b81526001600160a01b039092166004830152602482015260440160405180910390fd5b6012600086838151811061210c5761210c614d9b565b6020026020010151602001516001600160a01b03166001600160a01b03168152602001908152602001600020600086838151811061214c5761214c614d9b565b602002602001015160000151815260200190815260200160002060009055828b03935084818151811061218157612181614d9b565b6020026020010151602001516001600160a01b031663b390c0ab8683815181106121ad576121ad614d9b565b6020026020010151600001516001876121c69190614d02565b6040516001600160e01b031960e085901b168152600481019290925260248201526044016020604051808303816000875af1158015612209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061222d9190614dce565b612238906001614d15565b6122429084614d15565b925060010161207d565b5060008b8152600f602052604080822082815560010180546001600160a01b0319169055518c91906001600160a01b038a169060008051602061505a833981519152908390a4604080518781526000602082018190528d9290916001600160a01b038b169160008051602061503a833981519152910160405180910390a4604080516020810190915260009052509998505050505050505050565b816122f181612b26565b6122fd8585858561342f565b612309858585856139b1565b6123265760405163bcb5663760e01b815260040160405180910390fd5b5050505050565b82612337816132d8565b6001600160401b038084166000908152601b6020908152604080832054888452601e83528184206001600160a01b039182168086529084528285208887168652845293829020825160808101845281548088168252600160401b90049096169386019390935260018301549185019190915260029091015416606083018190529091906123d7576040516317de7dd760e21b815260040160405180910390fd5b6000868152601e602090815260408083206001600160a01b0380871685529083528184206001600160401b0389168552835281842080546001600160801b03191681556001808201869055600290910180546001600160a01b03191690558a8552601f845282852060608701519092168552908352818420858301518552909252822080549192909161246b908490614d02565b92505081905550836001600160401b0316856001600160401b0316877f438e039ebbba8f290f3b5d41aaf3295eccc9b5e6b0e1d52ace700772afb7da138460400151856060015186602001516040516124e9939291909283526001600160a01b039190911660208301526001600160401b0316604082015260600190565b60405180910390a4611b57565b600081815260216020526040902080546060919061251390614d28565b80601f016020809104026020016040519081016040528092919081815260200182805461253f90614d28565b80156117ce5780601f10612561576101008083540402835291602001916117ce565b820191906000526020600020905b81548152906001019060200180831161256f5750939695505050505050565b6000612598612f18565b6000806125a485612f57565b9092509050815b818110156125df576125bd8186612fc9565b6125d7878260405180602001604052806000815250613aad565b6001016125ab565b509095945050505050565b816125f4816132d8565b8151600084815260156020526040902054811461262457604051633581be1d60e11b815260040160405180910390fd5b60008481526017602090815260409091208451612643928601906141cc565b5060405184907ff0bfd70b0068f973d58178846ca67112671ec45e060838f7de5662036bcf801790600090a26110ed565b8761267e81613950565b604080518082019091526000808252602082015283156126a9576126a28a88611f23565b90506126ff565b60008a8152601f602090815260408083206001600160a01b038a1684528252808320888452909152902054156126f257604051630619dc9d60e21b815260040160405180910390fd5b6126fc8a8861117b565b90505b61270a818787613b40565b831561272d5760008a81526011602052604090206127289088613b84565b612767565b6001600160a01b038616600090815260126020908152604080832088845282528083208390558c8352601090915290206127679088613b84565b6001600160a01b0389161561285157876127e457604051635c46a7ef60e11b81526001600160a01b0387169063b88d4fde906127ad9030908d908a908990600401614de7565b600060405180830381600087803b1580156127c757600080fd5b505af11580156127db573d6000803e3d6000fd5b50505050612851565b60208101518151604051630326051d60e11b81526001600160a01b039092169163064c0a3a9161281e9130918e918e908a90600401614e24565b600060405180830381600087803b15801561283857600080fd5b505af115801561284c573d6000803e3d6000fd5b505050505b6040805188815285151560208201526001600160a01b038b81161582840152915187928916918d917f02d6d6dbcb604d5e1e8c7886456e82a9cdce88b0a580071358f206b5a4d58f709181900360600190a450505050505050505050565b60006128ba82612e67565b6000828152601a6020526040812090610eeb846119b9565b816128dc816132d8565b6000838152601660205260409020548281111561290c57604051635134ce8960e01b815260040160405180910390fd5b60005b8181101561298a57600085815260166020526040812080548390811061293757612937614d9b565b6000918252602080832060048304015489845260148252604080852060039094166008026101000a9091046001600160401b031684529190529020805467ffffffffffffffff191690555060010161290f565b5060008481526016602052604081206129a291614284565b60405160009085907f1010837a46db9510cad56c9b63e97183557a136e9d4ddbec309ce52c99afb124908390a36110ed565b836129de81613950565b61232685858585613c3e565b6129f26130b1565b6001600160a01b038116612a1957604051634ece6ecf60e01b815260040160405180910390fd5b61101e816138fe565b6000818152600f60209081526040808320815180830190925280548252600101546001600160a01b03169181018290528291829190612a745760405163089ba7e160e41b815260040160405180910390fd5b6020810151905190959094508415159350915050565b82612a94816132d8565b6110ed848484613d4c565b60006001600160e01b031982166301ffc9a760e01b1480612ad057506001600160e01b031982166380ac58cd60e01b145b80612aeb57506001600160e01b031982166342b0e56f60e01b145b80612b0657506001600160e01b0319821663035a194d60e11b145b80610bc357506001600160e01b03198216630a2f26b960e21b1492915050565b600080612b3283612a22565b509150915080600014158015612b515750336001600160a01b03831614155b80612b905750336001600160a01b0383161480612b735750612b738233610a76565b80612b8e575033612b8384610ec8565b6001600160a01b0316145b155b15610f95576040516345f3c98360e11b815260040160405180910390fd5b60005b6064811015612c85576000806000856001600160a01b031663fb25fb7a866040518263ffffffff1660e01b8152600401612bed91815260200190565b606060405180830381865afa158015612c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c2e9190614e5e565b92509250925080612c425750505050505050565b6001600160a01b03831630148015612c5957508682145b15612c77576040516324543e6d60e11b815260040160405180910390fd5b509093509150600101612bb1565b50604051630349a6bd60e51b815260040160405180910390fd5b6001600160a01b038216610f955760098054600019019055505050565b6040805180820182528381526001600160a01b0383811660208084019182526000888152600f9091529384209251835551600190920180546001600160a01b03191692909116919091179055612d129084612e9f565b610f956000846137d3565b6040516318d5243360e21b815285906001600160a01b0382169063635490cc90612d4f90879087908790600401614ea1565b600060405180830381600087803b158015612d6957600080fd5b505af1158015612d7d573d6000803e3d6000fd5b5050505082866001600160a01b0316886001600160a01b031660008051602061505a83398151915260405160405180910390a482866001600160a01b0316886001600160a01b031660008051602061503a8339815191528888604051612ded929190918252602082015260400190565b60405180910390a450505050505050565b81516000908190815b81811015612e5657846001600160401b0316868281518110612e2b57612e2b614d9b565b60200260200101516001600160401b031603612e4e57925060019150612e609050565b600101612e07565b5060008092509250505b9250929050565b6000818152600f60205260409020600101546001600160a01b031661101e5760405163089ba7e160e41b815260040160405180910390fd5b6000612eaa826119b9565b6000838152600d602090815260408083206001600160a01b038581168086529190935281842080546001600160a01b031916938916938417905590519394508593919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a4505050565b6003546001600160a01b03163314801590612f395750612f373361050d565b155b15611c39576040516301eca16760e41b815260040160405180910390fd5b60008082612f785760405163376bec4d60e01b815260040160405180910390fd5b600a54600854612f889085614d15565b1115612fa757604051635e91cdfb60e11b815260040160405180910390fd5b5050600880548281019182905560098054909301909255600191820192910190565b6000828152602160205260409020610f958282614f0f565b6001600160a01b0384163b6130095760405163b9d3114760e01b815260040160405180910390fd5b6040516301ffc9a760e01b81526342b0e56f60e01b60048201526001600160a01b038516906301ffc9a790602401602060405180830381865afa158015613054573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130789190614ccf565b6130955760405163fbd5d8b960e01b815260040160405180910390fd5b6130a184848484613f62565b6110ed6000856000858786612d1d565b6003546001600160a01b03163314611c3957604051631c62d58f60e11b815260040160405180910390fd5b60008381526018602090815260408083206001600160401b038616845290915290205460ff1615613120576040516308fe3c3160e41b815260040160405180910390fd5b6001600160401b0382166000908152601360205260408120805461314390614d28565b90500361316357604051632aa5eff960e11b815260040160405180910390fd5b6000838152601660205260409020546080116131925760405163bade3a7b60e01b815260040160405180910390fd5b60008381526018602090815260408083206001600160401b038681168086529184528285208054600160ff19909116811790915588865260168552928520805493840181558552929093206004820401805460039092166008026101000a8084021990921691909302179091558116156132405760008381526014602090815260408083206001600160401b0386811685529252909120805467ffffffffffffffff19169183169190911790555b60408051600180825281830190925260009160208083019080368337019050509050838160008151811061327657613276614d9b565b602002602001018181525050816001600160401b0316836001600160401b03167f4a85a0221f784dbe75db7c29c422f474c15bde9211a98e50a30018fa8dfa937b836040516132c59190614fce565b60405180910390a36110ed848484614065565b60006132e3826119b9565b9050336001600160a01b03821614806133015750613301813361104a565b8061331c575033613311836128af565b6001600160a01b0316145b61103357604051635d64832960e01b815260040160405180910390fd5b600083815260166020526040902054821061336757604051630757d52160e01b815260040160405180910390fd5b600083815260166020526040902080548390811061338757613387614d9b565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b03166001600160401b0316816001600160401b031614610f95576040516378eeeecf60e01b815260040160405180910390fd5b60008381526016602052604090206133f990836140c5565b60009283526014602090815260408085206001600160401b039093168552919052909120805467ffffffffffffffff1916905550565b60008061343b84612a22565b5091509150856001600160a01b0316826001600160a01b0316146134725760405163e146af6f60e01b815260040160405180910390fd5b6001600160a01b038516613499576040516338f646ff60e21b815260040160405180910390fd5b6134a4868686612c9f565b6001600160a01b0386166000908152600c602052604081208054600192906134cd908490614d02565b909155506134df905084600087612cbc565b6001600160a01b0385166000908152600c60205260408120805460019290613508908490614d15565b909155505060405184906001600160a01b03808816919089169060008051602061505a83398151915290600090a483856001600160a01b0316876001600160a01b031660008051602061503a8339815191528460006040516124e9929190918252602082015260400190565b61357e858361361b565b6001600160a01b0383161580156135955750805115155b156135b357604051631035ad0760e11b815260040160405180910390fd5b6001600160401b038581166000908152601b6020908152604080832080546001600160a01b0319166001600160a01b038916179055601c8252808320805467ffffffffffffffff191694891694909417909355601d81529190208251611b57928401906141cc565b6001600160401b038216613642576040516312c33ce360e01b815260040160405180910390fd5b6001600160401b0382166000908152601360205260408120805461366590614d28565b90501115613686576040516308fe3c3160e41b815260040160405180910390fd5b6001600160401b03821660009081526013602052604090206136a88282614f0f565b506040516001600160401b038316907f3cd061096eaf881067d936308fbd8b81d060c45ab2ec910c02b953162befc10990600090a25050565b6002805403613703576040516362bfeae960e11b815260040160405180910390fd5b60028055565b6001600160401b0382166000908152601d6020908152604080832080548251818502810185019093528083526137b293869392919083018282801561379f57602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b03168152602001906008019060208260070104928301926001038202915080841161375c5790505b5050505050612dfe90919063ffffffff16565b91505080610f9557604051634ef44ed560e01b815260040160405180910390fd5b60006137de826119b9565b6000838152601a602090815260408083206001600160a01b038581168086529190935281842080546001600160a01b031916938916938417905590519394508593919290917fb90cc0d925ac3511ab6af2d7ca73ffcf7ec4bd871fff36b958ecf440079c463e9190a4505050565b6001600160401b038316158061386957506001600160401b038116155b15613887576040516312c33ce360e01b815260040160405180910390fd5b6001600160401b038381166000818152602080805260408083206001600160a01b03881680855290835292819020805467ffffffffffffffff19169587169586179055519182527f5b5af0622001a9b735a56357ddc1abd65e6a640126498674daf9d2fb05160725910160405180910390a3505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061395b826119b9565b9050336001600160a01b038216148061397957506139798133610a76565b8061399457503361398983610ec8565b6001600160a01b0316145b611033576040516302728a9d60e41b815260040160405180910390fd5b60006001600160a01b0384163b15613aa557604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906139f5903390899088908890600401614de7565b6020604051808303816000875af1925050508015613a30575060408051601f3d908101601f19168201909252613a2d91810190615006565b60015b613a8b573d808015613a5e576040519150601f19603f3d011682016040523d82523d6000602084013e613a63565b606091505b508051613a835760405163bcb5663760e01b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ec0565b506001610ec0565b613aba8383600084613f62565b60405182906001600160a01b0385169060009060008051602061505a833981519152908290a46040805160008082526020820181905284926001600160a01b0387169260008051602061503a833981519152910160405180910390a4613b2360008484846139b1565b610f955760405163bcb5663760e01b815260040160405180910390fd5b82602001516001600160a01b0316826001600160a01b0316141580613b66575082518114155b15610f9557604051637383f2c160e11b815260040160405180910390fd5b81548290613b9490600190614d02565b81548110613ba457613ba4614d9b565b9060005260206000209060020201828281548110613bc457613bc4614d9b565b600091825260209091208254600290920201908155600191820154910180546001600160a01b0319166001600160a01b039092169190911790558154829080613c0f57613c0f615023565b60008281526020812060026000199093019283020190815560010180546001600160a01b031916905590555050565b6000613c4a8585611f23565b9050613c57818484613b40565b6001600160a01b038316600090815260126020908152604080832085845290915290205415613c995760405163188a497360e01b815260040160405180910390fd5b6000858152601160205260409020613cb19085613b84565b600085815260106020908152604080832080546001808201835591855283852086516002909202019081558584015190820180546001600160a01b0319166001600160a01b03928316179055871680855260128452828520878652845293829020555186815284929188917f29486b9e2ae569b440933a9b1b421467306fa21f3dcad439c262910a634963a9910160405180910390a4612326565b613d57838383613339565b60008381526014602090815260408083206001600160401b03808616855292528220541690808215613e0557613dff836015600089815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561379f57600091825260209182902080546001600160401b0316845290820283019290916008910180841161375c5790505050505050612dfe90919063ffffffff16565b90925090505b8015613e86576000868152601560205260409020805485919084908110613e2e57613e2e614d9b565b600091825260208083206004830401805460039093166008026101000a6001600160401b038181021990941695841602949094179093558882526018835260408083209187168352925220805460ff19169055613f11565b6000868152601760209081526040808320601583529083208054825460018181018555938652848620600480830490910180546001600160401b0394851660086003958616810261010090810a9283029288021990931691909117909255855496870186559488529587209085040180548b84169590921690950290920a9283029202191617905592505b613f1c8686866133e1565b826001600160401b0316846001600160401b0316877f3f2709a99f6c06b4e57bbb38eb0134332f96f51a3da314f41a515adbb28b17cc60405160405180910390a4611b57565b6001600160a01b038416613f89576040516325bd6bd360e01b815260040160405180910390fd5b6000838152600f60205260409020600101546001600160a01b031615613fc25760405163c5a8d37160e01b815260040160405180910390fd5b82613fe0576040516312c33ce360e01b815260040160405180910390fd5b613fec60008585612c9f565b6001600160a01b0384166000908152600c60205260408120805460019290614015908490614d15565b90915550506040805180820182529283526001600160a01b0394851660208085019182526000958652600f9052932091518255509051600190910180546001600160a01b03191691909216179055565b60008381526015602052604090205415806140995750614084836119b9565b6001600160a01b0316336001600160a01b0316145b15610f9557600083815260166020526040902054610f959084906140bf90600190614d02565b84613d4c565b815481106140d257600080fd5b815482906140e290600190614d02565b815481106140f2576140f2614d9b565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b031682828154811061412d5761412d614d9b565b90600052602060002090600491828204019190066008026101000a8154816001600160401b0302191690836001600160401b031602179055508180548061417657614176615023565b60008281526020902060046000199092019182040180546001600160401b03600860038516026101000a021916905590555050565b508054600082556002029060005260206000209081019061101e91906142a9565b828054828255906000526020600020906003016004900481019282156142745791602002820160005b8382111561423f57835183826101000a8154816001600160401b0302191690836001600160401b0316021790555092602001926008016020816007010492830192600103026141f5565b80156142725782816101000a8154906001600160401b03021916905560080160208160070104928301926001030261423f565b505b506142809291506142d0565b5090565b50805460008255600301600490049060005260206000209081019061101e91906142d0565b5b8082111561428057600081556001810180546001600160a01b03191690556002016142aa565b5b8082111561428057600081556001016142d1565b6001600160e01b03198116811461101e57600080fd5b60006020828403121561430d57600080fd5b8135614318816142e5565b9392505050565b6001600160a01b038116811461101e57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561437257614372614334565b604052919050565b600082601f83011261438b57600080fd5b81356001600160401b038111156143a4576143a4614334565b6143b7601f8201601f191660200161434a565b8181528460208386010111156143cc57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561440157600080fd5b853561440c8161431f565b9450602086013561441c8161431f565b9350604086013592506060860135915060808601356001600160401b0381111561444557600080fd5b6144518882890161437a565b9150509295509295909350565b6000815180845260005b8181101561448457602081850181015186830182015201614468565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000614318602083018461445e565b80356001600160401b038116811461123857600080fd5b600080600080608085870312156144e457600080fd5b84356144ef8161431f565b935060208501359250614504604086016144b7565b9150614512606086016144b7565b905092959194509250565b60006020828403121561452f57600080fd5b5035919050565b6000806040838503121561454957600080fd5b82356145548161431f565b946020939093013593505050565b6000806000806080858703121561457857600080fd5b84356145838161431f565b9350602085013592506040850135915060608501356001600160401b038111156145ac57600080fd5b6145b88782880161437a565b91505092959194509250565b6000602082840312156145d657600080fd5b81356143188161431f565b600080604083850312156145f457600080fd5b8235915060208301356001600160401b0381111561461157600080fd5b61461d8582860161437a565b9150509250929050565b60008060006060848603121561463c57600080fd5b8335925061464c602085016144b7565b915061465a604085016144b7565b90509250925092565b6000806040838503121561467657600080fd5b82356146818161431f565b915060208301356146918161431f565b809150509250929050565b6000806000606084860312156146b157600080fd5b833592506020840135915061465a604085016144b7565b6000806000606084860312156146dd57600080fd5b83356146e88161431f565b925060208401356146f88161431f565b929592945050506040919091013590565b600082601f83011261471a57600080fd5b813560206001600160401b0382111561473557614735614334565b8160051b61474482820161434a565b928352848101820192828101908785111561475e57600080fd5b83870192505b8483101561478457614775836144b7565b82529183019190830190614764565b979650505050505050565b600080600080608085870312156147a557600080fd5b6147ae856144b7565b935060208501356147be8161431f565b925060408501356001600160401b03808211156147da57600080fd5b6147e68883890161437a565b935060608701359150808211156147fc57600080fd5b506145b887828801614709565b6000806040838503121561481c57600080fd5b50508035926020909101359150565b815181526020808301516001600160a01b03169082015260408101610bc3565b60006020828403121561485d57600080fd5b81356001600160401b0381111561487357600080fd5b610ec08482850161437a565b600060a0828403121561489157600080fd5b60405160a081018181106001600160401b03821117156148b3576148b3614334565b806040525082358152602083013560208201526148d2604084016144b7565b60408201526148e3606084016144b7565b60608201526148f4608084016144b7565b60808201529392505050565b602080825282518282018190526000919060409081850190868401855b8281101561495357614943848351805182526020908101516001600160a01b0316910152565b928401929085019060010161491d565b5091979650505050505050565b6000806040838503121561497357600080fd5b82359150611172602084016144b7565b600081518084526020808501945080840160005b838110156149bc5781516001600160401b031687529582019590820190600101614997565b509495945050505050565b6080815260006149da608083018761445e565b6001600160401b03861660208401526001600160a01b038516604084015282810360608401526147848185614983565b6020815260006143186020830184614983565b600080600060608486031215614a3257600080fd5b833592506020840135915060408401356001600160401b03811115614a5657600080fd5b614a628682870161437a565b9150509250925092565b600080600060608486031215614a8157600080fd5b614a8a846144b7565b9250602084013561464c8161431f565b600080600060608486031215614aaf57600080fd5b83359250602084013561464c8161431f565b801515811461101e57600080fd5b60008060408385031215614ae257600080fd5b8235614aed8161431f565b9150602083013561469181614ac1565b60008060008060808587031215614b1357600080fd5b8435614b1e8161431f565b93506020850135614b2e8161431f565b92506040850135915060608501356001600160401b038111156145ac57600080fd5b600080600060608486031215614b6557600080fd5b8335614b708161431f565b92506020840135915060408401356001600160401b03811115614a5657600080fd5b60008060408385031215614ba557600080fd5b8235915060208301356001600160401b03811115614bc257600080fd5b61461d85828601614709565b600080600080600080600080610100898b031215614beb57600080fd5b883597506020890135614bfd8161431f565b965060408901359550606089013594506080890135614c1b8161431f565b935060a0890135925060c0890135614c3281614ac1565b915060e08901356001600160401b03811115614c4d57600080fd5b614c598b828c0161437a565b9150509295985092959890939650565b60008060008060808587031215614c7f57600080fd5b84359350602085013592506040850135614c988161431f565b9396929550929360600135925050565b600080600060608486031215614cbd57600080fd5b8335925060208401356146f88161431f565b600060208284031215614ce157600080fd5b815161431881614ac1565b634e487b7160e01b600052601160045260246000fd5b81810381811115610bc357610bc3614cec565b80820180821115610bc357610bc3614cec565b600181811c90821680614d3c57607f821691505b602082108103614d5c57634e487b7160e01b600052602260045260246000fd5b50919050565b8082028115828204841417610bc357610bc3614cec565b600082614d9657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614dc357600080fd5b81516143188161431f565b600060208284031215614de057600080fd5b5051919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090614e1a9083018461445e565b9695505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906147849083018461445e565b600080600060608486031215614e7357600080fd5b8351614e7e8161431f565b602085015160408601519194509250614e9681614ac1565b809150509250925092565b838152826020820152606060408201526000614ec0606083018461445e565b95945050505050565b601f821115610f9557600081815260208120601f850160051c81016020861015614ef05750805b601f850160051c820191505b81811015611b5757828155600101614efc565b81516001600160401b03811115614f2857614f28614334565b614f3c81614f368454614d28565b84614ec9565b602080601f831160018114614f715760008415614f595750858301515b600019600386901b1c1916600185901b178555611b57565b600085815260208120601f198616915b82811015614fa057888601518255948401946001909101908401614f81565b5085821015614fbe5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252825182820181905260009190848201906040850190845b81811015610fec57835183529284019291840191600101614fea565b60006020828403121561501857600080fd5b8151614318816142e5565b634e487b7160e01b600052603160045260246000fdfe04444026cefd1b05506559cab59d1b865ae3ba4ed2fe5c894f04e522776c552dddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212201e4a608062b55368b18268aee31c2deedfb66d3a1757b641621dcbd407091b8864736f6c63430008150033",
    "sourceMapi;:::-;;:::i;:::-;;;747:14:98;;740:22;722:41;;710:2;695:18;3687:343:95;582:187:98;8391:1393:79;;;;;;:::i;:::-;;:::i;:::-;;2731:89:96;;;:::i;:::-;;;;;;;:::i;76839:502:79:-;;;;;;:::i;:::-;;:::i;22736:190::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4239:32:98;;;4221:51;;4209:2;4194:18;22736:190:79;4075:203:98;22093:353:79;;;;;;:::i;:::-;;:::i;2866:519:0:-;;;;;;:::i;:::-;;:::i;3085:167:96:-;;;;;;:::i;:::-;;:::i;3391:142:0:-;;;;;;:::i;:::-;;:::i;1793:97:96:-;1871:12;;1793:97;;1045:226:95;;;;;;:::i;:::-;;:::i;4368:126:74:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4456:26:74;4433:4;4456:26;;;:13;:26;;;;;;4486:1;4456:31;;4368:126;50122:193:79;;;;;;:::i;:::-;;:::i;65729:476::-;;;;;;:::i;:::-;;:::i;6045:194::-;;;;;;:::i;:::-;;:::i;1806:496:95:-;;;;;;:::i;:::-;;:::i;2725:265:80:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;9300:32:98;;;9282:51;;9364:2;9349:18;;9342:34;;;;9255:18;2725:265:80;9108:274:98;35382:304:79;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2554:273:95:-;;;;;;:::i;:::-;;:::i;71811:2039:79:-;;;;;;:::i;:::-;;:::i;6977:170::-;;;;;;:::i;:::-;;:::i;18600:79::-;;;;;;:::i;:::-;;:::i;35120:212::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;77467:399::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;49468:150::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2137:115:80:-;2224:21;;2137:115;;48974:246:79;;;;;;:::i;:::-;;:::i;49668:166::-;;;;;;:::i;:::-;;:::i;70306:415::-;;;;;;:::i;:::-;;:::i;17576:339::-;;;;;;:::i;:::-;;:::i;28428:878::-;;;;;;:::i;:::-;;:::i;3326:312:95:-;;;;;;:::i;:::-;;:::i;34879:190:79:-;;;;;;:::i;:::-;;:::i;5147:189::-;;;;;;:::i;:::-;;:::i;2436:101:74:-;;;:::i;49270:148:79:-;;;;;;:::i;:::-;;:::i;78033:243::-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78215:20:79;;;:11;:20;;;;;-1:-1:-1;;;;;78215:42:79;;;;;;;;;;-1:-1:-1;;;;;78215:54:79;;;;;;;;;;78208:61;;;;;;;;;;;;;;-1:-1:-1;;;78208:61:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78033:243;;;;;;;14705:13:98;;-1:-1:-1;;;;;14701:22:98;;;14683:41;;14784:4;14772:17;;;14766:24;14762:33;;;14740:20;;;14733:63;14852:4;14840:17;;;14834:24;14812:20;;;14805:54;14919:4;14907:17;;;14901:24;-1:-1:-1;;;;;14897:50:98;14875:20;;;14868:80;;;;14633:3;14618:19;;14443:511;3750:358:74;;;;;;:::i;:::-;;:::i;50365:354:79:-;;;;;;:::i;:::-;;:::i;2501:117:96:-;;;:::i;490:50:76:-;;-1:-1:-1;;;490:50:76;;;;;-1:-1:-1;;;;;;15631:33:98;;;15613:52;;15601:2;15586:18;490:50:76;15469:202:98;2012:85:74;2084:6;;-1:-1:-1;;;;;2084:6:74;2012:85;;2937:93:96;;;:::i;1871:110:80:-;1931:7;1957:17;-1:-1:-1;;;;;1957:17:80;1871:110;;31449:426:79;;;;;;:::i;:::-;;:::i;23431:278::-;;;;;;:::i;:::-;;:::i;35736:326::-;;;;;;:::i;:::-;;:::i;655:18:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;655:18:0;;;;;-1:-1:-1;;;655:18:0;;;;;;;;;15961:6:98;15994:15;;;15976:34;;16046:15;;;16041:2;16026:18;;16019:43;16098:15;;;16078:18;;;16071:43;;;;16150:15;;;16145:2;16130:18;;16123:43;16203:15;;16197:3;16182:19;;16175:44;16256:15;;;16250:3;16235:19;;16228:44;15938:3;15923:19;655:18:0;15676:602:98;18729:2583:79;;;;;;:::i;:::-;;:::i;7991:350::-;;;;;;:::i;:::-;;:::i;74408:961::-;;;;;;:::i;:::-;;:::i;463:136:97:-;;;;;;:::i;:::-;;:::i;1766:469:0:-;;;;;;:::i;:::-;;:::i;2044:93:96:-;2120:10;;2044:93;;68162:486:79;;;;;;:::i;:::-;;:::i;31925:2030::-;;;;;;:::i;:::-;;:::i;49884:188::-;;;;;;:::i;:::-;50001:6;50026:27;;;:18;:27;;;;;;;;-1:-1:-1;;;;;50026:39:79;;;;;;;;;;;;;;49884:188;;;;-1:-1:-1;;;;;19076:31:98;;;19058:50;;19046:2;19031:18;49884:188:79;18914:200:98;71002:207:79;;;;;;:::i;:::-;;:::i;66797:667::-;;;;;;:::i;:::-;;:::i;29356:255::-;;;;;;:::i;:::-;;:::i;24098:175::-;;;;;;:::i;:::-;-1:-1:-1;;;;;24231:25:79;;;24208:4;24231:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;24098:175;75419:226;;;;;;:::i;:::-;75559:4;75582:28;;;:19;:28;;;;;;;;-1:-1:-1;;;;;75582:42:79;;;;;;;;;;;;:51;;;;;;;:56;;;75419:226;2737:187:74;;;;;;:::i;:::-;;:::i;17965:321:79:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;20178:32:98;;;20160:51;;20242:2;20227:18;;20220:34;;;;20297:14;20290:22;20270:18;;;20263:50;20148:2;20133:18;17965:321:79;19964:355:98;63174:206:79;;;;;;:::i;:::-;;:::i;444:40:76:-;;;;;;;;;;;;;;;-1:-1:-1;;;444:40:76;;;;;3687:343:95;3786:4;3821:36;3845:11;3821:23;:36::i;:::-;:93;;;-1:-1:-1;;;;;;;3873:41:95;;-1:-1:-1;;;3873:41:95;3821:93;:157;;;-1:-1:-1;;;;;;;3930:48:95;;-1:-1:-1;;;3930:48:95;3821:157;:202;;;-1:-1:-1;;;;;;;3994:29:95;;-1:-1:-1;;;3994:29:95;3821:202;3802:221;3687:343;-1:-1:-1;;3687:343:95:o;8391:1393:79:-;8589:7;4811:35;4838:7;4811:26;:35::i;:::-;8609:22:::1;8633:16:::0;8655:22:::1;8669:7;8655:13;:22::i;:::-;8608:69;;;;;8709:4;-1:-1:-1::0;;;;;8691:22:79::1;:14;-1:-1:-1::0;;;;;8691:22:79::1;;8687:69;;8722:34;;-1:-1:-1::0;;;8722:34:79::1;;;;;;;;;;;8687:69;-1:-1:-1::0;;;;;8770:16:79;::::1;8766:61;;8795:32;;-1:-1:-1::0;;;8795:32:79::1;;;;;;;;;;;8766:61;-1:-1:-1::0;;;;;8841:19:79;::::1;8855:4;8841:19;:47:::0;::::1;;;;8875:13;8864:7;:24;8841:47;8837:100;;;8909:28;;-1:-1:-1::0;;;8909:28:79::1;;;;;;;;;;;8837:100;-1:-1:-1::0;;;;;9068:13:79;::::1;1702:19:71::0;9063:48:79::1;;9092:19;;-1:-1:-1::0;;;9092:19:79::1;;;;;;;;;;;9063:48;9126:57;::::0;-1:-1:-1;;;9126:57:79;;-1:-1:-1;;;9126:57:79::1;::::0;::::1;15613:52:98::0;-1:-1:-1;;;;;9126:29:79;::::1;::::0;::::1;::::0;15586:18:98;;9126:57:79::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9121:133;;9204:50;;-1:-1:-1::0;;;9204:50:79::1;;;;;;;;;;;9121:133;9264:52;9289:7;9298:2;9302:13;9264:24;:52::i;:::-;9327:39;9348:4;9354:2;9358:7;9327:20;:39::i;:::-;-1:-1:-1::0;;;;;9554:15:79;::::1;;::::0;;;:9:::1;:15;::::0;;;;:20;;9573:1:::1;::::0;9554:15;:20:::1;::::0;9573:1;;9554:20:::1;:::i;:::-;::::0;;;-1:-1:-1;9584:57:79::1;::::0;-1:-1:-1;9614:7:79;9623:13;9638:2;9584:29:::1;:57::i;:::-;-1:-1:-1::0;;;;;9651:13:79;::::1;;::::0;;;:9:::1;:13;::::0;;;;:18;;9668:1:::1;::::0;9651:13;:18:::1;::::0;9668:1;;9651:18:::1;:::i;:::-;::::0;;;-1:-1:-1;9707:70:79::1;::::0;-1:-1:-1;9718:14:79;9734:2;9738:8;9748:13;9763:7;9772:4;9707:10:::1;:70::i;:::-;8598:1186;;8391:1393:::0;;;;;;:::o;2731:89:96:-;2776:13;2808:5;2801:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2731:89;:::o;76839:502:79:-;-1:-1:-1;;;;;77058:28:79;;;77015:4;77058:28;;;:19;:28;;;;;;;;;;;77120:36;;;;;;;;;-1:-1:-1;;;;;77120:44:79;;;;;;;;;;77015:4;;77058:28;;77120:44;;;77178:24;;;;77174:139;;77221:10;77235:41;77268:7;77235:24;77251:7;77235:15;:24::i;:::-;:32;;:41::i;:::-;77218:58;-1:-1:-1;77290:12:79;;-1:-1:-1;;;;77290:12:79;77174:139;77329:5;77322:12;;;;76839:502;;;;;;;:::o;22736:190::-;22817:7;22836:23;22851:7;22836:14;:23::i;:::-;22877:24;;;;:15;:24;;;;;;22902:16;22893:7;22902;:16::i;:::-;-1:-1:-1;;;;;22877:42:79;;;;;;;;;;;;;;-1:-1:-1;22877:42:79;;;;22736:190;-1:-1:-1;;22736:190:79:o;22093:353::-;22164:13;22180:16;22188:7;22180;:16::i;:::-;22164:32;;22216:5;-1:-1:-1;;;;;22210:11:79;:2;-1:-1:-1;;;;;22210:11:79;;22206:54;;22230:30;;-1:-1:-1;;;22230:30:79;;;;;;;;;;;22206:54;719:10:72;-1:-1:-1;;;;;22275:21:79;;;;;;:63;;-1:-1:-1;22301:37:79;22318:5;719:10:72;24098:175:79;:::i;22301:37::-;22300:38;22275:63;22271:136;;;22359:48;;-1:-1:-1;;;22359:48:79;;;;;;;;;;;22271:136;22418:21;22427:2;22431:7;22418:8;:21::i;:::-;22154:292;22093:353;;:::o;2866:519:0:-;3039:7;1528:25:74;:23;:25::i;:::-;3059:17:0::1;3078:25:::0;3107:23:::1;3120:9;3107:12;:23::i;:::-;3058:72:::0;;-1:-1:-1;3058:72:0;-1:-1:-1;3058:72:0;3141:211:::1;3173:17;3169:1;:21;3141:211;;;3208:25;3221:1;3224:8;3208:12;:25::i;:::-;3247:35;3257:2;3261:1;3264:13;3247:35;;;;;;;;;;;::::0;:9:::1;:35::i;:::-;3324:3;;3141:211;;;-1:-1:-1::0;3369:9:0;;2866:519;-1:-1:-1;;;;;;2866:519:0:o;3085:167:96:-;1691:12:74;:10;:12::i;:::-;1690:17:80;:39;;-1:-1:-1;;;;;;1690:39:80;-1:-1:-1;;;;;1690:39:80;;;;;3085:167:96;:::o;3204:41::-:1;3085:167:::0;:::o;3391:142:0:-;1528:25:74;:23;:25::i;:::-;3494:32:0::1;3507:7;3516:9;3494:12;:32::i;:::-;3391:142:::0;;:::o;1045:226:95:-;1528:25:74;:23;:25::i;:::-;1209:55:95::1;1226:7;1235;1244:19;1209:16;:55::i;50122:193:79:-:0;-1:-1:-1;;;;;50264:34:79;;;50241:4;50264:34;;;:27;:34;;;;;;;;:44;;;;;;;;;;;;;;;50122:193::o;65729:476::-;65872:7;61740:38;61770:7;61740:29;:38::i;:::-;65891:53:::1;65920:7;65929:5;65936:7;65891:28;:53::i;:::-;66008:44;66028:7;66037:5;66044:7;66008:19;:44::i;:::-;66069:21;::::0;;;:12:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;66069:30:79;::::1;::::0;;;;;;;;66062:37;;-1:-1:-1;;66062:37:79::1;::::0;;66115:31;66069:30;;66082:7;;66115:31:::1;::::0;66069:21;66115:31:::1;66156:42;65729:476:::0;;;;:::o;6045:194::-;6181:7;4811:35;4838:7;4811:26;:35::i;:::-;6200:32:::1;6210:4;6216:2;6220:7;6200:32;;;;;;;;;;;::::0;:9:::1;:32::i;1806:496:95:-:0;2026:7;1528:25:74;:23;:25::i;:::-;2071:12:95::1;2069:14:::0;;::::1;;::::0;;;;2103:163:::1;::::0;2165:17;2196:14;2224:11;2249:7;2103:14:::1;:163::i;:::-;-1:-1:-1::0;2283:12:95::1;::::0;1806:496;;;;;;:::o;2725:265:80:-;2835:16;2897:17;;;2953:21;-1:-1:-1;;;;;2897:17:80;;;;2835:16;2978:5;;2941:33;;:9;:33;:::i;:::-;2940:43;;;;:::i;:::-;2924:59;;2725:265;;;;;:::o;35382:304:79:-;-1:-1:-1;;;;;;;;;;;;;;;;;35542:5:79;35511:20;35522:8;35511:10;:20::i;:::-;:27;:36;35507:87;;35568:26;;-1:-1:-1;;;35568:26:79;;;;;;;;;;;35507:87;35604:18;35625:25;;;:15;:25;;;;;:32;;35651:5;;35625:32;;;;;;:::i;:::-;;;;;;;;;;35604:53;;;;;;;;;35625:32;;;;;35604:53;;;;;;;-1:-1:-1;;;;;35604:53:79;;;;;;;;;-1:-1:-1;;35382:304:79;;;;:::o;2554:273:95:-;2665:7;1528:25:74;:23;:25::i;:::-;2710:12:95::1;2708:14:::0;;::::1;;::::0;;;;2742:49:::1;::::0;2779:11;2742:14:::1;:49::i;:::-;-1:-1:-1::0;2808:12:95::1;::::0;1563:1:74::1;2554:273:95::0;;;:::o;71811:2039:79:-;71909:12;;61740:38;71909:12;61740:29;:38::i;:::-;2562:17:89::1;:15;:17::i;:::-;71989:12:79::2;::::0;;::::2;::::0;-1:-1:-1;;;;;71971:31:79;;::::2;71946:22;71971:31:::0;;;:17:::2;:31;::::0;;;;;;;72032:15:::2;::::0;::::2;::::0;72086:12;;72074:25;;:11:::2;:25:::0;;;;;-1:-1:-1;;;;;71971:31:79;;::::2;72074:41:::0;;;;;;;;;:53;;::::2;::::0;;;;;;;;;;:93:::2;;::::0;71971:31;;72032:15;;72074:93:::2;:107:::0;72057:163:::2;;72199:21;;-1:-1:-1::0;;;72199:21:79::2;;;;;;;;;;;72057:163;72281:48;72304:4;:12;;;72318:10;72281:22;:48::i;:::-;72340:27;72370:38;72378:4;:12;;;72392:4;:15;;;72370:7;:38::i;:::-;72605:21;::::0;::::2;::::0;72737:13;;72772:17:::2;::::0;::::2;::::0;72596:243:::2;::::0;-1:-1:-1;;;72596:243:79;;72710:4:::2;72596:243;::::0;::::2;22108:51:98::0;22175:18;;;22168:34;;;;-1:-1:-1;;;;;22275:15:98;;;22255:18;;;22248:43;22327:15;;22307:18;;;22300:43;72340:68:79;;-1:-1:-1;;;;;;72596:84:79::2;::::0;::::2;::::0;22080:19:98;;72596:243:79::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;72578:323;;72857:44;;-1:-1:-1::0;;;72857:44:79::2;;;;;;;;;;;72578:323;73064:21;::::0;::::2;::::0;72972:127:::2;::::0;-1:-1:-1;;;72972:127:79;;-1:-1:-1;;;;;22544:31:98;;72972:127:79::2;::::0;::::2;22526:50:98::0;-1:-1:-1;;;;;22612:32:98;;;22592:18;;;22585:60;72972:46:79;;::::2;::::0;::::2;::::0;22499:18:98;;72972:127:79::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;72954:203;;73117:40;;-1:-1:-1::0;;;73117:40:79::2;;;;;;;;;;;72954:203;73224:196;::::0;;::::2;::::0;;::::2;::::0;;73257:12;;::::2;::::0;-1:-1:-1;;;;;73224:196:79;;::::2;::::0;;73297:17;;::::2;::::0;73224:196;::::2;;::::0;;::::2;::::0;;;73337:13;;73224:196;;;;;;73388:21;;::::2;::::0;;-1:-1:-1;;;;;73224:196:79;;::::2;-1:-1:-1::0;73224:196:79;;;;;73443:12;;73196:25:::2;73431::::0;;;:11:::2;:25:::0;;;;;:41;;::::2;::::0;;;;;;;:53;;::::2;::::0;;;;;;;:64;;;;;;;::::2;-1:-1:-1::0;;;73431:64:79::2;-1:-1:-1::0;;;;;;73431:64:79;;;;::::2;::::0;;;;;;;::::2;::::0;;;;;;;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;;;::::2;-1:-1:-1::0;;;;;;73431:64:79;;::::2;::::0;;;::::2;::::0;;;73525:12;;73505:33;;:19:::2;:33:::0;;;;;73539:21;;73505:56;;::::2;::::0;;;;;;;;73575:13;;73505:93;;;;;;;:98;;73224:196;;73431:64;;73505:93;;73196:25;73505:98:::2;::::0;73431:64;;73505:98:::2;:::i;:::-;;;;;;;;73703:10;-1:-1:-1::0;;;;;73619:197:79::2;73677:4;:12;;;-1:-1:-1::0;;;;;73619:197:79::2;73651:4;:12;;;73619:197;73727:5;:13;;;73754:5;:21;;;73789:4;:17;;;73619:197;;;;;;;22856:25:98::0;;;-1:-1:-1;;;;;22917:32:98;;;;22912:2;22897:18;;22890:60;-1:-1:-1;;;;;22986:31:98;22981:2;22966:18;;22959:59;22844:2;22829:18;;22656:368;73619:197:79::2;;;;;;;;-1:-1:-1::0;;1830:1:89::1;2732:7;:22:::0;-1:-1:-1;;;;71811:2039:79:o;6977:170::-;7101:39;7118:4;7124:2;7128:7;7101:39;;;;;;;;;;;;:16;:39::i;18600:79::-;18656:16;18661:7;18670:1;18656:4;:16::i;35120:212::-;35234:30;35267:26;;;:16;:26;;;;;;;;35234:59;;;;;;;;;;;;;;;;;35208:14;;35234:30;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;35234:59:79;;;;;;;;;;;;;;;;-1:-1:-1;35234:59:79;;35120:212;-1:-1:-1;;;;;;35120:212:79:o;77467:399::-;77618:13;77633:6;77641:7;77650:15;77702:34;77719:7;77728;77702:16;:34::i;:::-;-1:-1:-1;;;;;77750:28:79;;;;;;;:19;:28;;;;;;;;;77792:17;:26;;;;;;77832:8;:17;;;;;;77681:178;;;;;;;;;;;;;;;;;77750:28;;;;;-1:-1:-1;;;;;77792:26:79;;;;77832:17;;;77681:178;;;77832:17;77681:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;77681:178:79;-1:-1:-1;;;;;77681:178:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77467:399;;;;;;;:::o;49468:150::-;49588:23;;;;:14;:23;;;;;;;;;49581:30;;;;;;;;;;;;;;;;;49554:15;;49581:30;;;49588:23;49581:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;49581:30:79;-1:-1:-1;;;;;49581:30:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49468:150;;;:::o;48974:246::-;49114:21;;;;:12;:21;;;;;;;;-1:-1:-1;;;;;49114:30:79;;;;;;;;;;49084:13;;49114:30;;49109:71;;49153:27;;-1:-1:-1;;;49153:27:79;;;;;;;;;;;49109:71;-1:-1:-1;;;;;49197:16:79;;;;;;:7;:16;;;;;49190:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48974:246;;;;:::o;49668:166::-;49796:31;;;;:22;:31;;;;;;;;;49789:38;;;;;;;;;;;;;;;;;49762:15;;49789:38;;;49796:31;49789:38;;;;;;;;;;;;;;;;-1:-1:-1;;;;;49789:38:79;;;;;;;;;;;;;;;;;;;-1:-1:-1;49789:38:79;;49668:166;-1:-1:-1;;;;;;;49668:166:79:o;70306:415::-;70386:13;70402:16;70410:7;70402;:16::i;:::-;70386:32;;70438:5;-1:-1:-1;;;;;70432:11:79;:2;-1:-1:-1;;;;;70432:11:79;;70428:61;;70452:37;;-1:-1:-1;;;70452:37:79;;;;;;;;;;;70428:61;719:10:72;-1:-1:-1;;;;;70517:21:79;;;;;;:84;;-1:-1:-1;70555:46:79;70581:5;719:10:72;50122:193:79;:::i;70555:46::-;70554:47;70517:84;70500:174;;;70619:55;;-1:-1:-1;;;70619:55:79;;;;;;;;;;;70500:174;70684:30;70702:2;70706:7;70684:17;:30::i;17576:339::-;17681:7;17701:13;17716:20;17738:10;17752:44;17779:7;17752:13;:44::i;:::-;17700:96;;;;;;17810:5;17806:81;;;17839:37;;-1:-1:-1;;;17839:37:79;;;;;160:25:98;;;-1:-1:-1;;;;;17839:23:79;;;;;133:18:98;;17839:37:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17831:45;;17806:81;-1:-1:-1;17903:5:79;;17576:339;-1:-1:-1;;;17576:339:79:o;28428:878::-;28555:24;28570:8;28555:14;:24::i;:::-;719:10:72;1702:19:71;;28635:58:79;;28674:19;;-1:-1:-1;;;28674:19:79;;;;;;;;;;;28635:58;28725:90;;;;;;;;;;;;-1:-1:-1;;;;;28725:90:79;;;;;;28891:14;28908:27;28926:8;28908:17;:27::i;:::-;:34;28891:51;;28966:3;28957:6;:12;28953:150;;;28985:26;;;;:16;:26;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;28985:38:79;-1:-1:-1;;;;;28985:38:79;;;;;;;;;28953:150;;;29061:31;;-1:-1:-1;;;29061:31:79;;;;;;;;;;;28953:150;29227:7;29213:12;-1:-1:-1;;;;;29181:54:79;29195:8;29181:54;29205:6;29181:54;;;;160:25:98;;148:2;133:18;;14:177;29181:54:79;;;;;;;;29246:53;28545:761;;;28428:878;;;:::o;3326:312:95:-;1528:25:74;:23;:25::i;:::-;3510:121:95::1;3557:17;3588:13;3615:6;3510:33;:121::i;34879:190:79:-:0;34986:23;35012:25;;;:15;:25;;;;;;;;34986:51;;;;;;;;;;;;;;;;;34960:14;;34986:23;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;34986:51:79;;;;;;;;;;;;;;;5147:189;5210:7;-1:-1:-1;;;;;5233:19:79;;5229:67;;5261:35;;-1:-1:-1;;;5261:35:79;;;;;;;;;;;5229:67;-1:-1:-1;;;;;;5313:16:79;;;;;:9;:16;;;;;;;5147:189::o;2436:101:74:-;1691:12;:10;:12::i;:::-;2500:30:::1;2527:1;2500:18;:30::i;:::-;2436:101::o:0;49270:148:79:-;49389:22;;;;:13;:22;;;;;;;;;49382:29;;;;;;;;;;;;;;;;;49355:15;;49382:29;;;49389:22;49382:29;;;;;;;;;;;;;;;;-1:-1:-1;;;;;49382:29:79;;;;;;;;;;;;;;;;;;;-1:-1:-1;49382:29:79;;49270:148;-1:-1:-1;;;;;;;49270:148:79:o;3750:358:74:-;1691:12;:10;:12::i;:::-;-1:-1:-1;;;;;3869:25:74;::::1;3865:71;;3903:33;;-1:-1:-1::0;;;3903:33:74::1;;;;;;;;;;;3865:71;3946:9;:99;;-1:-1:-1::0;;;;;4015:26:74;::::1;4044:1;4015:26:::0;;;:13:::1;:26;::::0;;;;:30;;;3946:99:::1;;;-1:-1:-1::0;;;;;3970:26:74;::::1;;::::0;;;:13:::1;:26;::::0;;;;3999:1:::1;3970:30:::0;;;;3946:99:::1;;4078:11;-1:-1:-1::0;;;;;4060:41:74::1;;4091:9;4060:41;;;;747:14:98::0;740:22;722:41;;710:2;695:18;;582:187;4060:41:74::1;;;;;;;;3750:358:::0;;:::o;50365:354:79:-;-1:-1:-1;;;;;50485:24:79;;719:10:72;50485:24:79;50481:86;;50530:37;;-1:-1:-1;;;50530:37:79;;;;;;;;;;;50481:86;719:10:72;50578:41:79;;;;:27;:41;;;;;;;;-1:-1:-1;;;;;50578:51:79;;;;;;;;;;;;:62;;-1:-1:-1;;50578:62:79;;;;;;;;;;50655:57;;722:41:98;;;50578:51:79;;719:10:72;50655:57:79;;695:18:98;50655:57:79;;;;;;;;50365:354;;:::o;2501:117:96:-;2560:13;2592:19;2585:26;;;;;:::i;2937:93::-;2984:13;3016:7;3009:14;;;;;:::i;31449:426:79:-;31573:7;3507:29;3528:7;3507:20;:29::i;:::-;31596:25:::1;::::0;;;:16:::1;:25;::::0;;;;:32;:48;-1:-1:-1;31592:105:79::1;;;31665:32;;-1:-1:-1::0;;;31665:32:79::1;;;;;;;;;;;31592:105;31758:25;::::0;;;:16:::1;:25;::::0;;;;31751:32:::1;::::0;::::1;:::i;:::-;31798:28;::::0;31818:7;;31798:28:::1;::::0;;;::::1;22154:292:::0;22093:353;;:::o;23431:278::-;-1:-1:-1;;;;;23520:24:79;;719:10:72;23520:24:79;23516:60;;23553:23;;-1:-1:-1;;;23553:23:79;;;;;;;;;;;23516:60;719:10:72;23586:32:79;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;23586:42:79;;;;;;;;;;;;:53;;-1:-1:-1;;23586:53:79;;;;;;;;;;23654:48;;722:41:98;;;23586:42:79;;719:10:72;23654:48:79;;695:18:98;23654:48:79;582:187:98;35736:326:79;-1:-1:-1;;;;;;;;;;;;;;;;;35910:5:79;35872:27;35890:8;35872:17;:27::i;:::-;:34;:43;35868:101;;35936:33;;-1:-1:-1;;;35936:33:79;;;;;;;;;;;35868:101;35979:18;36000:26;;;:16;:26;;;;;:33;;36027:5;;36000:33;;;;;;:::i;18729:2583::-;18867:7;18849;4811:35;4838:7;4811:26;:35::i;:::-;18887:22:::1;18911:16:::0;18933:22:::1;18947:7;18933:13;:22::i;:::-;18886:69;;;;;18965:17;18985:16;18993:7;18985;:16::i;:::-;18965:36;;19012:57;19033:14;19057:1;19061:7;19012:20;:57::i;:::-;19079:162;::::0;;::::1;::::0;::::1;::::0;;;19155:1:::1;19079:162:::0;;-1:-1:-1;;;;;19252:25:79;::::1;;::::0;;;:9:::1;:25;::::0;;;;:30;;19281:1:::1;::::0;19252:25;:30:::1;::::0;19281:1;;19252:30:::1;:::i;:::-;::::0;;;-1:-1:-1;19292:29:79::1;::::0;-1:-1:-1;19309:1:79::1;19313:7:::0;19292:8:::1;:29::i;:::-;19331:38;19357:1;19361:7;19331:17;:38::i;:::-;19380:23;19406:19;19417:7;19406:10;:19::i;:::-;19443:24;::::0;;;:15:::1;:24;::::0;;;;19380:45;;-1:-1:-1;19436:31:79::1;::::0;19443:24;19436:31:::1;:::i;:::-;19484:25;::::0;;;:16:::1;:25;::::0;;;;19477:32:::1;::::0;::::1;:::i;:::-;19526:24;::::0;;;:15:::1;:24;::::0;;;;;;;-1:-1:-1;;;;;19526:35:79;::::1;::::0;;;;;;;19519:42;;-1:-1:-1;;;;;;19519:42:79::1;::::0;;19662:15;;19526:24;;;19701:1069:::1;19721:6;19717:1;:10;19701:1069;;;19768:16;19749:15;:35;19745:200;;19859:8;19868:1;19859:11;;;;;;;;:::i;:::-;;;;;;;:27;;;19908:8;19917:1;19908:11;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;:19;19809:136:::1;::::0;-1:-1:-1;;;19809:136:79;;-1:-1:-1;;;;;9300:32:98;;;19809:136:79::1;::::0;::::1;9282:51:98::0;9349:18;;;9342:34;9255:18;;19809:136:79::1;;;;;;;19745:200;19966:16;:45;19983:8;19992:1;19983:11;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1::0;;;;;19966:45:79::1;-1:-1:-1::0;;;;;19966:45:79::1;;;;;;;;;;;;:96;20029:8;20038:1;20029:11;;;;;;;;:::i;:::-;;;;;;;:19;;;19966:96;;;;;;;;;;;19959:103;;;20229:15;20210:16;:34;20186:58;;20541:8;20550:1;20541:11;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1::0;;;;;20532:42:79::1;;20596:8;20605:1;20596:11;;;;;;;;:::i;:::-;;;;;;;:19;;;20661:1;20637:21;:25;;;;:::i;:::-;20532:148;::::0;-1:-1:-1;;;;;;20532:148:79::1;::::0;;;;;;::::1;::::0;::::1;23459:25:98::0;;;;23500:18;;;23493:34;23432:18;;20532:148:79::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:168;::::0;20699:1:::1;20532:168;:::i;:::-;20497:203;::::0;;::::1;:::i;:::-;::::0;-1:-1:-1;20742:3:79::1;;19701:1069;;;-1:-1:-1::0;20876:20:79::1;::::0;;;:11:::1;:20;::::0;;;;;20869:27;;;::::1;;::::0;;-1:-1:-1;;;;;;20869:27:79::1;::::0;;20912:45;20888:7;;20876:20;-1:-1:-1;;;;;20912:45:79;::::1;::::0;-1:-1:-1;;;;;;;;;;;20912:45:79;20876:20;;20912:45:::1;20972:62;::::0;;23459:25:98;;;21009:1:79::1;23515:2:98::0;23500:18;;23493:34;;;21026:7:79;;21009:1;;-1:-1:-1;;;;;20972:62:79;::::1;::::0;-1:-1:-1;;;;;;;;;;;20972:62:79;23432:18:98;20972:62:79::1;;;;;;;21111:161;::::0;;::::1;::::0;::::1;::::0;;;21186:1:::1;21111:161:::0;;-1:-1:-1;21290:15:79;18729:2583;-1:-1:-1;;;;;;;;;18729:2583:79:o;7991:350::-;8158:7;4811:35;4838:7;4811:26;:35::i;:::-;8177:34:::1;8187:4;8193:2;8197:7;8206:4;8177:9;:34::i;:::-;8226:47;8249:4;8255:2;8259:7;8268:4;8226:22;:47::i;:::-;8221:113;;8294:40;;-1:-1:-1::0;;;8294:40:79::1;;;;;;;;;;;8221:113;7991:350:::0;;;;;:::o;74408:961::-;74551:7;61740:38;61770:7;61740:29;:38::i;:::-;-1:-1:-1;;;;;74601:26:79;;::::1;74570:28;74601:26:::0;;;:17:::1;:26;::::0;;;;;;;;74666:20;;;:11:::1;:20:::0;;;;;-1:-1:-1;;;;;74601:26:79;;::::1;74666:42:::0;;;;;;;;;:76;;::::1;::::0;;;;;;;;74637:105;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;74637:105:79;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;74601:26;74637:105;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;74601:26;;74637:105;74752:88:::1;;74823:17;;-1:-1:-1::0;;;74823:17:79::1;;;;;;;;;;;74752:88;74912:20;::::0;;;:11:::1;:20;::::0;;;;;;;-1:-1:-1;;;;;74912:42:79;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;74912:54:79;::::1;::::0;;;;;;;74905:61;;-1:-1:-1;;;;;;74905:61:79;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;74905:61:79::1;::::0;;74976:28;;;:19:::1;:28:::0;;;;;75005:32:::1;::::0;::::1;::::0;74976:62;;::::1;::::0;;;;;;;;75052:17;;::::1;::::0;74976:103;;;;;;;:108;;74905:61;;74976:103;;:108:::1;::::0;74905:61;;74976:108:::1;:::i;:::-;;;;;;;;75176:10;-1:-1:-1::0;;;;;75100:209:79::1;75155:7;-1:-1:-1::0;;;;;75100:209:79::1;75134:7;75100:209;75200:9;:17;;;75231:9;:32;;;75277:9;:22;;;75100:209;;;;;;;22856:25:98::0;;;-1:-1:-1;;;;;22917:32:98;;;;22912:2;22897:18;;22890:60;-1:-1:-1;;;;;22986:31:98;22981:2;22966:18;;22959:59;22844:2;22829:18;;22656:368;75100:209:79::1;;;;;;;;75319:43;22093:353:::0;463:136:97;573:19;;;;:10;:19;;;;;566:26;;541:13;;573:19;566:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;566:26:97;;463:136;-1:-1:-1;;;;;;463:136:97:o;1766:469:0:-;1904:7;1528:25:74;:23;:25::i;:::-;1924:17:0::1;1943:25:::0;1972:23:::1;1985:9;1972:12;:23::i;:::-;1923:72:::0;;-1:-1:-1;1923:72:0;-1:-1:-1;1923:72:0;2006:196:::1;2038:17;2034:1;:21;2006:196;;;2073:25;2086:1;2089:8;2073:12;:25::i;:::-;2112:20;2122:2;2126:1;2112:20;;;;;;;;;;;::::0;:9:::1;:20::i;:::-;2174:3;;2006:196;;;-1:-1:-1::0;2219:9:0;;1766:469;-1:-1:-1;;;;;1766:469:0:o;68162:486:79:-;68294:7;61740:38;61770:7;61740:29;:38::i;:::-;68330:17;;68313:14:::1;68371:22:::0;;;:13:::1;:22;::::0;;;;:29;68361:39;::::1;68357:91;;68421:27;;-1:-1:-1::0;;;68421:27:79::1;;;;;;;;;;;68357:91;68508:31;::::0;;;:22:::1;:31;::::0;;;;;;;:44;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;68568:25:79::1;::::0;68585:7;;68568:25:::1;::::0;;;::::1;68603:38;3391:142:0::0;31925:2030:79;32199:7;3507:29;3528:7;3507:20;:29::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;32250:9:79::1;32246:262;;;32283:35;32298:7;32307:10;32283:14;:35::i;:::-;32275:43;;32246:262;;;75559:4:::0;75582:28;;;:19;:28;;;;;;;;-1:-1:-1;;;;;75582:42:79;;;;;;;;;:51;;;;;;;;;:56;32349:98:::1;;32425:22;;-1:-1:-1::0;;;32425:22:79::1;;;;;;;;;;;32349:98;32469:28;32477:7;32486:10;32469:7;:28::i;:::-;32461:36;;32246:262;32517:49;32537:5;32544:12;32558:7;32517:19;:49::i;:::-;32755:9;32751:246;;;32800:25;::::0;;;:16:::1;:25;::::0;;;;32780:58:::1;::::0;32827:10;32780:19:::1;:58::i;:::-;32751:246;;;-1:-1:-1::0;;;;;32876:30:79;::::1;;::::0;;;:16:::1;:30;::::0;;;;;;;:39;;;;;;;;32869:46;;;32949:24;;;:15:::1;:24:::0;;;;;32929:57:::1;::::0;32975:10;32929:19:::1;:57::i;:::-;-1:-1:-1::0;;;;;33011:16:79;::::1;::::0;33007:583:::1;;33047:13:::0;33043:537:::1;;33094:170;::::0;-1:-1:-1;;;33094:170:79;;-1:-1:-1;;;;;33094:38:79;::::1;::::0;::::1;::::0;:170:::1;::::0;33162:4:::1;::::0;33189:2;;33213:7;;33242:4;;33094:170:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;33043:537;;;33353:21;::::0;::::1;::::0;33473:13;;33344:221:::1;::::0;-1:-1:-1;;;33344:221:79;;-1:-1:-1;;;;;33344:48:79;;::::1;::::0;::::1;::::0;:221:::1;::::0;33422:4:::1;::::0;33449:2;;33508:13;;33543:4;;33344:221:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;33043:537;33605:171;::::0;;25238:25:98;;;25306:14;;25299:22;25294:2;25279:18;;25272:50;-1:-1:-1;;;;;33750:16:79;;::::1;::::0;25338:18:98;;;25331:50;33605:171:79;;33706:7;;33605:171;::::1;::::0;33635:7;;33605:171:::1;::::0;;;;25226:2:98;33605:171:79;;::::1;32208:1747;31925:2030:::0;;;;;;;;;:::o;71002:207::-;71092:7;71111:23;71126:7;71111:14;:23::i;:::-;71151:33;;;;:24;:33;;;;;;71185:16;71176:7;71185;:16::i;66797:667::-;66928:7;61740:38;61770:7;61740:29;:38::i;:::-;66947:11:::1;66961:23:::0;;;:14:::1;:23;::::0;;;;:30;67005:19;;::::1;67001:62;;;67033:30;;-1:-1:-1::0;;;67033:30:79::1;;;;;;;;;;;67001:62;67121:9;67116:211;67136:3;67132:1;:7;67116:211;;;67157:14;67174:23:::0;;;:14:::1;:23;::::0;;;;:26;;67198:1;;67174:26;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;::::1;;::::0;67221:27;;;:18:::1;:27:::0;;;;;;67174:26;;;;::::1;;;;::::0;;::::1;-1:-1:-1::0;;;;;67174:26:79::1;67221:36:::0;;;;;;;67214:43;;-1:-1:-1;;67214:43:79::1;::::0;;-1:-1:-1;;67299:3:79::1;67116:211;;;-1:-1:-1::0;67344:23:79::1;::::0;;;:14:::1;:23;::::0;;;;67336:32:::1;::::0;::::1;:::i;:::-;67384:33;::::0;67414:1:::1;::::0;67398:7;;67384:33:::1;::::0;67414:1;;67384:33:::1;67427:30;3085:167:96::0;29356:255:79;29527:8;3507:29;3528:7;3507:20;:29::i;:::-;29547:57:::1;29560:8;29570:10;29582:12;29596:7;29547:12;:57::i;2737:187:74:-:0;1691:12;:10;:12::i;:::-;-1:-1:-1;;;;;2821:22:74;::::1;2817:62;;2852:27;;-1:-1:-1::0;;;2852:27:74::1;;;;;;;;;;;2817:62;2889:28;2908:8;2889:18;:28::i;17965:321:79:-:0;18048:7;18109:20;;;:11;:20;;;;;;;;18082:47;;;;;;;;;;;;;;;-1:-1:-1;;;;;18082:47:79;;;;;;;18048:7;;;;18082:47;18139:67;;18184:22;;-1:-1:-1;;;18184:22:79;;;;;;;;;;;18139:67;18225:18;;;;18245:13;;18225:18;;18245:13;;-1:-1:-1;18260:18:79;;;;-1:-1:-1;17965:321:79;-1:-1:-1;;17965:321:79:o;63174:206::-;63317:7;61740:38;61770:7;61740:29;:38::i;:::-;63336:37:::1;63349:7;63358:5;63365:7;63336:12;:37::i;61845:408::-:0;61944:4;-1:-1:-1;;;;;;61979:40:79;;-1:-1:-1;;;61979:40:79;;:96;;-1:-1:-1;;;;;;;62035:40:79;;-1:-1:-1;;;62035:40:79;61979:96;:153;;;-1:-1:-1;;;;;;;62091:41:79;;-1:-1:-1;;;62091:41:79;61979:153;:210;;;-1:-1:-1;;;;;;;62148:41:79;;-1:-1:-1;;;62148:41:79;61979:210;:267;;;-1:-1:-1;;;;;;;62205:41:79;;-1:-1:-1;;;62205:41:79;61960:286;61845:408;-1:-1:-1;;61845:408:79:o;4026:546::-;4104:13;4119:16;4141:22;4155:7;4141:13;:22::i;:::-;4103:60;;;;;4301:8;4313:1;4301:13;;:38;;;;-1:-1:-1;719:10:72;-1:-1:-1;;;;;4318:21:79;;;;4301:38;4300:193;;;-1:-1:-1;719:10:72;-1:-1:-1;;;;;4358:21:79;;;;:78;;-1:-1:-1;4399:37:79;4416:5;719:10:72;24098:175:79;:::i;4399:37::-;4358:134;;;-1:-1:-1;719:10:72;4456:20:79;4468:7;4456:11;:20::i;:::-;-1:-1:-1;;;;;4456:36:79;;4358:134;4356:137;4300:193;4283:283;;;4525:30;;-1:-1:-1;;;4525:30:79;;;;;;;;;;;13189:1039;13342:9;13337:847;1221:3;13353:1;:45;13337:847;;;13434:17;13469:24;13511:10;13547:14;-1:-1:-1;;;;;13538:38:79;;13577:8;13538:48;;;;;;;;;;;;;160:25:98;;148:2;133:18;;14:177;13538:48:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13416:170;;;;;;13677:5;13672:51;;13702:7;;;;13189:1039;;;:::o;13672:51::-;-1:-1:-1;;;;;13833:26:79;;13854:4;13833:26;:59;;;;;13883:9;13863:16;:29;13833:59;13829:139;;;13919:34;;-1:-1:-1;;;13919:34:79;;;;;;;;;;;13829:139;-1:-1:-1;14064:9:79;;-1:-1:-1;14098:16:79;-1:-1:-1;14156:3:79;;13337:847;;;;14200:21;;-1:-1:-1;;;14200:21:79;;;;;;;;;;;4036:306:95;-1:-1:-1;;;;;4234:16:95;;4230:106;;4294:12;:17;;-1:-1:-1;;4294:17:95;;;4036:306;;;:::o;25157:398:79:-;25320:89;;;;;;;;;;;-1:-1:-1;;;;;25320:89:79;;;;;;;;;;-1:-1:-1;25297:20:79;;;:11;:20;;;;;;:112;;;;;;;;;;;-1:-1:-1;;;;;;25297:112:79;;;;;;;;;;;25471:29;;25297:20;25471:8;:29::i;:::-;25510:38;25536:1;25540:7;25510:17;:38::i;11932:629::-;12173:51;;-1:-1:-1;;;12173:51:79;;12160:2;;-1:-1:-1;;;;;12173:21:79;;;;;:51;;12195:13;;12210:7;;12219:4;;12173:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12259:7;12255:2;-1:-1:-1;;;;;12240:27:79;12249:4;-1:-1:-1;;;;;12240:27:79;-1:-1:-1;;;;;;;;;;;12240:27:79;;;;;;;;;12330:7;12301:2;-1:-1:-1;;;;;12282:56:79;12295:4;-1:-1:-1;;;;;12282:56:79;-1:-1:-1;;;;;;;;;;;12305:8:79;12315:13;12282:56;;;;;;23459:25:98;;;23515:2;23500:18;;23493:34;23447:2;23432:18;;23285:248;12282:56:79;;;;;;;;12117:444;11932:629;;;;;;:::o;1241:361:84:-;1374:8;;1332:7;;;;;1392:177;1412:6;1408:1;:10;1392:177;;;1448:1;-1:-1:-1;;;;;1440:9:84;:1;1442;1440:4;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1440:9:84;;1436:64;;1477:1;-1:-1:-1;1480:4:84;;-1:-1:-1;1469:16:84;;-1:-1:-1;1469:16:84;1436:64;1541:3;;1392:177;;;;1586:1;1589:5;1578:17;;;;;1241:361;;;;;;:::o;26164:132:79:-;26678:4;26701:20;;;:11;:20;;;;;:33;;;-1:-1:-1;;;;;26701:33:79;26237:52;;26267:22;;-1:-1:-1;;;26267:22:79;;;;;;;;;;;24542:202;24616:13;24632:16;24640:7;24632;:16::i;:::-;24658:24;;;;:15;:24;;;;;;;;-1:-1:-1;;;;;24658:31:79;;;;;;;;;;;;;:36;;-1:-1:-1;;;;;;24658:36:79;;;;;;;;;24709:28;;24658:31;;-1:-1:-1;24658:24:79;;:36;;:31;;24709:28;;24658:24;24709:28;24606:138;24542:202;;:::o;4693:172:74:-;2084:6;;-1:-1:-1;;;;;2084:6:74;719:10:72;4755:23:74;;;;:55;;-1:-1:-1;4783:27:74;719:10:72;4797:12:74;640:96:72;4783:27:74;4782:28;4755:55;4751:107;;;4831:27;;-1:-1:-1;;;4831:27:74;;;;;;;;;;;3592:452:96;3673:17;;3733:9;3729:50;;3765:14;;-1:-1:-1;;;3765:14:96;;;;;;;;;;;3729:50;3815:10;;3805:7;;3793:19;;:9;:19;:::i;:::-;:32;3789:62;;;3834:17;;-1:-1:-1;;;3834:17:96;;;;;;;;;;;3789:62;-1:-1:-1;;3898:7:96;;;3923:20;;;;;;;3957:12;:25;;;;;;;;3908:1;3898:11;;;;4016;;;3592:452::o;850:151:97:-;963:19;;;;:10;:19;;;;;:31;985:9;963:19;:31;:::i;15599:540:79:-;-1:-1:-1;;;;;15834:13:79;;1702:19:71;15829:48:79;;15858:19;;-1:-1:-1;;;15858:19:79;;;;;;;;;;;15829:48;15892:57;;-1:-1:-1;;;15892:57:79;;-1:-1:-1;;;15892:57:79;;;15613:52:98;-1:-1:-1;;;;;15892:29:79;;;;;15586:18:98;;15892:57:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15887:121;;15970:38;;-1:-1:-1;;;15970:38:79;;;;;;;;;;;15887:121;16019:44;16030:2;16034:7;16043:13;16058:4;16019:10;:44::i;:::-;16073:59;16092:1;16096:2;16100:1;16103:13;16118:7;16127:4;16073:10;:59::i;5023:102:74:-;2084:6;;-1:-1:-1;;;;;2084:6:74;719:10:72;5072:23:74;5068:50;;5104:14;;-1:-1:-1;;;5104:14:74;;;;;;;;;;;53405:949:79;53553:21;;;;:12;:21;;;;;;;;-1:-1:-1;;;;;53553:30:79;;;;;;;;;;;;53549:67;;;53592:24;;-1:-1:-1;;;53592:24:79;;;;;;;;;;;53549:67;-1:-1:-1;;;;;53637:16:79;;53673:1;53637:16;;;:7;:16;;;;;53631:30;;;;;:::i;:::-;;;:44;53627:92;;53696:23;;-1:-1:-1;;;53696:23:79;;;;;;;;;;;53627:92;53734:23;;;;:14;:23;;;;;:30;53768:3;-1:-1:-1;53730:91:79;;53792:29;;-1:-1:-1;;;53792:29:79;;;;;;;;;;;53730:91;53903:21;;;;:12;:21;;;;;;;;-1:-1:-1;;;;;53903:30:79;;;;;;;;;;;;:37;;53936:4;-1:-1:-1;;53903:37:79;;;;;;;;53950:23;;;:14;:23;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;53903;53950;;;;;;;;;;;;;;;;54002:32;;;53998:121;;54050:27;;;;:18;:27;;;;;;;;-1:-1:-1;;;;;54050:36:79;;;;;;;;;;:58;;-1:-1:-1;;54050:58:79;;;;;;;;;;53998:121;54157:16;;;54171:1;54157:16;;;;;;;;;54129:25;;54157:16;;;;;;;;;;;-1:-1:-1;54157:16:79;54129:44;;54197:7;54183:8;54192:1;54183:11;;;;;;;;:::i;:::-;;;;;;:21;;;;;54257:19;-1:-1:-1;;;;;54219:58:79;54248:7;-1:-1:-1;;;;;54219:58:79;;54238:8;54219:58;;;;;;:::i;:::-;;;;;;;;54287:60;54309:7;54318;54327:19;54287:21;:60::i;61009:352::-;61089:13;61105:16;61113:7;61105;:16::i;:::-;61089:32;-1:-1:-1;719:10:72;-1:-1:-1;;;;;61150:21:79;;;;:87;;-1:-1:-1;61191:46:79;61217:5;719:10:72;50122:193:79;:::i;61191:46::-;61150:152;;;-1:-1:-1;719:10:72;61257:29:79;61278:7;61257:20;:29::i;:::-;-1:-1:-1;;;;;61257:45:79;;61150:152;61131:223;;61321:33;;-1:-1:-1;;;61321:33:79;;;;;;;;;;;51115:330;51267:23;;;;:14;:23;;;;;:30;51258:39;;51254:85;;51318:21;;-1:-1:-1;;;51318:21:79;;;;;;;;;;;51254:85;51364:23;;;;:14;:23;;;;;:30;;51388:5;;51364:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;51364:30:79;-1:-1:-1;;;;;51353:41:79;:7;-1:-1:-1;;;;;51353:41:79;;51349:89;;51415:23;;-1:-1:-1;;;51415:23:79;;;;;;;;;;;51749:233;51874:23;;;;:14;:23;;;;;:48;;51916:5;51874:41;:48::i;:::-;51939:27;;;;:18;:27;;;;;;;;-1:-1:-1;;;;;51939:36:79;;;;;;;;;;;51932:43;;-1:-1:-1;;51932:43:79;;;-1:-1:-1;51749:233:79:o;10377:834::-;10524:22;10548:16;10570:22;10584:7;10570:13;:22::i;:::-;10523:69;;;;;10624:4;-1:-1:-1;;;;;10606:22:79;:14;-1:-1:-1;;;;;10606:22:79;;10602:69;;10637:34;;-1:-1:-1;;;10637:34:79;;;;;;;;;;;10602:69;-1:-1:-1;;;;;10685:16:79;;10681:61;;10710:32;;-1:-1:-1;;;10710:32:79;;;;;;;;;;;10681:61;10753:39;10774:4;10780:2;10784:7;10753:20;:39::i;:::-;-1:-1:-1;;;;;10877:15:79;;;;;;:9;:15;;;;;:20;;10896:1;;10877:15;:20;;10896:1;;10877:20;:::i;:::-;;;;-1:-1:-1;10907:45:79;;-1:-1:-1;10937:7:79;10946:1;10949:2;10907:29;:45::i;:::-;-1:-1:-1;;;;;10962:13:79;;;;;;:9;:13;;;;;:18;;10979:1;;10962:13;:18;;10979:1;;10962:18;:::i;:::-;;;;-1:-1:-1;;10996:27:79;;11015:7;;-1:-1:-1;;;;;10996:27:79;;;;;;;;-1:-1:-1;;;;;;;;;;;10996:27:79;;;;11074:7;11057:2;-1:-1:-1;;;;;11038:44:79;11051:4;-1:-1:-1;;;;;11038:44:79;-1:-1:-1;;;;;;;;;;;11061:8:79;11071:1;11038:44;;;;;;23459:25:98;;;23515:2;23500:18;;23493:34;23447:2;23432:18;;23285:248;69307:498:79;69517:31;69532:2;69536:11;69517:14;:31::i;:::-;-1:-1:-1;;;;;69563:28:79;;;:51;;;;-1:-1:-1;69595:14:79;;:19;;69563:51;69559:105;;;69635:29;;-1:-1:-1;;;69635:29:79;;;;;;;;;;;69559:105;-1:-1:-1;;;;;69675:21:79;;;;;;;:17;:21;;;;;;;;:38;;-1:-1:-1;;;;;;69675:38:79;-1:-1:-1;;;;;69675:38:79;;;;;69723:19;:23;;;;;:43;;-1:-1:-1;;69723:43:79;;;;;;;;;;;69776:8;:12;;;;;:22;;;;;;;;:::i;52392:390::-;-1:-1:-1;;;;;52507:15:79;;52503:49;;52531:21;;-1:-1:-1;;;52531:21:79;;;;;;;;;;;52503:49;-1:-1:-1;;;;;52572:11:79;;52594:1;52572:11;;;:7;:11;;;;;52566:25;;;;;:::i;:::-;;;:29;52562:66;;;52604:24;;-1:-1:-1;;;52604:24:79;;;;;;;;;;;52562:66;-1:-1:-1;;;;;52681:11:79;;;;;;:7;:11;;;;;:25;52695:11;52681;:25;:::i;:::-;-1:-1:-1;52722:12:79;;-1:-1:-1;;;;;52722:12:79;;;;;;;;3391:142:0;;:::o;2935:262:89:-;1873:1;3055:7;;:19;3051:46;;3083:14;;-1:-1:-1;;;3083:14:89;;;;;;;;;;;3051:46;1873:1;3172:18;;2935:262::o;74122:236:79:-;-1:-1:-1;;;;;74251:17:79;;74237:10;74251:17;;;:8;:17;;;;;;;;:25;;;;;;;;;;;;;;;;;:37;;74277:10;;74251:25;:17;:25;;;:17;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;74251:25:79;-1:-1:-1;;;;;74251:25:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;;:::i;:::-;74234:54;;;74303:5;74298:53;;74317:34;;-1:-1:-1;;;74317:34:79;;;;;;;;;;;71451:229;71534:13;71550:16;71558:7;71550;:16::i;:::-;71576:33;;;;:24;:33;;;;;;;;-1:-1:-1;;;;;71576:40:79;;;;;;;;;;;;;:45;;-1:-1:-1;;;;;;71576:45:79;;;;;;;;;71636:37;;71576:40;;-1:-1:-1;71576:33:79;;:45;;:40;;71636:37;;71576:33;71636:37;71524:156;71451:229;;:::o;76299:490::-;-1:-1:-1;;;;;76471:30:79;;;;:57;;-1:-1:-1;;;;;;76505:23:79;;;76471:57;76467:103;;;76549:21;;-1:-1:-1;;;76549:21:79;;;;;;;;;;;76467:103;-1:-1:-1;;;;;76580:36:79;;;;;;;:17;:36;;;;;;;-1:-1:-1;;;;;76580:51:79;;;;;;;;;;;;:64;;-1:-1:-1;;76580:64:79;;;;;;;;;76659:123;4221:51:98;;;76659:123:79;;4194:18:98;76659:123:79;;;;;;;76299:490;;;:::o;3181:187:74:-;3273:6;;;-1:-1:-1;;;;;3289:17:74;;;-1:-1:-1;;;;;;3289:17:74;;;;;;;3321:40;;3273:6;;;3289:17;3273:6;;3321:40;;3254:16;;3321:40;3244:124;3181:187;:::o;2946:318:79:-;3017:13;3033:16;3041:7;3033;:16::i;:::-;3017:32;-1:-1:-1;719:10:72;-1:-1:-1;;;;;3078:21:79;;;;:78;;-1:-1:-1;3119:37:79;3136:5;719:10:72;24098:175:79;:::i;3119:37::-;3078:134;;;-1:-1:-1;719:10:72;3176:20:79;3188:7;3176:11;:20::i;:::-;-1:-1:-1;;;;;3176:36:79;;3078:134;3059:198;;3231:26;;-1:-1:-1;;;3231:26:79;;;;;;;;;;;27298:953;27447:4;-1:-1:-1;;;;;27467:13:79;;1702:19:71;:23;27463:782:79;;27518:169;;-1:-1:-1;;;27518:169:79;;-1:-1:-1;;;;;27518:36:79;;;;;:169;;719:10:72;;27610:4:79;;27636:7;;27665:4;;27518:169;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27518:169:79;;;;;;;;-1:-1:-1;;27518:169:79;;;;;;;;;;;;:::i;:::-;;;27498:695;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27866:13:79;;27862:317;;27924:40;;-1:-1:-1;;;27924:40:79;;;;;;;;;;;27862:317;28131:6;28125:13;28116:6;28112:2;28108:15;28101:38;27498:695;-1:-1:-1;;;;;;27749:51:79;-1:-1:-1;;;27749:51:79;;-1:-1:-1;27742:58:79;;27463:782;-1:-1:-1;28230:4:79;28223:11;;14662:526;14786:32;14797:2;14801:7;14810:1;14813:4;14786:10;:32::i;:::-;14834:33;;14859:7;;-1:-1:-1;;;;;14834:33:79;;;14851:1;;-1:-1:-1;;;;;;;;;;;14834:33:79;14851:1;;14834:33;14882:43;;;14903:1;23459:25:98;;;23515:2;23500:18;;23493:34;;;14917:7:79;;-1:-1:-1;;;;;14882:43:79;;;-1:-1:-1;;;;;;;;;;;14882:43:79;23432:18:98;14882:43:79;;;;;;;15067:53;15098:1;15102:2;15106:7;15115:4;15067:22;:53::i;:::-;15062:119;;15141:40;;-1:-1:-1;;;15141:40:79;;;;;;;;;;;34405:295;34588:5;:21;;;-1:-1:-1;;;;;34569:40:79;:15;-1:-1:-1;;;;;34569:40:79;;;:83;;;-1:-1:-1;34639:13:79;;34625:27;;;34569:83;34552:141;;;34670:23;;-1:-1:-1;;;34670:23:79;;;;;;;;;;;47657:151;47763:12;;47757:5;;47763:16;;47778:1;;47763:16;:::i;:::-;47757:23;;;;;;;;:::i;:::-;;;;;;;;;;;47742:5;47748;47742:12;;;;;;;;:::i;:::-;;;;;;;;;:38;;:12;;;;;:38;;;;;;;;;;;;-1:-1:-1;;;;;;47742:38:79;-1:-1:-1;;;;;47742:38:79;;;;;;;;;47790:11;;:5;;:11;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;47790:11:79;;;;;;;;;;;;;;-1:-1:-1;;;;;;47790:11:79;;;;;-1:-1:-1;;47657:151:79:o;30539:860::-;30703:18;30724:36;30739:8;30749:10;30724:14;:36::i;:::-;30703:57;;30770:49;30790:5;30797:12;30811:7;30770:19;:49::i;:::-;-1:-1:-1;;;;;30833:30:79;;;;;;:16;:30;;;;;;;;:39;;;;;;;;;:44;30829:93;;30898:24;;-1:-1:-1;;;30898:24:79;;;;;;;;;;;30829:93;31059:26;;;;:16;:26;;;;;31039:59;;31087:10;31039:19;:59::i;:::-;31135:25;;;;:15;:25;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;31135:37:79;-1:-1:-1;;;;;31135:37:79;;;;;;31182:30;;;;;:16;:30;;;;;:39;;;;;;;;;:43;31261:58;160:25:98;;;31182:39:79;;:30;31135:25;;31261:58;;133:18:98;31261:58:79;;;;;;;31330:62;65729:476;63793:1295;63920:53;63949:7;63958:5;63965:7;63920:28;:53::i;:::-;64037:17;64057:27;;;:18;:27;;;;;;;;-1:-1:-1;;;;;64057:36:79;;;;;;;;;;;;64037:17;64164:23;;64160:144;;64232:72;64280:10;64232:13;:22;64246:7;64232:22;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;64232:30:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;:72;;;;:::i;:::-;64201:103;;-1:-1:-1;64201:103:79;-1:-1:-1;64160:144:79;64319:12;64315:602;;;64485:22;;;;:13;:22;;;;;:36;;64524:7;;64485:22;64508:12;;64485:36;;;;;;:::i;:::-;;;;;;;;;;;;;:46;;:36;;;;;;:46;;-1:-1:-1;;;;;64485:46:79;;;;;;;;;;;;;;;;;;64552:21;;;:12;:21;;;;;;:33;;;;;;;;64545:40;;-1:-1:-1;;64545:40:79;;;64315:602;;;64715:31;;;;:22;:31;;;;;;;;64776:13;:22;;;;;:29;;64715:105;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;64715:105:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64834:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64715:31;-1:-1:-1;64315:602:79;64926:44;64946:7;64955:5;64962:7;64926:19;:44::i;:::-;65018:10;-1:-1:-1;;;;;64986:43:79;65009:7;-1:-1:-1;;;;;64986:43:79;65000:7;64986:43;;;;;;;;;;65039:42;22093:353;16690:715;-1:-1:-1;;;;;16841:16:79;;16837:57;;16866:28;;-1:-1:-1;;;16866:28:79;;;;;;;;;;;16837:57;26678:4;26701:20;;;:11;:20;;;;;:33;;;-1:-1:-1;;;;;26701:33:79;:47;16904:55;;16933:26;;-1:-1:-1;;;16933:26:79;;;;;;;;;;;16904:55;16973:7;16969:55;;17003:21;;-1:-1:-1;;;17003:21:79;;;;;;;;;;;16969:55;17035:45;17064:1;17068:2;17072:7;17035:20;:45::i;:::-;-1:-1:-1;;;;;17258:13:79;;;;;;:9;:13;;;;;:18;;17275:1;;17258:13;:18;;17275:1;;17258:18;:::i;:::-;;;;-1:-1:-1;;17309:89:79;;;;;;;;;;;-1:-1:-1;;;;;17309:89:79;;;;;;;;;;-1:-1:-1;17286:20:79;;;:11;:20;;;;:112;;;;-1:-1:-1;17286:112:79;;;;;;;;-1:-1:-1;;;;;;17286:112:79;;;;;;;;16690:715::o;4348:704:95:-;4862:22;;;;:13;:22;;;;;:29;:34;;:82;;;4928:16;4936:7;4928;:16::i;:::-;-1:-1:-1;;;;;4912:32:95;719:10:72;-1:-1:-1;;;;;4912:32:95;;4862:82;4845:201;;;4991:23;;;;:14;:23;;;;;:30;4969:66;;4982:7;;4991:34;;5024:1;;4991:34;:::i;:::-;5027:7;4969:12;:66::i;489:262:84:-;662:12;;654:20;;646:29;;;;;;706:12;;700:5;;706:16;;721:1;;706:16;:::i;:::-;700:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;700:23:84;685:5;691;685:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:38;;;;;-1:-1:-1;;;;;685:38:84;;;;;-1:-1:-1;;;;;685:38:84;;;;;;733:5;:11;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;733:11:84;;;;;;;;;-1:-1:-1;;;;;733:11:84;;;;;;;;;;;;;;-1:-1:-1;;489:262:84:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:131:98;-1:-1:-1;;;;;;270:32:98;;260:43;;250:71;;317:1;314;307:12;332:245;390:6;443:2;431:9;422:7;418:23;414:32;411:52;;;459:1;456;449:12;411:52;498:9;485:23;517:30;541:5;517:30;:::i;:::-;566:5;332:245;-1:-1:-1;;;332:245:98:o;774:131::-;-1:-1:-1;;;;;849:31:98;;839:42;;829:70;;895:1;892;885:12;910:127;971:10;966:3;962:20;959:1;952:31;1002:4;999:1;992:15;1026:4;1023:1;1016:15;1042:275;1113:2;1107:9;1178:2;1159:13;;-1:-1:-1;;1155:27:98;1143:40;;-1:-1:-1;;;;;1198:34:98;;1234:22;;;1195:62;1192:88;;;1260:18;;:::i;:::-;1296:2;1289:22;1042:275;;-1:-1:-1;1042:275:98:o;1322:530::-;1364:5;1417:3;1410:4;1402:6;1398:17;1394:27;1384:55;;1435:1;1432;1425:12;1384:55;1471:6;1458:20;-1:-1:-1;;;;;1493:2:98;1490:26;1487:52;;;1519:18;;:::i;:::-;1563:55;1606:2;1587:13;;-1:-1:-1;;1583:27:98;1612:4;1579:38;1563:55;:::i;:::-;1643:2;1634:7;1627:19;1689:3;1682:4;1677:2;1669:6;1665:15;1661:26;1658:35;1655:55;;;1706:1;1703;1696:12;1655:55;1771:2;1764:4;1756:6;1752:17;1745:4;1736:7;1732:18;1719:55;1819:1;1794:16;;;1812:4;1790:27;1783:38;;;;1798:7;1322:530;-1:-1:-1;;;1322:530:98:o;1857:734::-;1961:6;1969;1977;1985;1993;2046:3;2034:9;2025:7;2021:23;2017:33;2014:53;;;2063:1;2060;2053:12;2014:53;2102:9;2089:23;2121:31;2146:5;2121:31;:::i;:::-;2171:5;-1:-1:-1;2228:2:98;2213:18;;2200:32;2241:33;2200:32;2241:33;:::i;:::-;2293:7;-1:-1:-1;2347:2:98;2332:18;;2319:32;;-1:-1:-1;2398:2:98;2383:18;;2370:32;;-1:-1:-1;2453:3:98;2438:19;;2425:33;-1:-1:-1;;;;;2470:30:98;;2467:50;;;2513:1;2510;2503:12;2467:50;2536:49;2577:7;2568:6;2557:9;2553:22;2536:49;:::i;:::-;2526:59;;;1857:734;;;;;;;;:::o;2596:423::-;2638:3;2676:5;2670:12;2703:6;2698:3;2691:19;2728:1;2738:162;2752:6;2749:1;2746:13;2738:162;;;2814:4;2870:13;;;2866:22;;2860:29;2842:11;;;2838:20;;2831:59;2767:12;2738:162;;;2742:3;2945:1;2938:4;2929:6;2924:3;2920:16;2916:27;2909:38;3008:4;3001:2;2997:7;2992:2;2984:6;2980:15;2976:29;2971:3;2967:39;2963:50;2956:57;;;2596:423;;;;:::o;3024:220::-;3173:2;3162:9;3155:21;3136:4;3193:45;3234:2;3223:9;3219:18;3211:6;3193:45;:::i;3249:171::-;3316:20;;-1:-1:-1;;;;;3365:30:98;;3355:41;;3345:69;;3410:1;3407;3400:12;3425:460;3509:6;3517;3525;3533;3586:3;3574:9;3565:7;3561:23;3557:33;3554:53;;;3603:1;3600;3593:12;3554:53;3642:9;3629:23;3661:31;3686:5;3661:31;:::i;:::-;3711:5;-1:-1:-1;3763:2:98;3748:18;;3735:32;;-1:-1:-1;3786:37:98;3819:2;3804:18;;3786:37;:::i;:::-;3776:47;;3842:37;3875:2;3864:9;3860:18;3842:37;:::i;:::-;3832:47;;3425:460;;;;;;;:::o;3890:180::-;3949:6;4002:2;3990:9;3981:7;3977:23;3973:32;3970:52;;;4018:1;4015;4008:12;3970:52;-1:-1:-1;4041:23:98;;3890:180;-1:-1:-1;3890:180:98:o;4283:315::-;4351:6;4359;4412:2;4400:9;4391:7;4387:23;4383:32;4380:52;;;4428:1;4425;4418:12;4380:52;4467:9;4454:23;4486:31;4511:5;4486:31;:::i;:::-;4536:5;4588:2;4573:18;;;;4560:32;;-1:-1:-1;;;4283:315:98:o;4603:593::-;4699:6;4707;4715;4723;4776:3;4764:9;4755:7;4751:23;4747:33;4744:53;;;4793:1;4790;4783:12;4744:53;4832:9;4819:23;4851:31;4876:5;4851:31;:::i;:::-;4901:5;-1:-1:-1;4953:2:98;4938:18;;4925:32;;-1:-1:-1;5004:2:98;4989:18;;4976:32;;-1:-1:-1;5059:2:98;5044:18;;5031:32;-1:-1:-1;;;;;5075:30:98;;5072:50;;;5118:1;5115;5108:12;5072:50;5141:49;5182:7;5173:6;5162:9;5158:22;5141:49;:::i;:::-;5131:59;;;4603:593;;;;;;;:::o;5201:247::-;5260:6;5313:2;5301:9;5292:7;5288:23;5284:32;5281:52;;;5329:1;5326;5319:12;5281:52;5368:9;5355:23;5387:31;5412:5;5387:31;:::i;5453:389::-;5531:6;5539;5592:2;5580:9;5571:7;5567:23;5563:32;5560:52;;;5608:1;5605;5598:12;5560:52;5644:9;5631:23;5621:33;;5705:2;5694:9;5690:18;5677:32;-1:-1:-1;;;;;5724:6:98;5721:30;5718:50;;;5764:1;5761;5754:12;5718:50;5787:49;5828:7;5819:6;5808:9;5804:22;5787:49;:::i;:::-;5777:59;;;5453:389;;;;;:::o;5847:324::-;5922:6;5930;5938;5991:2;5979:9;5970:7;5966:23;5962:32;5959:52;;;6007:1;6004;5997:12;5959:52;6043:9;6030:23;6020:33;;6072:37;6105:2;6094:9;6090:18;6072:37;:::i;:::-;6062:47;;6128:37;6161:2;6150:9;6146:18;6128:37;:::i;:::-;6118:47;;5847:324;;;;;:::o;6176:388::-;6244:6;6252;6305:2;6293:9;6284:7;6280:23;6276:32;6273:52;;;6321:1;6318;6311:12;6273:52;6360:9;6347:23;6379:31;6404:5;6379:31;:::i;:::-;6429:5;-1:-1:-1;6486:2:98;6471:18;;6458:32;6499:33;6458:32;6499:33;:::i;:::-;6551:7;6541:17;;;6176:388;;;;;:::o;6569:320::-;6645:6;6653;6661;6714:2;6702:9;6693:7;6689:23;6685:32;6682:52;;;6730:1;6727;6720:12;6682:52;6766:9;6753:23;6743:33;;6823:2;6812:9;6808:18;6795:32;6785:42;;6846:37;6879:2;6868:9;6864:18;6846:37;:::i;6894:456::-;6971:6;6979;6987;7040:2;7028:9;7019:7;7015:23;7011:32;7008:52;;;7056:1;7053;7046:12;7008:52;7095:9;7082:23;7114:31;7139:5;7114:31;:::i;:::-;7164:5;-1:-1:-1;7221:2:98;7206:18;;7193:32;7234:33;7193:32;7234:33;:::i;:::-;6894:456;;7286:7;;-1:-1:-1;;;7340:2:98;7325:18;;;;7312:32;;6894:456::o;7355:716::-;7408:5;7461:3;7454:4;7446:6;7442:17;7438:27;7428:55;;7479:1;7476;7469:12;7428:55;7515:6;7502:20;7541:4;-1:-1:-1;;;;;7560:2:98;7557:26;7554:52;;;7586:18;;:::i;:::-;7632:2;7629:1;7625:10;7655:28;7679:2;7675;7671:11;7655:28;:::i;:::-;7717:15;;;7787;;;7783:24;;;7748:12;;;;7819:15;;;7816:35;;;7847:1;7844;7837:12;7816:35;7883:2;7875:6;7871:15;7860:26;;7895:147;7911:6;7906:3;7903:15;7895:147;;;7977:22;7995:3;7977:22;:::i;:::-;7965:35;;7928:12;;;;8020;;;;7895:147;;;8060:5;7355:716;-1:-1:-1;;;;;;;7355:716:98:o;8076:774::-;8195:6;8203;8211;8219;8272:3;8260:9;8251:7;8247:23;8243:33;8240:53;;;8289:1;8286;8279:12;8240:53;8312:28;8330:9;8312:28;:::i;:::-;8302:38;;8390:2;8379:9;8375:18;8362:32;8403:31;8428:5;8403:31;:::i;:::-;8453:5;-1:-1:-1;8509:2:98;8494:18;;8481:32;-1:-1:-1;;;;;8562:14:98;;;8559:34;;;8589:1;8586;8579:12;8559:34;8612:49;8653:7;8644:6;8633:9;8629:22;8612:49;:::i;:::-;8602:59;;8714:2;8703:9;8699:18;8686:32;8670:48;;8743:2;8733:8;8730:16;8727:36;;;8759:1;8756;8749:12;8727:36;;8782:62;8836:7;8825:8;8814:9;8810:24;8782:62;:::i;8855:248::-;8923:6;8931;8984:2;8972:9;8963:7;8959:23;8955:32;8952:52;;;9000:1;8997;8990:12;8952:52;-1:-1:-1;;9023:23:98;;;9093:2;9078:18;;;9065:32;;-1:-1:-1;8855:248:98:o;9564:242::-;9458:12;;9446:25;;9524:4;9513:16;;;9507:23;-1:-1:-1;;;;;9503:49:98;9487:14;;;9480:73;9746:2;9731:18;;9758:42;9387:172;9811:321;9880:6;9933:2;9921:9;9912:7;9908:23;9904:32;9901:52;;;9949:1;9946;9939:12;9901:52;9989:9;9976:23;-1:-1:-1;;;;;10014:6:98;10011:30;10008:50;;;10054:1;10051;10044:12;10008:50;10077:49;10118:7;10109:6;10098:9;10094:22;10077:49;:::i;10137:726::-;10226:6;10279:3;10267:9;10258:7;10254:23;10250:33;10247:53;;;10296:1;10293;10286:12;10247:53;10329:2;10323:9;10371:3;10363:6;10359:16;10441:6;10429:10;10426:22;-1:-1:-1;;;;;10393:10:98;10390:34;10387:62;10384:88;;;10452:18;;:::i;:::-;10492:10;10488:2;10481:22;;10540:9;10527:23;10519:6;10512:39;10612:2;10601:9;10597:18;10584:32;10579:2;10571:6;10567:15;10560:57;10650:37;10683:2;10672:9;10668:18;10650:37;:::i;:::-;10645:2;10637:6;10633:15;10626:62;10721:37;10754:2;10743:9;10739:18;10721:37;:::i;:::-;10716:2;10708:6;10704:15;10697:62;10793:38;10826:3;10815:9;10811:19;10793:38;:::i;:::-;10787:3;10775:16;;10768:64;10779:6;10137:726;-1:-1:-1;;;10137:726:98:o;10868:718::-;11087:2;11139:21;;;11209:13;;11112:18;;;11231:22;;;11058:4;;11087:2;11272;;11290:18;;;;11331:15;;;11058:4;11374:186;11388:6;11385:1;11382:13;11374:186;;;11437:43;11476:3;11467:6;11461:13;9458:12;;9446:25;;9524:4;9513:16;;;9507:23;-1:-1:-1;;;;;9503:49:98;9487:14;;9480:73;9387:172;11437:43;11500:12;;;;11535:15;;;;11410:1;11403:9;11374:186;;;-1:-1:-1;11577:3:98;;10868:718;-1:-1:-1;;;;;;;10868:718:98:o;11591:252::-;11658:6;11666;11719:2;11707:9;11698:7;11694:23;11690:32;11687:52;;;11735:1;11732;11725:12;11687:52;11771:9;11758:23;11748:33;;11800:37;11833:2;11822:9;11818:18;11800:37;:::i;11848:459::-;11900:3;11938:5;11932:12;11965:6;11960:3;11953:19;11991:4;12020:2;12015:3;12011:12;12004:19;;12057:2;12050:5;12046:14;12078:1;12088:194;12102:6;12099:1;12096:13;12088:194;;;12167:13;;-1:-1:-1;;;;;12163:38:98;12151:51;;12222:12;;;;12257:15;;;;12124:1;12117:9;12088:194;;;-1:-1:-1;12298:3:98;;11848:459;-1:-1:-1;;;;;11848:459:98:o;12312:614::-;12591:3;12580:9;12573:22;12554:4;12618:46;12659:3;12648:9;12644:19;12636:6;12618:46;:::i;:::-;-1:-1:-1;;;;;12700:31:98;;12695:2;12680:18;;12673:59;-1:-1:-1;;;;;12768:32:98;;12763:2;12748:18;;12741:60;12837:22;;;12832:2;12817:18;;12810:50;12877:43;12841:6;12905;12877:43;:::i;12931:258::-;13108:2;13097:9;13090:21;13071:4;13128:55;13179:2;13168:9;13164:18;13156:6;13128:55;:::i;13194:456::-;13280:6;13288;13296;13349:2;13337:9;13328:7;13324:23;13320:32;13317:52;;;13365:1;13362;13355:12;13317:52;13401:9;13388:23;13378:33;;13458:2;13447:9;13443:18;13430:32;13420:42;;13513:2;13502:9;13498:18;13485:32;-1:-1:-1;;;;;13532:6:98;13529:30;13526:50;;;13572:1;13569;13562:12;13526:50;13595:49;13636:7;13627:6;13616:9;13612:22;13595:49;:::i;:::-;13585:59;;;13194:456;;;;;:::o;13655:391::-;13730:6;13738;13746;13799:2;13787:9;13778:7;13774:23;13770:32;13767:52;;;13815:1;13812;13805:12;13767:52;13838:28;13856:9;13838:28;:::i;:::-;13828:38;;13916:2;13905:9;13901:18;13888:32;13929:31;13954:5;13929:31;:::i;14051:387::-;14127:6;14135;14143;14196:2;14184:9;14175:7;14171:23;14167:32;14164:52;;;14212:1;14209;14202:12;14164:52;14248:9;14235:23;14225:33;;14308:2;14297:9;14293:18;14280:32;14321:31;14346:5;14321:31;:::i;14959:118::-;15045:5;15038:13;15031:21;15024:5;15021:32;15011:60;;15067:1;15064;15057:12;15082:382;15147:6;15155;15208:2;15196:9;15187:7;15183:23;15179:32;15176:52;;;15224:1;15221;15214:12;15176:52;15263:9;15250:23;15282:31;15307:5;15282:31;:::i;:::-;15332:5;-1:-1:-1;15389:2:98;15374:18;;15361:32;15402:30;15361:32;15402:30;:::i;16283:665::-;16378:6;16386;16394;16402;16455:3;16443:9;16434:7;16430:23;16426:33;16423:53;;;16472:1;16469;16462:12;16423:53;16511:9;16498:23;16530:31;16555:5;16530:31;:::i;:::-;16580:5;-1:-1:-1;16637:2:98;16622:18;;16609:32;16650:33;16609:32;16650:33;:::i;:::-;16702:7;-1:-1:-1;16756:2:98;16741:18;;16728:32;;-1:-1:-1;16811:2:98;16796:18;;16783:32;-1:-1:-1;;;;;16827:30:98;;16824:50;;;16870:1;16867;16860:12;16953:524;17040:6;17048;17056;17109:2;17097:9;17088:7;17084:23;17080:32;17077:52;;;17125:1;17122;17115:12;17077:52;17164:9;17151:23;17183:31;17208:5;17183:31;:::i;:::-;17233:5;-1:-1:-1;17285:2:98;17270:18;;17257:32;;-1:-1:-1;17340:2:98;17325:18;;17312:32;-1:-1:-1;;;;;17356:30:98;;17353:50;;;17399:1;17396;17389:12;17482:414;17574:6;17582;17635:2;17623:9;17614:7;17610:23;17606:32;17603:52;;;17651:1;17648;17641:12;17603:52;17687:9;17674:23;17664:33;;17748:2;17737:9;17733:18;17720:32;-1:-1:-1;;;;;17767:6:98;17764:30;17761:50;;;17807:1;17804;17797:12;17761:50;17830:60;17882:7;17873:6;17862:9;17858:22;17830:60;:::i;17901:1008::-;18029:6;18037;18045;18053;18061;18069;18077;18085;18138:3;18126:9;18117:7;18113:23;18109:33;18106:53;;;18155:1;18152;18145:12;18106:53;18191:9;18178:23;18168:33;;18251:2;18240:9;18236:18;18223:32;18264:31;18289:5;18264:31;:::i;:::-;18314:5;-1:-1:-1;18366:2:98;18351:18;;18338:32;;-1:-1:-1;18417:2:98;18402:18;;18389:32;;-1:-1:-1;18473:3:98;18458:19;;18445:33;18487;18445;18487;:::i;:::-;18539:7;-1:-1:-1;18593:3:98;18578:19;;18565:33;;-1:-1:-1;18650:3:98;18635:19;;18622:33;18664:30;18622:33;18664:30;:::i;:::-;18713:7;-1:-1:-1;18771:3:98;18756:19;;18743:33;-1:-1:-1;;;;;18788:30:98;;18785:50;;;18831:1;18828;18821:12;18785:50;18854:49;18895:7;18886:6;18875:9;18871:22;18854:49;:::i;:::-;18844:59;;;17901:1008;;;;;;;;;;;:::o;19119:452::-;19205:6;19213;19221;19229;19282:3;19270:9;19261:7;19257:23;19253:33;19250:53;;;19299:1;19296;19289:12;19250:53;19335:9;19322:23;19312:33;;19392:2;19381:9;19377:18;19364:32;19354:42;;19446:2;19435:9;19431:18;19418:32;19459:31;19484:5;19459:31;:::i;:::-;19119:452;;;;-1:-1:-1;19509:5:98;;19561:2;19546:18;19533:32;;-1:-1:-1;;19119:452:98:o;19576:383::-;19653:6;19661;19669;19722:2;19710:9;19701:7;19697:23;19693:32;19690:52;;;19738:1;19735;19728:12;19690:52;19774:9;19761:23;19751:33;;19834:2;19823:9;19819:18;19806:32;19847:31;19872:5;19847:31;:::i;20324:245::-;20391:6;20444:2;20432:9;20423:7;20419:23;20415:32;20412:52;;;20460:1;20457;20450:12;20412:52;20492:9;20486:16;20511:28;20533:5;20511:28;:::i;20574:127::-;20635:10;20630:3;20626:20;20623:1;20616:31;20666:4;20663:1;20656:15;20690:4;20687:1;20680:15;20706:128;20773:9;;;20794:11;;;20791:37;;;20808:18;;:::i;20839:125::-;20904:9;;;20925:10;;;20922:36;;;20938:18;;:::i;20969:380::-;21048:1;21044:12;;;;21091;;;21112:61;;21166:4;21158:6;21154:17;21144:27;;21112:61;21219:2;21211:6;21208:14;21188:18;21185:38;21182:161;;21265:10;21260:3;21256:20;21253:1;21246:31;21300:4;21297:1;21290:15;21328:4;21325:1;21318:15;21182:161;;20969:380;;;:::o;21354:168::-;21427:9;;;21458;;21475:15;;;21469:22;;21455:37;21445:71;;21496:18;;:::i;21527:217::-;21567:1;21593;21583:132;;21637:10;21632:3;21628:20;21625:1;21618:31;21672:4;21669:1;21662:15;21700:4;21697:1;21690:15;21583:132;-1:-1:-1;21729:9:98;;21527:217::o;21749:127::-;21810:10;21805:3;21801:20;21798:1;21791:31;21841:4;21838:1;21831:15;21865:4;21862:1;21855:15;23029:251;23099:6;23152:2;23140:9;23131:7;23127:23;23123:32;23120:52;;;23168:1;23165;23158:12;23120:52;23200:9;23194:16;23219:31;23244:5;23219:31;:::i;23538:184::-;23608:6;23661:2;23649:9;23640:7;23636:23;23632:32;23629:52;;;23677:1;23674;23667:12;23629:52;-1:-1:-1;23700:16:98;;23538:184;-1:-1:-1;23538:184:98:o;23988:489::-;-1:-1:-1;;;;;24257:15:98;;;24239:34;;24309:15;;24304:2;24289:18;;24282:43;24356:2;24341:18;;24334:34;;;24404:3;24399:2;24384:18;;24377:31;;;24182:4;;24425:46;;24451:19;;24443:6;24425:46;:::i;:::-;24417:54;23988:489;-1:-1:-1;;;;;;23988:489:98:o;24482:561::-;-1:-1:-1;;;;;24779:15:98;;;24761:34;;24831:15;;24826:2;24811:18;;24804:43;24878:2;24863:18;;24856:34;;;24921:2;24906:18;;24899:34;;;24741:3;24964;24949:19;;24942:32;;;24704:4;;24991:46;;25017:19;;25009:6;24991:46;:::i;25392:440::-;25477:6;25485;25493;25546:2;25534:9;25525:7;25521:23;25517:32;25514:52;;;25562:1;25559;25552:12;25514:52;25594:9;25588:16;25613:31;25638:5;25613:31;:::i;:::-;25708:2;25693:18;;25687:25;25757:2;25742:18;;25736:25;25663:5;;-1:-1:-1;25687:25:98;-1:-1:-1;25770:30:98;25736:25;25770:30;:::i;:::-;25819:7;25809:17;;;25392:440;;;;;:::o;25837:360::-;26040:6;26029:9;26022:25;26083:6;26078:2;26067:9;26063:18;26056:34;26126:2;26121;26110:9;26106:18;26099:30;26003:4;26146:45;26187:2;26176:9;26172:18;26164:6;26146:45;:::i;:::-;26138:53;25837:360;-1:-1:-1;;;;;25837:360:98:o;26328:545::-;26430:2;26425:3;26422:11;26419:448;;;26466:1;26491:5;26487:2;26480:17;26536:4;26532:2;26522:19;26606:2;26594:10;26590:19;26587:1;26583:27;26577:4;26573:38;26642:4;26630:10;26627:20;26624:47;;;-1:-1:-1;26665:4:98;26624:47;26720:2;26715:3;26711:12;26708:1;26704:20;26698:4;26694:31;26684:41;;26775:82;26793:2;26786:5;26783:13;26775:82;;;26838:17;;;26819:1;26808:13;26775:82;;27049:1352;27175:3;27169:10;-1:-1:-1;;;;;27194:6:98;27191:30;27188:56;;;27224:18;;:::i;:::-;27253:97;27343:6;27303:38;27335:4;27329:11;27303:38;:::i;:::-;27297:4;27253:97;:::i;:::-;27405:4;;27469:2;27458:14;;27486:1;27481:663;;;;28188:1;28205:6;28202:89;;;-1:-1:-1;28257:19:98;;;28251:26;28202:89;-1:-1:-1;;27006:1:98;27002:11;;;26998:24;26994:29;26984:40;27030:1;27026:11;;;26981:57;28304:81;;27451:944;;27481:663;26275:1;26268:14;;;26312:4;26299:18;;-1:-1:-1;;27517:20:98;;;27635:236;27649:7;27646:1;27643:14;27635:236;;;27738:19;;;27732:26;27717:42;;27830:27;;;;27798:1;27786:14;;;;27665:19;;27635:236;;;27639:3;27899:6;27890:7;27887:19;27884:201;;;27960:19;;;27954:26;-1:-1:-1;;28043:1:98;28039:14;;;28055:3;28035:24;28031:37;28027:42;28012:58;27997:74;;27884:201;-1:-1:-1;;;;;28131:1:98;28115:14;;;28111:22;28098:36;;-1:-1:-1;27049:1352:98:o;28406:632::-;28577:2;28629:21;;;28699:13;;28602:18;;;28721:22;;;28548:4;;28577:2;28800:15;;;;28774:2;28759:18;;;28548:4;28843:169;28857:6;28854:1;28851:13;28843:169;;;28918:13;;28906:26;;28987:15;;;;28952:12;;;;28879:1;28872:9;28843:169;;29043:249;29112:6;29165:2;29153:9;29144:7;29140:23;29136:32;29133:52;;;29181:1;29178;29171:12;29133:52;29213:9;29207:16;29232:30;29256:5;29232:30;:::i;29566:127::-;29627:10;29622:3;29618:20;29615:1;29608:31;29658:4;29655:1;29648:15;29682:4;29679:1;29672:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "RMRK_INTERFACE()": "8d4f3bf5",
    "VERSION()": "ffa1ad74",
    "acceptAsset(uint256,uint256,uint64)": "fc3517c8",
    "acceptChild(uint256,uint256,address,uint256)": "e97ceaa8",
    "addAssetEntry(string)": "30ffb1d6",
    "addAssetToToken(uint256,uint64,uint64)": "1c7bb461",
    "addChild(uint256,uint256,bytes)": "635490cc",
    "addEquippableAssetEntry(uint64,address,string,uint64[])": "2452cd91",
    "approve(address,uint256)": "095ea7b3",
    "approveForAssets(address,uint256)": "5ea72f36",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burn(uint256,uint256)": "b390c0ab",
    "canTokenBeEquippedWithAssetIntoSlot(address,uint256,uint64,uint64)": "074334fb",
    "childOf(uint256,uint256)": "2f32f937",
    "childrenOf(uint256)": "6f19951c",
    "collectionMetadata()": "89ed2edf",
    "directOwnerOf(uint256)": "fb25fb7a",
    "equip((uint256,uint256,uint64,uint64,uint64))": "38dcf74c",
    "getActiveAssetPriorities(uint256)": "5e94354a",
    "getActiveAssets(uint256)": "7280281e",
    "getApproved(uint256)": "081812fc",
    "getApprovedForAssets(uint256)": "e467a48f",
    "getAssetAndEquippableData(uint256,uint64)": "4e60edba",
    "getAssetMetadata(uint256,uint64)": "5e2e3292",
    "getAssetReplacements(uint256,uint64)": "df6f556b",
    "getEquipment(uint256,address,uint64)": "7507e2ae",
    "getPendingAssets(uint256)": "51532e5a",
    "getRoyaltyPercentage()": "59c8b7dd",
    "getRoyaltyRecipient()": "95edc18c",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedForAllForAssets(address,address)": "22e6d160",
    "isChildEquipped(uint256,address,uint256)": "ee1dffcf",
    "isContributor(address)": "1d0d35f5",
    "manageContributor(address,bool)": "79e8ca9e",
    "maxSupply()": "d5abeb01",
    "mint(address,uint256,string)": "d3fc9864",
    "name()": "06fdde03",
    "nestMint(address,uint256,uint256,string)": "0ee2fd65",
    "nestTransferFrom(address,address,uint256,uint256,bytes)": "064c0a3a",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "pendingChildOf(uint256,uint256)": "a898e364",
    "pendingChildrenOf(uint256)": "44ec9344",
    "rejectAllAssets(uint256,uint256)": "e7de4de4",
    "rejectAllChildren(uint256,uint256)": "97961336",
    "rejectAsset(uint256,uint256,uint64)": "22f6da9c",
    "renounceOwnership()": "715018a6",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setApprovalForAllForAssets(address,bool)": "8507dc28",
    "setPriority(uint256,uint64[])": "de8e602c",
    "setTokenURI(uint256,string)": "162094c4",
    "setValidParentForEquippableGroup(uint64,address,uint64)": "65b67eb9",
    "specs()": "adb7c3f7",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalAssets()": "01e1d114",
    "totalSupply()": "18160ddd",
    "transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": "defa80c3",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unequip(uint256,uint64,uint64)": "c259a988",
    "updateRoyaltyRecipient(address)": "0fc499f5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"collectionMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"royaltyPercentageBps\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721AddressZeroIsNotaValidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveCallerIsNotOwnerNorApprovedForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MintToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721NotApprovedOrOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TokenAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToNonReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKApprovalForAssetsToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKAssetAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKBadPriorityListLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKCatalogRequiredForParts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKChildAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKChildIndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKEquippableEquipNotAllowedByCatalog\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKIdZeroForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKIndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKIsNotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKMaxPendingAssetsReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKMaxPendingChildrenReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"RMRKMaxRecursiveBurnsReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKMintOverMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKMintToNonRMRKNestableImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKMintZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKMustUnequipFirst\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNestableTooDeep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNestableTransferToDescendant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNestableTransferToNonRMRKNestableImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNestableTransferToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNewContributorIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNewOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNoAssetMatchingId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNotApprovedForAssetsOrOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNotApprovedOrDirectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNotEquipped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKNotOwnerOrContributor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKPendingChildIndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKRoyaltiesTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKSlotAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKTargetAssetCannotReceiveSlot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKTokenCannotBeEquippedWithAssetIntoSlot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKTokenDoesNotHaveAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKUnexpectedAssetId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKUnexpectedChildId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKUnexpectedNumberOfAssets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RMRKUnexpectedNumberOfChildren\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AllChildrenRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAllForAssets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ApprovalForAssets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"replacesId\",\"type\":\"uint64\"}],\"name\":\"AssetAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"replacesId\",\"type\":\"uint64\"}],\"name\":\"AssetAddedToTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AssetPrioritySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"AssetRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"AssetSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"ChildAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"childAssetId\",\"type\":\"uint64\"}],\"name\":\"ChildAssetEquipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"childAssetId\",\"type\":\"uint64\"}],\"name\":\"ChildAssetUnequipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"ChildProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"fromPending\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"toZero\",\"type\":\"bool\"}],\"name\":\"ChildTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isContributor\",\"type\":\"bool\"}],\"name\":\"ContributorUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NestTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"equippableGroupId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"}],\"name\":\"ValidParentEquippableGroupIdSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"RMRK_INTERFACE\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"acceptAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"acceptChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"addAssetEntry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"replacesAssetWithId\",\"type\":\"uint64\"}],\"name\":\"addAssetToToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"addChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"equippableGroupId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"catalogAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint64[]\",\"name\":\"partIds\",\"type\":\"uint64[]\"}],\"name\":\"addEquippableAssetEntry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approveForAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxChildrenBurns\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slotId\",\"type\":\"uint64\"}],\"name\":\"canTokenBeEquippedWithAssetIntoSlot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"childOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC7401.Child\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"}],\"name\":\"childrenOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC7401.Child[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectionMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"directOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"childAssetId\",\"type\":\"uint64\"}],\"internalType\":\"struct IERC6220.IntakeEquip\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"equip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getActiveAssetPriorities\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getActiveAssets\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApprovedForAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"getAssetAndEquippableData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"getAssetMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"newAssetId\",\"type\":\"uint64\"}],\"name\":\"getAssetReplacements\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"targetCatalogAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"}],\"name\":\"getEquipment\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"childAssetId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childEquippableAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC6220.Equipment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPendingAssets\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoyaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoyaltyRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAllForAssets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"}],\"name\":\"isChildEquipped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"}],\"name\":\"isContributor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"grantRole\",\"type\":\"bool\"}],\"name\":\"manageContributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"nestMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"nestTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"pendingChildOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC7401.Child\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"}],\"name\":\"pendingChildrenOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC7401.Child[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRejections\",\"type\":\"uint256\"}],\"name\":\"rejectAllAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRejections\",\"type\":\"uint256\"}],\"name\":\"rejectAllChildren\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"}],\"name\":\"rejectAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAllForAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64[]\",\"name\":\"priorities\",\"type\":\"uint64[]\"}],\"name\":\"setPriority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI_\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"equippableGroupId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"partId\",\"type\":\"uint64\"}],\"name\":\"setValidParentForEquippableGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"specs\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"MOVE_SPEED\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"MOVE_ANGLE_SPEED\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"SHIP_MASS\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"LINEAR_DAMPING\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"ANGULAR_DAMPING\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"FIRE_RATE\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"childIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"childAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"childId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"assetId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slotPartId\",\"type\":\"uint64\"}],\"name\":\"unequip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"}],\"name\":\"updateRoyaltyRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"RMRKIdZeroForbidden()\":[{\"details\":\"The ID 0 in RMRK suite is reserved for empty values. Guarding against its use ensures the expected operation\"}],\"RMRKMaxRecursiveBurnsReached(address,uint256)\":[{\"params\":{\"childContract\":\"Address of the collection smart contract in which the maximum number of recursive burns was reached\",\"childId\":\"ID of the child token at which the maximum number of recursive burns was reached\"}}],\"RMRKNotApprovedOrDirectOwner()\":[{\"details\":\"When a token is nested, only the direct owner (NFT parent) can mange it. In that case, approved addresses are  not allowed to manage it, in order to ensure the expected behaviour\"}]},\"events\":{\"AllChildrenRejected(uint256)\":{\"details\":\"Emitted when a token removes all a child tokens from its pending array.\",\"params\":{\"tokenId\":\"ID of the token that rejected all of the pending children\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ApprovalForAllForAssets(address,address,bool)\":{\"params\":{\"approved\":\"Boolean value signifying whether the permission has been granted (`true`) or revoked (`false`)\",\"operator\":\"Address of the account that has been granted the approval to manage the token's assets on all of  the tokens\",\"owner\":\"Address of the account that has granted the approval for all assets on all of their tokens\"}},\"ApprovalForAssets(address,address,uint256)\":{\"details\":\"Approvals must be cleared on transfer\",\"params\":{\"approved\":\"Address of the account that has been granted approval to manage the token's assets\",\"owner\":\"Address of the account that has granted the approval for all token's assets\",\"tokenId\":\"ID of the token on which the approval was granted\"}},\"AssetAccepted(uint256,uint64,uint64)\":{\"params\":{\"assetId\":\"ID of the asset that was accepted\",\"replacesId\":\"ID of the asset that was replaced\",\"tokenId\":\"ID of the token that had a new asset accepted\"}},\"AssetAddedToTokens(uint256[],uint64,uint64)\":{\"params\":{\"assetId\":\"ID of the asset that has been added to the token's pending assets array\",\"replacesId\":\"ID of the asset that would be replaced\",\"tokenIds\":\"An array of token IDs that received a new pending asset\"}},\"AssetPrioritySet(uint256)\":{\"params\":{\"tokenId\":\"ID of the token that had the asset priority array updated\"}},\"AssetRejected(uint256,uint64)\":{\"params\":{\"assetId\":\"ID of the asset that was rejected\",\"tokenId\":\"ID of the token that had an asset rejected\"}},\"AssetSet(uint64)\":{\"params\":{\"assetId\":\"ID of the asset that was initialized\"}},\"ChildAccepted(uint256,uint256,address,uint256)\":{\"details\":\"Emitted when a parent token accepts a token from its pending array, migrating it to the active array.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of the newly accepted child token in the parent token's active children array\",\"tokenId\":\"ID of the token that accepted a new child token\"}},\"ChildAssetEquipped(uint256,uint64,uint64,uint256,address,uint64)\":{\"params\":{\"assetId\":\"ID of the asset associated with the token we are equipping into\",\"childAddress\":\"Address of the child token's collection\",\"childAssetId\":\"ID of the asset associated with the token we are equipping\",\"childId\":\"ID of the child token we are equipping into the slot\",\"slotPartId\":\"ID of the slot we are using to equip\",\"tokenId\":\"ID of the token that had an asset equipped\"}},\"ChildAssetUnequipped(uint256,uint64,uint64,uint256,address,uint64)\":{\"params\":{\"assetId\":\"ID of the asset associated with the token we are unequipping out of\",\"childAddress\":\"Address of the collection that a token that is being unequipped belongs to\",\"childAssetId\":\"ID of the asset associated with the token we are unequipping\",\"childId\":\"ID of the token being unequipped\",\"slotPartId\":\"ID of the slot we are unequipping from\",\"tokenId\":\"ID of the token that had an asset unequipped\"}},\"ChildProposed(uint256,uint256,address,uint256)\":{\"details\":\"Emitted when a child NFT is added to a token's pending array.\",\"params\":{\"childAddress\":\"Address of the proposed child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of the proposed child token in the parent token's pending children array\",\"tokenId\":\"ID of the token that received a new pending child token\"}},\"ChildTransferred(uint256,uint256,address,uint256,bool,bool)\":{\"details\":\"Emitted when a token transfers a child from itself, transferring ownership to the root owner.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract\",\"childId\":\"ID of the child token in the child token's collection smart contract\",\"childIndex\":\"Index of a child in the array from which it is being transferred\",\"fromPending\":\"A boolean value signifying whether the token was in the pending child tokens array (`true`) or  in the active child tokens array (`false`)\",\"toZero\":\"A boolean value signifying whether the token is being transferred to the `0x0` address (`true`) or  not (`false`)\",\"tokenId\":\"ID of the token that transferred a child token\"}},\"ContributorUpdate(address,bool)\":{\"details\":\"This can only be triggered by a current owner, so there is no need to include that information in the event.\",\"params\":{\"contributor\":\"Address of the account that had contributor role status updated\",\"isContributor\":\"A boolean value signifying whether the role has been granted (`true`) or revoked (`false`)\"}},\"NestTransfer(address,address,uint256,uint256,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\",\"params\":{\"from\":\"Address of the previous immediate owner, which is a smart contract if the token was nested.\",\"fromTokenId\":\"ID of the previous parent token. If the token was not nested before, the value should be `0`\",\"to\":\"Address of the new immediate owner, which is a smart contract if the token is being nested.\",\"toTokenId\":\"ID of the new parent token. If the token is not being nested, the value should be `0`\",\"tokenId\":\"ID of the token being transferred\"}},\"OwnershipTransferred(address,address)\":{\"params\":{\"newOwner\":\"Address of the account receiving the ownership role\",\"previousOwner\":\"Address of the account that transferred their ownership role\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"ValidParentEquippableGroupIdSet(uint64,uint64,address)\":{\"params\":{\"equippableGroupId\":\"ID of the equippable group being marked as equippable into the slot associated with  `slotPartId` of the `parentAddress` collection\",\"parentAddress\":\"Address of the collection into which the parts belonging to `equippableGroupId` can be  equipped\",\"slotPartId\":\"ID of the slot part of the catalog into which the parts belonging to the equippable group  associated with `equippableGroupId` can be equipped\"}}},\"kind\":\"dev\",\"methods\":{\"acceptAsset(uint256,uint256,uint64)\":{\"details\":\"Migrates the asset from the token's pending asset array to the token's active asset array.Active assets cannot be removed by anyone, but can be replaced by a new asset.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - `index` must be in range of the length of the pending asset array.Emits an {AssetAccepted} event.\",\"params\":{\"assetId\":\"ID of the asset that is being accepted\",\"index\":\"Index of the asset in the pending array to accept\",\"tokenId\":\"ID of the token for which to accept the pending asset\"}},\"acceptChild(uint256,uint256,address,uint256)\":{\"details\":\"This moves the child token from parent token's pending child tokens array into the active child tokens  array.\",\"params\":{\"childAddress\":\"Address of the collection smart contract of the child token expected to be located at the  specified index of the given parent token's pending children array\",\"childId\":\"ID of the child token expected to be located at the specified index of the given parent token's  pending children array\",\"childIndex\":\"Index of a child tokem in the given parent's pending children array\",\"parentId\":\"ID of the parent token for which the child token is being accepted\"}},\"addAssetEntry(string)\":{\"details\":\"The ID of the asset is automatically assigned to be the next available asset ID.\",\"params\":{\"metadataURI\":\"Metadata URI of the asset\"},\"returns\":{\"_0\":\"ID of the newly added asset\"}},\"addAssetToToken(uint256,uint64,uint64)\":{\"details\":\"If the given asset is already added to the token, the execution will be reverted.If the asset ID is invalid, the execution will be reverted.If the token already has the maximum amount of pending assets (128), the execution will be  reverted.\",\"params\":{\"assetId\":\"ID of the asset to add to the token\",\"replacesAssetWithId\":\"ID of the asset to replace from the token's list of active assets\",\"tokenId\":\"ID of the token to add the asset to\"}},\"addChild(uint256,uint256,bytes)\":{\"details\":\"This adds the child token into the given parent token's pending child tokens array.Requirements:  - `directOwnerOf` on the child contract must resolve to the called contract.  - the pending array of the parent contract must not be full.\",\"params\":{\"childId\":\"ID of the new proposed child token\",\"data\":\"Additional data with no specified format\",\"parentId\":\"ID of the parent token to receive the new child token\"}},\"addEquippableAssetEntry(uint64,address,string,uint64[])\":{\"details\":\"The ID of the asset is automatically assigned to be the next available asset ID.\",\"params\":{\"catalogAddress\":\"Address of the `Catalog` smart contract this asset belongs to\",\"equippableGroupId\":\"ID of the equippable group\",\"metadataURI\":\"Metadata URI of the asset\",\"partIds\":\"An array of IDs of fixed and slot parts to be included in the asset\"},\"returns\":{\"_0\":\"The total number of assets after this asset has been added\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account.The approval is cleared when the token is transferred.Only a single account can be approved at a time, so approving the zero address clears previous approvals.Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist.Emits an {Approval} event.\",\"params\":{\"to\":\"Address receiving the approval\",\"tokenId\":\"ID of the token for which the approval is being granted\"}},\"approveForAssets(address,uint256)\":{\"details\":\"This can only be called by the owner of the token or by an account that has been granted permission to  manage all of the owner's assets.\",\"params\":{\"to\":\"Address of the account to receive the approval to the specified token\",\"tokenId\":\"ID of the token for which we are granting the permission\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"Address of the account being checked\"},\"returns\":{\"_0\":\"The balance of the given account\"}},\"burn(uint256)\":{\"details\":\"In case the token has any child tokens, the execution will be reverted.\",\"params\":{\"tokenId\":\"ID of the token to burn\"}},\"burn(uint256,uint256)\":{\"details\":\"When a token is burned, all of its child tokens are recursively burned as well.When specifying the maximum recursive burns, the execution will be reverted if there are more children to be  burned.Setting the `maxRecursiveBurn` value to 0 will only attempt to burn the specified token and revert if there  are any child tokens present.The approvals are cleared when the token is burned.Requirements:  - `tokenId` must exist.Emits a {Transfer} event.\",\"params\":{\"maxRecursiveBurns\":\"Maximum number of tokens to recursively burn\",\"tokenId\":\"ID of the token to burn\"},\"returns\":{\"_0\":\"Number of recursively burned children\"}},\"canTokenBeEquippedWithAssetIntoSlot(address,uint256,uint64,uint64)\":{\"params\":{\"assetId\":\"ID of the asset associated with the token we want to equip\",\"parent\":\"Address of the parent token's smart contract\",\"slotId\":\"ID of the slot that we want to equip the token into\",\"tokenId\":\"ID of the token we want to equip\"},\"returns\":{\"_0\":\"A boolean indicating whether the token with the given asset can be equipped into the desired slot\"}},\"childOf(uint256,uint256)\":{\"details\":\"Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"index\":\"Index of the child token in the parent token's active child tokens array\",\"parentId\":\"ID of the parent token for which the child is being retrieved\"},\"returns\":{\"_0\":\"A Child struct containing data about the specified child\"}},\"childrenOf(uint256)\":{\"details\":\"Returns array of Child structs existing for parent token.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"parentId\":\"ID of the parent token for which to retrieve the active child tokens\"},\"returns\":{\"_0\":\"An array of Child structs containing the parent token's active child tokens\"}},\"collectionMetadata()\":{\"returns\":{\"_0\":\"string The metadata URI of the collection\"}},\"directOwnerOf(uint256)\":{\"details\":\"If the immediate owner is another token, the address returned, should be the one of the parent token's  collection smart contract.\",\"params\":{\"tokenId\":\"ID of the token for which the RMRK owner is being retrieved\"},\"returns\":{\"_0\":\"Address of the given token's owner\",\"_1\":\"The ID of the parent token. Should be `0` if the owner is an externally owned account\",\"_2\":\"The boolean value signifying whether the owner is an NFT or not\"}},\"equip((uint256,uint256,uint64,uint64,uint64))\":{\"details\":\"The `IntakeEquip` stuct contains the following data:  [      tokenId,      childIndex,      assetId,      slotPartId,      childAssetId  ]\",\"params\":{\"data\":\"An `IntakeEquip` struct specifying the equip data\"}},\"getActiveAssetPriorities(uint256)\":{\"details\":\"Asset priorities are a non-sequential array of uint64 values with an array size equal to active asset  priorites.\",\"params\":{\"tokenId\":\"ID of the token for which to retrieve the priorities of the active assets\"},\"returns\":{\"_0\":\"An array of priorities of the active assets of the given token\"}},\"getActiveAssets(uint256)\":{\"details\":\"Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.You can safely get 10k\",\"params\":{\"tokenId\":\"ID of the token to retrieve the IDs of the active assets\"},\"returns\":{\"_0\":\"An array of active asset IDs of the given token\"}},\"getApproved(uint256)\":{\"details\":\"Requirements:  - `tokenId` must exist.\",\"params\":{\"tokenId\":\"ID of the token to check for approval\"},\"returns\":{\"_0\":\"Address of the account approved to manage the token\"}},\"getApprovedForAssets(uint256)\":{\"params\":{\"tokenId\":\"ID of the token we are checking\"},\"returns\":{\"_0\":\"Address of the account that is approved to manage the token\"}},\"getAssetAndEquippableData(uint256,uint64)\":{\"params\":{\"assetId\":\"ID of the asset of which we are retrieving\",\"tokenId\":\"ID of the token for which to retrieve the asset\"},\"returns\":{\"_0\":\"The metadata URI of the asset\",\"_1\":\"ID of the equippable group this asset belongs to\",\"_2\":\"The address of the catalog the part belongs to\",\"_3\":\"An array of IDs of parts included in the asset\"}},\"getAssetMetadata(uint256,uint64)\":{\"details\":\"Assets are stored by reference mapping `_assets[assetId]`.Can be overriden to implement enumerate, fallback or other custom logic.\",\"params\":{\"assetId\":\"Asset Id, must be in the active assets array\",\"tokenId\":\"ID of the token from which to retrieve the asset metadata\"},\"returns\":{\"_0\":\"The metadata of the asset belonging to the specified index in the token's active assets  array\"}},\"getAssetReplacements(uint256,uint64)\":{\"details\":\"Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.\",\"params\":{\"newAssetId\":\"ID of the pending asset which will be accepted\",\"tokenId\":\"ID of the token to check\"},\"returns\":{\"_0\":\"ID of the asset which will be replaced\"}},\"getEquipment(uint256,address,uint64)\":{\"details\":\"The `Equipment` struct consists of the following data:  [      assetId,      childAssetId,      childId,      childEquippableAddress  ]\",\"params\":{\"slotPartId\":\"ID of the `Slot` part that we are checking for equipped objects\",\"targetCatalogAddress\":\"Address of the `Catalog` associated with the `Slot` part of the token\",\"tokenId\":\"ID of the token for which we are retrieving the equipped object\"},\"returns\":{\"_0\":\"The `Equipment` struct containing data about the equipped object\"}},\"getPendingAssets(uint256)\":{\"details\":\"Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.\",\"params\":{\"tokenId\":\"ID of the token to retrieve the IDs of the pending assets\"},\"returns\":{\"_0\":\"An array of pending asset IDs of the given token\"}},\"getRoyaltyPercentage()\":{\"returns\":{\"_0\":\"The royalty percentage expressed in the basis points\"}},\"getRoyaltyRecipient()\":{\"returns\":{\"_0\":\"Address of the recipient of royalties\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"operator\":\"Address being checked for approval\",\"owner\":\"Address of the owner of the tokens\"},\"returns\":{\"_0\":\"A boolean value signifying whether the *operator* is allowed to manage the tokens of the *owner* (`true`)  or not (`false`)\"}},\"isApprovedForAllForAssets(address,address)\":{\"details\":\"See {setApprovalForAllForAssets}.\",\"params\":{\"operator\":\"Address of the account that we are checking whether it has the operator role or not\",\"owner\":\"Address of the account that we are checking for whether it has granted the operator role\"},\"returns\":{\"_0\":\"A boolean value indicating wehter the account we are checking has been granted the operator role\"}},\"isChildEquipped(uint256,address,uint256)\":{\"details\":\"This is used to prevent from transferring a child that is equipped.\",\"params\":{\"childAddress\":\"Address of the child token's smart contract\",\"childId\":\"ID of the child token\",\"tokenId\":\"ID of the parent token for which we are querying for\"},\"returns\":{\"_0\":\"A boolean value indicating whether the child token is equipped into the given token or not\"}},\"isContributor(address)\":{\"params\":{\"contributor\":\"Address of the contributor whose status we are checking\"},\"returns\":{\"_0\":\"Boolean value indicating whether the address is a contributor or not\"}},\"manageContributor(address,bool)\":{\"details\":\"Can only be called by the owner.Emits ***ContributorUpdate*** event.\",\"params\":{\"contributor\":\"Address of the contributor's account\",\"grantRole\":\"A boolean value signifying whether the contributor role is being granted (`true`) or revoked  (`false`)\"}},\"maxSupply()\":{\"returns\":{\"_0\":\"The maximum supply of tokens in the collection\"}},\"mint(address,uint256,string)\":{\"details\":\"The data value of the _safeMint method is set to an empty value.Can only be called while the open sale is open.\",\"params\":{\"numToMint\":\"Number of tokens to mint\",\"to\":\"Address to which to mint the token\",\"tokenURI\":\"URI assigned to all the minted tokens\"},\"returns\":{\"_0\":\"The ID of the first token to be minted in the current minting cycle\"}},\"name()\":{\"returns\":{\"_0\":\"Name of the collection\"}},\"nestMint(address,uint256,uint256,string)\":{\"details\":\"The \\\"data\\\" value of the \\\"_safeMint\\\" method is set to an empty value.Can only be called while the open sale is open.\",\"params\":{\"destinationId\":\"ID of the token into which to mint the new child token\",\"numToMint\":\"Number of tokens to mint\",\"to\":\"Address of the collection smart contract of the token into which to mint the child token\",\"tokenURI\":\"URI assigned to all the minted tokens\"},\"returns\":{\"_0\":\"The ID of the first token to be minted in the current minting cycle\"}},\"nestTransferFrom(address,address,uint256,uint256,bytes)\":{\"params\":{\"data\":\"Additional data with no specified format, sent in the addChild call\",\"destinationId\":\"ID of the token to receive the token being transferred\",\"from\":\"Address of the direct owner of the token to be transferred\",\"to\":\"Address of the receiving token's collection smart contract\",\"tokenId\":\"ID of the token being transferred\"}},\"owner()\":{\"returns\":{\"_0\":\"Address of the current owner\"}},\"ownerOf(uint256)\":{\"details\":\"The *root* owner of the token is an externally owned account (EOA). If the given token is child of another  NFT, this will return an EOA address. Otherwise, if the token is owned by an EOA, this EOA wil be returned.\",\"params\":{\"tokenId\":\"ID of the token for which the *root* owner has been retrieved\"},\"returns\":{\"_0\":\"The *root* owner of the token\"}},\"pendingChildOf(uint256,uint256)\":{\"details\":\"Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"index\":\"Index of the child token in the parent token's pending child tokens array\",\"parentId\":\"ID of the parent token for which the pending child token is being retrieved\"},\"returns\":{\"_0\":\"A Child struct containting data about the specified child\"}},\"pendingChildrenOf(uint256)\":{\"details\":\"Returns array of pending Child structs existing for given parent.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]\",\"params\":{\"parentId\":\"ID of the parent token for which to retrieve the pending child tokens\"},\"returns\":{\"_0\":\"An array of Child structs containing the parent token's pending child tokens\"}},\"rejectAllAssets(uint256,uint256)\":{\"details\":\"Effecitvely deletes the pending array.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.Emits a {AssetRejected} event with assetId = 0.\",\"params\":{\"maxRejections\":\"Maximum number of expected assets to reject, used to prevent from rejecting assets which  arrive just before this operation.\",\"tokenId\":\"ID of the token of which to clear the pending array.\"}},\"rejectAllChildren(uint256,uint256)\":{\"details\":\"Removes the children from the pending array mapping.This does not update the ownership storage data on children. If necessary, ownership can be reclaimed by the  rootOwner of the previous parent.Requirements: Requirements: - `parentId` must exist\",\"params\":{\"maxRejections\":\"Maximum number of expected children to reject, used to prevent from rejecting children which  arrive just before this operation.\",\"parentId\":\"ID of the parent token for which to reject all of the pending tokens.\"}},\"rejectAsset(uint256,uint256,uint64)\":{\"details\":\"Removes the asset from the token's pending asset array.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - `index` must be in range of the length of the pending asset array.Emits a {AssetRejected} event.\",\"params\":{\"assetId\":\"ID of the asset that is being rejected\",\"index\":\"Index of the asset in the pending array to be rejected\",\"tokenId\":\"ID of the token that the asset is being rejected from\"}},\"renounceOwnership()\":{\"details\":\"Can only be called by the current owner.Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is  only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"salePrice\":\"Price of the token sale\",\"tokenId\":\"ID of the token for which the royalty info is being retrieved\"},\"returns\":{\"receiver\":\"The beneficiary receiving royalties of the sale\",\"royaltyAmount\":\"The value of the royalties recieved by the `receiver` from the sale\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must exist and be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.Emits a {Transfer} event.\",\"params\":{\"from\":\"Address to transfer the tokens from\",\"to\":\"Address to transfer the tokens to\",\"tokenId\":\"ID of the token to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must exist and be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data without a specified format to be sent along with the token transaction\",\"from\":\"Address to transfer the tokens from\",\"to\":\"Address to transfer the tokens to\",\"tokenId\":\"ID of the token to transfer\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.Requirements: - The `operator` cannot be the caller.Emits an {ApprovalForAll} event.\",\"params\":{\"approved\":\"A boolean value signifying whether the approval is being granted (`true`) or (`revoked`)\",\"operator\":\"Address of the operator being managed\"}},\"setApprovalForAllForAssets(address,bool)\":{\"details\":\"Operators can call {acceptAsset}, {rejectAsset}, {rejectAllAssets} or {setPriority} for any token  owned by the caller.Requirements:  - The `operator` cannot be the caller.Emits an {ApprovalForAllForAssets} event.\",\"params\":{\"approved\":\"The boolean value indicating whether the operator role is being granted (`true`) or revoked  (`false`)\",\"operator\":\"Address of the account to which the operator role is granted or revoked from\"}},\"setPriority(uint256,uint64[])\":{\"details\":\"The priority array is a non-sequential list of `uint64`s, where the lowest value is considered highest  priority.Value `0` of a priority is a special case equivalent to unitialized.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - The length of `priorities` must be equal the length of the active assets array.Emits a {AssetPrioritySet} event.\",\"params\":{\"priorities\":\"An array of priority values\",\"tokenId\":\"ID of the token to set the priorities for\"}},\"setValidParentForEquippableGroup(uint64,address,uint64)\":{\"params\":{\"equippableGroupId\":\"ID of the equippable group\",\"parentAddress\":\"Address of the parent into which the equippable group can be equipped into\",\"partId\":\"ID of the `Slot` that the items belonging to the equippable group can be equipped into\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"returns\":{\"_0\":\"Symbol of the collection\"}},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"ID of the token to retrieve the metadata URI for\"},\"returns\":{\"_0\":\"Metadata URI of the specified token\"}},\"totalAssets()\":{\"returns\":{\"_0\":\"The total number of assets\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"The number of tokens in a collection\"}},\"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)\":{\"details\":\"When transferring a child token, the owner of the token is set to `to`, or is not updated in the event of  `to` being the `0x0` address.\",\"params\":{\"childAddress\":\"Address of the child token's collection smart contract.\",\"childId\":\"ID of the child token in its own collection smart contract.\",\"childIndex\":\"Index of a token we are transferring, in the array it belongs to (can be either active array or  pending array)\",\"data\":\"Additional data with no specified format, sent in call to `_to`\",\"destinationId\":\"ID of the token to receive this child token (MUST be 0 if the destination is not a token)\",\"isPending\":\"A boolean value indicating whether the child token being transferred is in the pending array of  the parent token (`true`) or in the active array (`false`)\",\"to\":\"Address to which to transfer the token to\",\"tokenId\":\"ID of the parent token from which the child token is being transferred\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.Emits a {Transfer} event.\",\"params\":{\"from\":\"Address from which to transfer the token from\",\"to\":\"Address to which to transfer the token to\",\"tokenId\":\"ID of the token to transfer\"}},\"transferOwnership(address)\":{\"details\":\"Can only be called by the current owner.\",\"params\":{\"newOwner\":\"Address of the new owner's account\"}},\"unequip(uint256,uint64,uint64)\":{\"details\":\"This can only be called by the owner of the token or by an account that has been granted permission to  manage the given token by the current owner.\",\"params\":{\"assetId\":\"ID of the parent's asset that contains the `Slot` into which the child is equipped\",\"slotPartId\":\"ID of the `Slot` from which to unequip the child\",\"tokenId\":\"ID of the parent from which the child is being unequipped\"}},\"updateRoyaltyRecipient(address)\":{\"details\":\"Custom access control has to be implemented to ensure that only the intended actors can update the  beneficiary.\",\"params\":{\"newRoyaltyRecipient\":\"Address of the new recipient of royalties\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ERC721AddressZeroIsNotaValidOwner()\":[{\"notice\":\"Attempting to grant the token to 0x0 address\"}],\"ERC721ApprovalToCurrentOwner()\":[{\"notice\":\"Attempting to grant approval to the current owner of the token\"}],\"ERC721ApproveCallerIsNotOwnerNorApprovedForAll()\":[{\"notice\":\"Attempting to grant approval when not being owner or approved for all should not be permitted\"}],\"ERC721ApproveToCaller()\":[{\"notice\":\"Attempting to grant approval to self\"}],\"ERC721InvalidTokenId()\":[{\"notice\":\"Attempting to use an invalid token ID\"}],\"ERC721MintToTheZeroAddress()\":[{\"notice\":\"Attempting to mint to 0x0 address\"}],\"ERC721NotApprovedOrOwner()\":[{\"notice\":\"Attempting to manage a token without being its owner or approved by the owner\"}],\"ERC721TokenAlreadyMinted()\":[{\"notice\":\"Attempting to mint an already minted token\"}],\"ERC721TransferFromIncorrectOwner()\":[{\"notice\":\"Attempting to transfer the token from an address that is not the owner\"}],\"ERC721TransferToNonReceiverImplementer()\":[{\"notice\":\"Attempting to safe transfer to an address that is unable to receive the token\"}],\"ERC721TransferToTheZeroAddress()\":[{\"notice\":\"Attempting to transfer the token to a 0x0 address\"}],\"RMRKApprovalForAssetsToCurrentOwner()\":[{\"notice\":\"Attempting to grant approval of assets to their current owner\"}],\"RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll()\":[{\"notice\":\"Attempting to grant approval of assets without being the caller or approved for all\"}],\"RMRKAssetAlreadyExists()\":[{\"notice\":\"Attempting to add an asset using an ID that has already been used\"}],\"RMRKBadPriorityListLength()\":[{\"notice\":\"Attempting to set the priorities with an array of length that doesn't match the length of active assets array\"}],\"RMRKCatalogRequiredForParts()\":[{\"notice\":\"Attempting to add an asset entry with `Part`s, without setting the `Catalog` address\"}],\"RMRKChildAlreadyExists()\":[{\"notice\":\"Attempting to accept a child that has already been accepted\"}],\"RMRKChildIndexOutOfRange()\":[{\"notice\":\"Attempting to interact with a child, using index that is higher than the number of children\"}],\"RMRKEquippableEquipNotAllowedByCatalog()\":[{\"notice\":\"Attempting to equip a `Part` with a child not approved by the Catalog\"}],\"RMRKIdZeroForbidden()\":[{\"notice\":\"Attempting to use ID 0, which is not supported\"}],\"RMRKIndexOutOfRange()\":[{\"notice\":\"Attempting to interact with an asset, using index greater than number of assets\"}],\"RMRKIsNotContract()\":[{\"notice\":\"Attempting to interact with an end-user account when the contract account is expected\"}],\"RMRKMaxPendingAssetsReached()\":[{\"notice\":\"Attempting to add a pending asset after the number of pending assets has reached the limit (default limit is  128)\"}],\"RMRKMaxPendingChildrenReached()\":[{\"notice\":\"Attempting to add a pending child after the number of pending children has reached the limit (default limit is 128)\"}],\"RMRKMaxRecursiveBurnsReached(address,uint256)\":[{\"notice\":\"Attempting to burn a total number of recursive children higher than maximum set\"}],\"RMRKMintOverMax()\":[{\"notice\":\"Attempting to mint a number of tokens that would cause the total supply to be greater than maximum supply\"}],\"RMRKMintToNonRMRKNestableImplementer()\":[{\"notice\":\"Attempting to mint a nested token to a smart contract that doesn't support nesting\"}],\"RMRKMintZero()\":[{\"notice\":\"Attempting to mint zero tokens\"}],\"RMRKMustUnequipFirst()\":[{\"notice\":\"Attempting to transfer a child before it is unequipped\"}],\"RMRKNestableTooDeep()\":[{\"notice\":\"Attempting to nest a child over the nestable limit (current limit is 100 levels of nesting)\"}],\"RMRKNestableTransferToDescendant()\":[{\"notice\":\"Attempting to nest the token to own descendant, which would create a loop and leave the looped tokens in limbo\"}],\"RMRKNestableTransferToNonRMRKNestableImplementer()\":[{\"notice\":\"Attempting to nest the token to a smart contract that doesn't support nesting\"}],\"RMRKNestableTransferToSelf()\":[{\"notice\":\"Attempting to nest the token into itself\"}],\"RMRKNewContributorIsZeroAddress()\":[{\"notice\":\"Attempting to assign a 0x0 address as a contributor\"}],\"RMRKNewOwnerIsZeroAddress()\":[{\"notice\":\"Attempting to transfer the ownership to the 0x0 address\"}],\"RMRKNoAssetMatchingId()\":[{\"notice\":\"Attempting to interact with an asset that can not be found\"}],\"RMRKNotApprovedForAssetsOrOwner()\":[{\"notice\":\"Attempting to manage an asset without owning it or having been granted permission by the owner to do so\"}],\"RMRKNotApprovedOrDirectOwner()\":[{\"notice\":\"Attempting to interact with a token without being its owner or having been granted permission by the  owner to do so\"}],\"RMRKNotEquipped()\":[{\"notice\":\"Attempting to unequip an item that isn't equipped\"}],\"RMRKNotOwner()\":[{\"notice\":\"Attempting to interact with a management function without being the smart contract's owner\"}],\"RMRKNotOwnerOrContributor()\":[{\"notice\":\"Attempting to interact with a function without being the owner or contributor of the collection\"}],\"RMRKPendingChildIndexOutOfRange()\":[{\"notice\":\"Attempting to interact with a pending child using an index greater than the size of pending array\"}],\"RMRKRoyaltiesTooHigh()\":[{\"notice\":\"Attempting to set the royalties to a value higher than 100% (10000 in basis points)\"}],\"RMRKSlotAlreadyUsed()\":[{\"notice\":\"Attempting to equip an item into a slot that already has an item equipped\"}],\"RMRKTargetAssetCannotReceiveSlot()\":[{\"notice\":\"Attempting to equip an item into a `Slot` that the target asset does not implement\"}],\"RMRKTokenCannotBeEquippedWithAssetIntoSlot()\":[{\"notice\":\"Attempting to equip a child into a `Slot` and parent that the child's collection doesn't support\"}],\"RMRKTokenDoesNotHaveAsset()\":[{\"notice\":\"Attempting to compose a NFT of a token without active assets\"}],\"RMRKUnexpectedAssetId()\":[{\"notice\":\"Attempting to accept or reject an asset which does not match the one at the specified index\"}],\"RMRKUnexpectedChildId()\":[{\"notice\":\"Attempting to accept or transfer a child which does not match the one at the specified index\"}],\"RMRKUnexpectedNumberOfAssets()\":[{\"notice\":\"Attempting to reject all pending assets but more assets than expected are pending\"}],\"RMRKUnexpectedNumberOfChildren()\":[{\"notice\":\"Attempting to reject all pending children but children assets than expected are pending\"}]},\"events\":{\"AllChildrenRejected(uint256)\":{\"notice\":\"Used to notify listeners that all pending child tokens of a given token have been rejected.\"},\"ApprovalForAllForAssets(address,address,bool)\":{\"notice\":\"Used to notify listeners that owner has granted approval to the user to manage assets of all of their  tokens.\"},\"ApprovalForAssets(address,address,uint256)\":{\"notice\":\"Used to notify listeners that owner has granted an approval to the user to manage the assets of a  given token.\"},\"AssetAccepted(uint256,uint64,uint64)\":{\"notice\":\"Used to notify listeners that an asset object at `assetId` is accepted by the token and migrated  from token's pending assets array to active assets array of the token.\"},\"AssetAddedToTokens(uint256[],uint64,uint64)\":{\"notice\":\"Used to notify listeners that an asset object at `assetId` is added to token's pending asset  array.\"},\"AssetPrioritySet(uint256)\":{\"notice\":\"Used to notify listeners that token's prioritiy array is reordered.\"},\"AssetRejected(uint256,uint64)\":{\"notice\":\"Used to notify listeners that an asset object at `assetId` is rejected from token and is dropped  from the pending assets array of the token.\"},\"AssetSet(uint64)\":{\"notice\":\"Used to notify listeners that an asset object is initialized at `assetId`.\"},\"ChildAccepted(uint256,uint256,address,uint256)\":{\"notice\":\"Used to notify listeners that a new child token was accepted by the parent token.\"},\"ChildAssetEquipped(uint256,uint64,uint64,uint256,address,uint64)\":{\"notice\":\"Used to notify listeners that a child's asset has been equipped into one of its parent assets.\"},\"ChildAssetUnequipped(uint256,uint64,uint64,uint256,address,uint64)\":{\"notice\":\"Used to notify listeners that a child's asset has been unequipped from one of its parent assets.\"},\"ChildProposed(uint256,uint256,address,uint256)\":{\"notice\":\"Used to notify listeners that a new token has been added to a given token's pending children array.\"},\"ChildTransferred(uint256,uint256,address,uint256,bool,bool)\":{\"notice\":\"Used to notify listeners a child token has been transferred from parent token.\"},\"ContributorUpdate(address,bool)\":{\"notice\":\"Event that signifies that an address was granted contributor role or that the permission has been  revoked.\"},\"NestTransfer(address,address,uint256,uint256,uint256)\":{\"notice\":\"Used to notify listeners that the token is being transferred.\"},\"OwnershipTransferred(address,address)\":{\"notice\":\"Used to anounce the transfer of ownership.\"},\"ValidParentEquippableGroupIdSet(uint64,uint64,address)\":{\"notice\":\"Used to notify listeners that the assets belonging to a `equippableGroupId` have been marked as  equippable into a given slot and parent\"}},\"kind\":\"user\",\"methods\":{\"VERSION()\":{\"notice\":\"Version of the @rmrk-team/evm-contracts package\"},\"acceptAsset(uint256,uint256,uint64)\":{\"notice\":\"Accepts a asset at from the pending array of given token.\"},\"acceptChild(uint256,uint256,address,uint256)\":{\"notice\":\"Used to accept a pending child token for a given parent token.\"},\"addAssetEntry(string)\":{\"notice\":\"Used to add a asset entry.\"},\"addAssetToToken(uint256,uint64,uint64)\":{\"notice\":\"Used to add an asset to a token.\"},\"addChild(uint256,uint256,bytes)\":{\"notice\":\"Used to add a child token to a given parent token.\"},\"addEquippableAssetEntry(uint64,address,string,uint64[])\":{\"notice\":\"Used to add an equippable asset entry.\"},\"approve(address,uint256)\":{\"notice\":\"Used to grant a one-time approval to manage one's token.\"},\"approveForAssets(address,uint256)\":{\"notice\":\"Used to grant approvals for specific tokens to a specified address.\"},\"balanceOf(address)\":{\"notice\":\"Used to retrieve the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"notice\":\"Used to burn a given token.\"},\"burn(uint256,uint256)\":{\"notice\":\"Used to burn a given token.\"},\"canTokenBeEquippedWithAssetIntoSlot(address,uint256,uint64,uint64)\":{\"notice\":\"Used to verify whether a token can be equipped into a given parent's slot.\"},\"childOf(uint256,uint256)\":{\"notice\":\"Used to retrieve a specific active child token for a given parent token.\"},\"childrenOf(uint256)\":{\"notice\":\"Used to retrieve the active child tokens of a given parent token.\"},\"collectionMetadata()\":{\"notice\":\"Used to retrieve the metadata of the collection.\"},\"directOwnerOf(uint256)\":{\"notice\":\"Used to retrieve the immediate owner of the given token.\"},\"equip((uint256,uint256,uint64,uint64,uint64))\":{\"notice\":\"Used to equip a child into a token.\"},\"getActiveAssetPriorities(uint256)\":{\"notice\":\"Used to retrieve the priorities of the active resoources of a given token.\"},\"getActiveAssets(uint256)\":{\"notice\":\"Used to retrieve IDs of the active assets of given token.\"},\"getApproved(uint256)\":{\"notice\":\"Used to retrieve the account approved to manage given token.\"},\"getApprovedForAssets(uint256)\":{\"notice\":\"Used to get the address of the user that is approved to manage the specified token from the current  owner.\"},\"getAssetAndEquippableData(uint256,uint64)\":{\"notice\":\"Used to get the asset and equippable data associated with given `assetId`.\"},\"getAssetMetadata(uint256,uint64)\":{\"notice\":\"Used to fetch the asset metadata of the specified token's active asset with the given index.\"},\"getAssetReplacements(uint256,uint64)\":{\"notice\":\"Used to retrieve the asset that will be replaced if a given asset from the token's pending array  is accepted.\"},\"getEquipment(uint256,address,uint64)\":{\"notice\":\"Used to get the Equipment object equipped into the specified slot of the desired token.\"},\"getPendingAssets(uint256)\":{\"notice\":\"Used to retrieve IDs of the pending assets of given token.\"},\"getRoyaltyPercentage()\":{\"notice\":\"Used to retrieve the specified royalty percentage.\"},\"getRoyaltyRecipient()\":{\"notice\":\"Used to retrieve the recipient of royalties.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Used to check if the given address is allowed to manage the tokens of the specified address.\"},\"isApprovedForAllForAssets(address,address)\":{\"notice\":\"Used to check whether the address has been granted the operator role by a given address or not.\"},\"isChildEquipped(uint256,address,uint256)\":{\"notice\":\"Used to check whether the token has a given child equipped.\"},\"isContributor(address)\":{\"notice\":\"Used to check if the address is one of the contributors.\"},\"manageContributor(address,bool)\":{\"notice\":\"Adds or removes a contributor to the smart contract.\"},\"maxSupply()\":{\"notice\":\"Used to retrieve the maximum supply of the collection.\"},\"mint(address,uint256,string)\":{\"notice\":\"Used to mint the desired number of tokens to the specified address.\"},\"name()\":{\"notice\":\"Used to retrieve the collection name.\"},\"nestMint(address,uint256,uint256,string)\":{\"notice\":\"Used to mint a desired number of child tokens to a given parent token.\"},\"nestTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Used to transfer the token into another token.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"notice\":\"Used to retrieve the *root* owner of a given token.\"},\"pendingChildOf(uint256,uint256)\":{\"notice\":\"Used to retrieve a specific pending child token from a given parent token.\"},\"pendingChildrenOf(uint256)\":{\"notice\":\"Used to retrieve the pending child tokens of a given parent token.\"},\"rejectAllAssets(uint256,uint256)\":{\"notice\":\"Rejects all assets from the pending array of a given token.\"},\"rejectAllChildren(uint256,uint256)\":{\"notice\":\"Used to reject all pending children of a given parent token.\"},\"rejectAsset(uint256,uint256,uint64)\":{\"notice\":\"Rejects a asset from the pending array of given token.\"},\"renounceOwnership()\":{\"notice\":\"Leaves the contract without owner. Functions using the `onlyOwner` modifier will be disabled.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"Used to retrieve the information about who shall receive royalties of a sale of the specified token and  how much they will be.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Used to safely transfer a given token token from `from` to `to`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Used to safely transfer a given token token from `from` to `to`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Used to approve or remove `operator` as an operator for the caller.\"},\"setApprovalForAllForAssets(address,bool)\":{\"notice\":\"Used to add or remove an operator of assets for the caller.\"},\"setPriority(uint256,uint64[])\":{\"notice\":\"Sets a new priority array for a given token.\"},\"setValidParentForEquippableGroup(uint64,address,uint64)\":{\"notice\":\"Used to declare that the assets belonging to a given `equippableGroupId` are equippable into the `Slot`  associated with the `partId` of the collection at the specified `parentAddress`\"},\"symbol()\":{\"notice\":\"Used to retrieve the collection symbol.\"},\"tokenURI(uint256)\":{\"notice\":\"Used to retrieve the metadata URI of a token.\"},\"totalAssets()\":{\"notice\":\"Used to retrieve the total number of assets.\"},\"totalSupply()\":{\"notice\":\"Used to retrieve the total supply of the tokens in a collection.\"},\"transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)\":{\"notice\":\"Used to transfer a child token from a given parent token.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers a given token from `from` to `to`.\"},\"transferOwnership(address)\":{\"notice\":\"Transfers ownership of the contract to a new owner.\"},\"unequip(uint256,uint64,uint64)\":{\"notice\":\"Used to unequip child from parent token.\"},\"updateRoyaltyRecipient(address)\":{\"notice\":\"Used to update recipient of royalties.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EquipableShip.sol\":\"EquipableShip\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rmrk-team/=node_modules/@rmrk-team/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/EquipableShip.sol\":{\"keccak256\":\"0xd9ebdccd284622c8a51de02ed3b37b155c09e9e9d620c760bee55364b409192a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff0a84cca8ae6c0530b9e5e1de9781a83dd489cfceda4ea98c908a56d48075dc\",\"dweb:/ipfs/QmVbPm6sEVSTtTL4cQTQwNgpHLm85vVXFAcd2nPWWVyr7R\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/access/Ownable.sol\":{\"keccak256\":\"0x7c46c3ab469e5f6b95fc1126946b03708bb9d0943da3a4f97bf4d94309cc5c67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d91938cd5c1fb62551e40cb27c2dbc54ba28e4d844fc1f66e10aab9d96b1f308\",\"dweb:/ipfs/QmevebZjAcMqW4URCczoW9QxTo8x8zCwfVemuRLow3a4Uq\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/catalog/IRMRKCatalog.sol\":{\"keccak256\":\"0xf14074edcd3bcef665f17659d206465bd9ea5cd7999acf28065e623f88f04a86\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c967f0cc9fbf3dd16f8759d051220e750b8fca69ec503f33bf25c95ef5486403\",\"dweb:/ipfs/QmecpKwQKAPrd85Pi2jKTWfEjFrg2ZudjmMNEFhtxRbrat\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/core/RMRKCore.sol\":{\"keccak256\":\"0x2aed82db53e50724cefa3ee8ca62e7b9e4fb170a2b324cd5f518914480ba9b5b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://962a4c262e1710c8b0f3bb94f77513ee3aa1e561c85d9acb06960f36ede3bba7\",\"dweb:/ipfs/QmTQKxurANXy8HCtdLLcaxfwCPMoVJPKpYxtsj9CwiYQaZ\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/IERC6220.sol\":{\"keccak256\":\"0x4fcd6ea56d18b4daee46873794c002ad78160ba4a07d4f49362313c38ec0e28a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bbc28006dd8439bc0e1f332679d36a4c8b8a46ae2e4f37a5e4c0bdaaab85655e\",\"dweb:/ipfs/QmU1eN6R97EhpUUsQWD4qoz3KCsyMHZ8GvihVPnAoEk5dU\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKEquippable.sol\":{\"keccak256\":\"0x6bfea49c4d924f83e0c0b8e63b6f81953f28b6433b36bbf9678828bf32662cb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d70c5eed89802d32821b12c4b2ce76fdbba20eb211dbdf4570a334cb5f93c62\",\"dweb:/ipfs/QmV1GfvqPSaxnzTB5fnjpDYPe9BqxBnts7sWKNWyK5p3pp\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKMinifiedEquippable.sol\":{\"keccak256\":\"0x7c2d756ea5956cd7c479c611d04082ef4267b8e65e99b884b84e08d7fb685c2c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://11645970f49c04f04b316c312b597138d9277cb0d7bfce4a21a06c34d8be0f68\",\"dweb:/ipfs/QmYAUiH4fpYPWwiuLHTMpDXEtp7Vbieoo3XaAee4BUBG8c\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/extension/RMRKRoyalties.sol\":{\"keccak256\":\"0xf744b49d208b4d1e6c00ceb4650cb2c9e6b1ef547d4aaf80045f398b1154a4a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://896b29ade2d173ed093d94bc3d2880b748c37bf050dfac6bf1db42e035258203\",\"dweb:/ipfs/QmXbK7E3LTKxGquetSn5tWFpiFDDjFBWW4Lw7KwgT1x4T4\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/extension/soulbound/IERC6454.sol\":{\"keccak256\":\"0xc454f771a51a947da311e00a7b290f635f94b191cc036fc5211bc631155cbabb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b880a1aa41b2a90d4bab0935924a606b394212bf0ce9e7cabcb097f3c57ccdae\",\"dweb:/ipfs/QmWjHUxLtyiUVRupZGK6nvhoXdUUZPZHu3JZUcfEJC2dKf\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/extension/soulbound/RMRKSoulbound.sol\":{\"keccak256\":\"0x78c225ae45a537ec8c9fe97911c9fd6b8817bc4342c8ee4c86129122afb6c8b8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fcb7391183fa9ebadfa5a2bfa4c16300e65b73386125bbddc2b412a746f443f7\",\"dweb:/ipfs/QmPo5sjgKGssMvnsCexQyqZfhnGm47vRNPsa9PTbfVnKHX\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKErrors.sol\":{\"keccak256\":\"0x7d6a3648047dca37d1e21550c723d960e4c9d3783e3d0efb84602266cce45b35\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://170064f8e2d6211e251a7610236beada23c8c598987cb3dbd62826007a4ca553\",\"dweb:/ipfs/QmSgM9T5Q2azFicGQsiXPG8YZSiDEGgRYeHBUe2iAcP3gN\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKLib.sol\":{\"keccak256\":\"0x953bb028766f17fdafddd5a49b47d76058c4a8e18dee358a51ebe6a2927033db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://40bb3aec2b5942591536a3d4428cb08154f7ab80d3b94c3e4ccf85ca053606d8\",\"dweb:/ipfs/QmdyYsoYthTGFjcEQ35Ra57qmywiXh6UxDCyvAJZGKsUJH\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/AbstractMultiAsset.sol\":{\"keccak256\":\"0x6fe69bc7dcd8a51af76e294101955f216d486385db5cf5ff52d6c227c68a2deb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f75b0fda22fadeb0072c488dd77167796dce09b69886d3506dff95347c08708\",\"dweb:/ipfs/QmcdMSEq8zBsQVF9Kw2HQageFaCr4pDh7raAEBMdGaSyWb\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/IERC5773.sol\":{\"keccak256\":\"0x4e5b78824f54620c5b610a5e2c944cd159b8b054065fabf3af2aaea2f3360d89\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://713b179262117f3ff772aed51aa26e48bf7e3ff5c7ec6588060a887e634fe0f1\",\"dweb:/ipfs/Qme2B9DrgB93HPQy96Pia23jzrkdmUrVQPHdAqCxA8dzYY\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/IERC7401.sol\":{\"keccak256\":\"0x5feb73f09676b2961b45e5f165d95ff8197609e01e115590a627a47940690fb3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://93ea41ba10af02b385dbbe036e85f286f6f923e8adea11eb28ed21890a1fe953\",\"dweb:/ipfs/QmRgJKeYyh8VNNtdKF5Pcyei1qKDKNE5zmvXRt3Txoapfo\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/RMRKNestable.sol\":{\"keccak256\":\"0x97d3668f636376f3235ab4a8ffd44b0dd031d04d0d7f09ff65f850a747d959ae\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8071f816bc1d03ef7848bc6df0c0990f1fb2d972a736f9444824e058b93ed45\",\"dweb:/ipfs/QmZdgThWs3hdq7ZXJhgc3519vR2x2knwm9ULUfYVroRoHj\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x14a91bf4e2ca7a5423b903c551aedb08c98f9d089e429998f9711286c0c17882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e07319bbc8447047f9fa596d1af95ab5d235661b5f48159eaee6144d45261f0\",\"dweb:/ipfs/QmdAvUL5jmAx9ExoyR6199KUmkXfd8q4SfBuvJXygKHNbx\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/IRMRKCollectionData.sol\":{\"keccak256\":\"0xacd422c1f395c79a05f2f8d066b3727408b8689394a2ca1c5f274c02ef9d0d03\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://2ee4e329828e1cbfb1b02711bb08204bb8dae51309fdc5e80c6ea33c157ad3fc\",\"dweb:/ipfs/QmNMaAbcpK8XFfnjnA4inqq4BiYAEMQSTUjBRfL5BJoHc3\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKEquipRenderUtils.sol\":{\"keccak256\":\"0x47f85488065ed8420aa1609ec2fc767b04cb45d248b2b28665a23b0358ce862d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://43bf29f79de4d66059e3d2713b62574beecf0eb2d46a0a6b270e89bb7ce76610\",\"dweb:/ipfs/QmXeZwiPYS7svRZk1xDQfx4nQwipkFTnjSaCPBRDumyiok\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKMultiAssetRenderUtils.sol\":{\"keccak256\":\"0xb4b35e43916d350bdf014895099bea81d398241ce2ad34b02fb1adaaa49002a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bbdf9825e329a9590b5d89b471c1582dc768c5954f60c74bd1b4f7269b283295\",\"dweb:/ipfs/QmSneyQpXcr3DRQoVXFu22vvd2vpbrGkFtESnKme9oJ9XV\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKNestableRenderUtils.sol\":{\"keccak256\":\"0x726f94e9e77e4627f3af1df114a701b0d42fa3bfe546b81e914a84e3690d6352\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e6278d3e5f914a1094198b41e60e004d78cda72c1a2917aefd3659487bf78b1\",\"dweb:/ipfs/QmQFYvRGvARvqRLPagCM6EwtLBs3UcGn1Ya4xG9wtauEnY\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKRenderUtils.sol\":{\"keccak256\":\"0x65bb98d53697d05ecee5aa9ef08790e86fbdb4d80ca3af805f16e1bcf549012d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://38767d1762e288b70d2714b00b9419c73dbd6a9c23639e9afb6de04c4a6cb685\",\"dweb:/ipfs/QmZrLqhDSH8VcnDxn6aFBNTtkNJbHGRwc3qkmNgfL5iLoh\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/implementations/abstract/RMRKAbstractEquippable.sol\":{\"keccak256\":\"0x0d61ad2493dd5b867d94a0a0413b280952ea588b42e2184ca6e7c1ab6de086bd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00eb350ef9e89c56cc5b869fffc7594039a1d889cf84d41587f3c581e6684cc7\",\"dweb:/ipfs/QmcZmdeghW4NBck12J1e5Sq1zUk8Wz1AvsZ2JyAEVUvpZU\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/implementations/utils/RMRKImplementationBase.sol\":{\"keccak256\":\"0x56657e977934e300a17ad4db49f01730abcefed4f6eba3549b951e14dda18d5e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://585ccce5f8bab950cafad9f5d003443bddd2053357aa4a1f9bd73fbf3f421a77\",\"dweb:/ipfs/QmZocW2chh1gfFQyHpFKWpYJK2vapqtC2yVcq13XFDYNFG\"]},\"node_modules/@rmrk-team/evm-contracts/contracts/implementations/utils/RMRKTokenURIPerToken.sol\":{\"keccak256\":\"0x5936347fe96ec79b49f9a6c62195ca1dda40b62490403a8b7a5ccab971b77b03\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://502f87f93f5fbba37d1908be07ced4e881bafad90d8365c9bada3791e52db5ab\",\"dweb:/ipfs/QmeTVo2fhREx4gihZdu4mPAkMtNo4B5ur5iJLohg2gJB1z\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "collectionMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "maxSupply",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "royaltyPercentageBps",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721AddressZeroIsNotaValidOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApproveCallerIsNotOwnerNorApprovedForAll"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721InvalidTokenId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721MintToTheZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721NotApprovedOrOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TokenAlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToNonReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToTheZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKApprovalForAssetsToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKAssetAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKBadPriorityListLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKCatalogRequiredForParts"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKChildAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKChildIndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKEquippableEquipNotAllowedByCatalog"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKIdZeroForbidden"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKIndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKIsNotContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKMaxPendingAssetsReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKMaxPendingChildrenReached"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "childContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RMRKMaxRecursiveBurnsReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKMintOverMax"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKMintToNonRMRKNestableImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKMintZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKMustUnequipFirst"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNestableTooDeep"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNestableTransferToDescendant"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNestableTransferToNonRMRKNestableImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNestableTransferToSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNewContributorIsZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNewOwnerIsZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNoAssetMatchingId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNotApprovedForAssetsOrOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNotApprovedOrDirectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNotEquipped"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKNotOwnerOrContributor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKPendingChildIndexOutOfRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKRoyaltiesTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKSlotAlreadyUsed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKTargetAssetCannotReceiveSlot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKTokenCannotBeEquippedWithAssetIntoSlot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKTokenDoesNotHaveAsset"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKUnexpectedAssetId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKUnexpectedChildId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKUnexpectedNumberOfAssets"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RMRKUnexpectedNumberOfChildren"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AllChildrenRejected",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAllForAssets",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ApprovalForAssets",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "replacesId",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssetAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "replacesId",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssetAddedToTokens",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssetPrioritySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssetRejected",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssetSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ChildAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "childAssetId",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChildAssetEquipped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "childAssetId",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChildAssetUnequipped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ChildProposed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "fromPending",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "toZero",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChildTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contributor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isContributor",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContributorUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NestTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "equippableGroupId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "parentAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ValidParentEquippableGroupIdSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RMRK_INTERFACE",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptAsset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptChild"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAssetEntry",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "replacesAssetWithId",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAssetToToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addChild"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "equippableGroupId",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "catalogAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            },
            {
              "internalType": "uint64[]",
              "name": "partIds",
              "type": "uint64[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addEquippableAssetEntry",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveForAssets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxChildrenBurns",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "parent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "slotId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canTokenBeEquippedWithAssetIntoSlot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "childOf",
          "outputs": [
            {
              "internalType": "struct IERC7401.Child",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "childrenOf",
          "outputs": [
            {
              "internalType": "struct IERC7401.Child[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collectionMetadata",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "directOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IERC6220.IntakeEquip",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "childIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "assetId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "slotPartId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "childAssetId",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "equip"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveAssetPriorities",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActiveAssets",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApprovedForAssets",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssetAndEquippableData",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssetMetadata",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "newAssetId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssetReplacements",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "targetCatalogAddress",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEquipment",
          "outputs": [
            {
              "internalType": "struct IERC6220.Equipment",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "assetId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "childAssetId",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "childId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "childEquippableAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPendingAssets",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAllForAssets",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isChildEquipped",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contributor",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isContributor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contributor",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "grantRole",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "manageContributor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "numToMint",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "numToMint",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "destinationId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "nestMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "destinationId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "nestTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingChildOf",
          "outputs": [
            {
              "internalType": "struct IERC7401.Child",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "parentId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingChildrenOf",
          "outputs": [
            {
              "internalType": "struct IERC7401.Child[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxRejections",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rejectAllAssets"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxRejections",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rejectAllChildren"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rejectAsset"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAllForAssets"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64[]",
              "name": "priorities",
              "type": "uint64[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPriority"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenURI_",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTokenURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "equippableGroupId",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "parentAddress",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "partId",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setValidParentForEquippableGroup"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "specs",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "MOVE_SPEED",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "MOVE_ANGLE_SPEED",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "SHIP_MASS",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "LINEAR_DAMPING",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "ANGULAR_DAMPING",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "FIRE_RATE",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "destinationId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "childIndex",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "childAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "childId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPending",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferChild"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "assetId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "slotPartId",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unequip"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRoyaltyRecipient"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptAsset(uint256,uint256,uint64)": {
            "details": "Migrates the asset from the token's pending asset array to the token's active asset array.Active assets cannot be removed by anyone, but can be replaced by a new asset.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - `index` must be in range of the length of the pending asset array.Emits an {AssetAccepted} event.",
            "params": {
              "assetId": "ID of the asset that is being accepted",
              "index": "Index of the asset in the pending array to accept",
              "tokenId": "ID of the token for which to accept the pending asset"
            }
          },
          "acceptChild(uint256,uint256,address,uint256)": {
            "details": "This moves the child token from parent token's pending child tokens array into the active child tokens  array.",
            "params": {
              "childAddress": "Address of the collection smart contract of the child token expected to be located at the  specified index of the given parent token's pending children array",
              "childId": "ID of the child token expected to be located at the specified index of the given parent token's  pending children array",
              "childIndex": "Index of a child tokem in the given parent's pending children array",
              "parentId": "ID of the parent token for which the child token is being accepted"
            }
          },
          "addAssetEntry(string)": {
            "details": "The ID of the asset is automatically assigned to be the next available asset ID.",
            "params": {
              "metadataURI": "Metadata URI of the asset"
            },
            "returns": {
              "_0": "ID of the newly added asset"
            }
          },
          "addAssetToToken(uint256,uint64,uint64)": {
            "details": "If the given asset is already added to the token, the execution will be reverted.If the asset ID is invalid, the execution will be reverted.If the token already has the maximum amount of pending assets (128), the execution will be  reverted.",
            "params": {
              "assetId": "ID of the asset to add to the token",
              "replacesAssetWithId": "ID of the asset to replace from the token's list of active assets",
              "tokenId": "ID of the token to add the asset to"
            }
          },
          "addChild(uint256,uint256,bytes)": {
            "details": "This adds the child token into the given parent token's pending child tokens array.Requirements:  - `directOwnerOf` on the child contract must resolve to the called contract.  - the pending array of the parent contract must not be full.",
            "params": {
              "childId": "ID of the new proposed child token",
              "data": "Additional data with no specified format",
              "parentId": "ID of the parent token to receive the new child token"
            }
          },
          "addEquippableAssetEntry(uint64,address,string,uint64[])": {
            "details": "The ID of the asset is automatically assigned to be the next available asset ID.",
            "params": {
              "catalogAddress": "Address of the `Catalog` smart contract this asset belongs to",
              "equippableGroupId": "ID of the equippable group",
              "metadataURI": "Metadata URI of the asset",
              "partIds": "An array of IDs of fixed and slot parts to be included in the asset"
            },
            "returns": {
              "_0": "The total number of assets after this asset has been added"
            }
          },
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account.The approval is cleared when the token is transferred.Only a single account can be approved at a time, so approving the zero address clears previous approvals.Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist.Emits an {Approval} event.",
            "params": {
              "to": "Address receiving the approval",
              "tokenId": "ID of the token for which the approval is being granted"
            }
          },
          "approveForAssets(address,uint256)": {
            "details": "This can only be called by the owner of the token or by an account that has been granted permission to  manage all of the owner's assets.",
            "params": {
              "to": "Address of the account to receive the approval to the specified token",
              "tokenId": "ID of the token for which we are granting the permission"
            }
          },
          "balanceOf(address)": {
            "params": {
              "owner": "Address of the account being checked"
            },
            "returns": {
              "_0": "The balance of the given account"
            }
          },
          "burn(uint256)": {
            "details": "In case the token has any child tokens, the execution will be reverted.",
            "params": {
              "tokenId": "ID of the token to burn"
            }
          },
          "burn(uint256,uint256)": {
            "details": "When a token is burned, all of its child tokens are recursively burned as well.When specifying the maximum recursive burns, the execution will be reverted if there are more children to be  burned.Setting the `maxRecursiveBurn` value to 0 will only attempt to burn the specified token and revert if there  are any child tokens present.The approvals are cleared when the token is burned.Requirements:  - `tokenId` must exist.Emits a {Transfer} event.",
            "params": {
              "maxRecursiveBurns": "Maximum number of tokens to recursively burn",
              "tokenId": "ID of the token to burn"
            },
            "returns": {
              "_0": "Number of recursively burned children"
            }
          },
          "canTokenBeEquippedWithAssetIntoSlot(address,uint256,uint64,uint64)": {
            "params": {
              "assetId": "ID of the asset associated with the token we want to equip",
              "parent": "Address of the parent token's smart contract",
              "slotId": "ID of the slot that we want to equip the token into",
              "tokenId": "ID of the token we want to equip"
            },
            "returns": {
              "_0": "A boolean indicating whether the token with the given asset can be equipped into the desired slot"
            }
          },
          "childOf(uint256,uint256)": {
            "details": "Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
            "params": {
              "index": "Index of the child token in the parent token's active child tokens array",
              "parentId": "ID of the parent token for which the child is being retrieved"
            },
            "returns": {
              "_0": "A Child struct containing data about the specified child"
            }
          },
          "childrenOf(uint256)": {
            "details": "Returns array of Child structs existing for parent token.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
            "params": {
              "parentId": "ID of the parent token for which to retrieve the active child tokens"
            },
            "returns": {
              "_0": "An array of Child structs containing the parent token's active child tokens"
            }
          },
          "collectionMetadata()": {
            "returns": {
              "_0": "string The metadata URI of the collection"
            }
          },
          "directOwnerOf(uint256)": {
            "details": "If the immediate owner is another token, the address returned, should be the one of the parent token's  collection smart contract.",
            "params": {
              "tokenId": "ID of the token for which the RMRK owner is being retrieved"
            },
            "returns": {
              "_0": "Address of the given token's owner",
              "_1": "The ID of the parent token. Should be `0` if the owner is an externally owned account",
              "_2": "The boolean value signifying whether the owner is an NFT or not"
            }
          },
          "equip((uint256,uint256,uint64,uint64,uint64))": {
            "details": "The `IntakeEquip` stuct contains the following data:  [      tokenId,      childIndex,      assetId,      slotPartId,      childAssetId  ]",
            "params": {
              "data": "An `IntakeEquip` struct specifying the equip data"
            }
          },
          "getActiveAssetPriorities(uint256)": {
            "details": "Asset priorities are a non-sequential array of uint64 values with an array size equal to active asset  priorites.",
            "params": {
              "tokenId": "ID of the token for which to retrieve the priorities of the active assets"
            },
            "returns": {
              "_0": "An array of priorities of the active assets of the given token"
            }
          },
          "getActiveAssets(uint256)": {
            "details": "Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.You can safely get 10k",
            "params": {
              "tokenId": "ID of the token to retrieve the IDs of the active assets"
            },
            "returns": {
              "_0": "An array of active asset IDs of the given token"
            }
          },
          "getApproved(uint256)": {
            "details": "Requirements:  - `tokenId` must exist.",
            "params": {
              "tokenId": "ID of the token to check for approval"
            },
            "returns": {
              "_0": "Address of the account approved to manage the token"
            }
          },
          "getApprovedForAssets(uint256)": {
            "params": {
              "tokenId": "ID of the token we are checking"
            },
            "returns": {
              "_0": "Address of the account that is approved to manage the token"
            }
          },
          "getAssetAndEquippableData(uint256,uint64)": {
            "params": {
              "assetId": "ID of the asset of which we are retrieving",
              "tokenId": "ID of the token for which to retrieve the asset"
            },
            "returns": {
              "_0": "The metadata URI of the asset",
              "_1": "ID of the equippable group this asset belongs to",
              "_2": "The address of the catalog the part belongs to",
              "_3": "An array of IDs of parts included in the asset"
            }
          },
          "getAssetMetadata(uint256,uint64)": {
            "details": "Assets are stored by reference mapping `_assets[assetId]`.Can be overriden to implement enumerate, fallback or other custom logic.",
            "params": {
              "assetId": "Asset Id, must be in the active assets array",
              "tokenId": "ID of the token from which to retrieve the asset metadata"
            },
            "returns": {
              "_0": "The metadata of the asset belonging to the specified index in the token's active assets  array"
            }
          },
          "getAssetReplacements(uint256,uint64)": {
            "details": "Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.",
            "params": {
              "newAssetId": "ID of the pending asset which will be accepted",
              "tokenId": "ID of the token to check"
            },
            "returns": {
              "_0": "ID of the asset which will be replaced"
            }
          },
          "getEquipment(uint256,address,uint64)": {
            "details": "The `Equipment` struct consists of the following data:  [      assetId,      childAssetId,      childId,      childEquippableAddress  ]",
            "params": {
              "slotPartId": "ID of the `Slot` part that we are checking for equipped objects",
              "targetCatalogAddress": "Address of the `Catalog` associated with the `Slot` part of the token",
              "tokenId": "ID of the token for which we are retrieving the equipped object"
            },
            "returns": {
              "_0": "The `Equipment` struct containing data about the equipped object"
            }
          },
          "getPendingAssets(uint256)": {
            "details": "Asset data is stored by reference, in order to access the data corresponding to the ID, call  `getAssetMetadata(tokenId, assetId)`.",
            "params": {
              "tokenId": "ID of the token to retrieve the IDs of the pending assets"
            },
            "returns": {
              "_0": "An array of pending asset IDs of the given token"
            }
          },
          "getRoyaltyPercentage()": {
            "returns": {
              "_0": "The royalty percentage expressed in the basis points"
            }
          },
          "getRoyaltyRecipient()": {
            "returns": {
              "_0": "Address of the recipient of royalties"
            }
          },
          "isApprovedForAll(address,address)": {
            "params": {
              "operator": "Address being checked for approval",
              "owner": "Address of the owner of the tokens"
            },
            "returns": {
              "_0": "A boolean value signifying whether the *operator* is allowed to manage the tokens of the *owner* (`true`)  or not (`false`)"
            }
          },
          "isApprovedForAllForAssets(address,address)": {
            "details": "See {setApprovalForAllForAssets}.",
            "params": {
              "operator": "Address of the account that we are checking whether it has the operator role or not",
              "owner": "Address of the account that we are checking for whether it has granted the operator role"
            },
            "returns": {
              "_0": "A boolean value indicating wehter the account we are checking has been granted the operator role"
            }
          },
          "isChildEquipped(uint256,address,uint256)": {
            "details": "This is used to prevent from transferring a child that is equipped.",
            "params": {
              "childAddress": "Address of the child token's smart contract",
              "childId": "ID of the child token",
              "tokenId": "ID of the parent token for which we are querying for"
            },
            "returns": {
              "_0": "A boolean value indicating whether the child token is equipped into the given token or not"
            }
          },
          "isContributor(address)": {
            "params": {
              "contributor": "Address of the contributor whose status we are checking"
            },
            "returns": {
              "_0": "Boolean value indicating whether the address is a contributor or not"
            }
          },
          "manageContributor(address,bool)": {
            "details": "Can only be called by the owner.Emits ***ContributorUpdate*** event.",
            "params": {
              "contributor": "Address of the contributor's account",
              "grantRole": "A boolean value signifying whether the contributor role is being granted (`true`) or revoked  (`false`)"
            }
          },
          "maxSupply()": {
            "returns": {
              "_0": "The maximum supply of tokens in the collection"
            }
          },
          "mint(address,uint256,string)": {
            "details": "The data value of the _safeMint method is set to an empty value.Can only be called while the open sale is open.",
            "params": {
              "numToMint": "Number of tokens to mint",
              "to": "Address to which to mint the token",
              "tokenURI": "URI assigned to all the minted tokens"
            },
            "returns": {
              "_0": "The ID of the first token to be minted in the current minting cycle"
            }
          },
          "name()": {
            "returns": {
              "_0": "Name of the collection"
            }
          },
          "nestMint(address,uint256,uint256,string)": {
            "details": "The \"data\" value of the \"_safeMint\" method is set to an empty value.Can only be called while the open sale is open.",
            "params": {
              "destinationId": "ID of the token into which to mint the new child token",
              "numToMint": "Number of tokens to mint",
              "to": "Address of the collection smart contract of the token into which to mint the child token",
              "tokenURI": "URI assigned to all the minted tokens"
            },
            "returns": {
              "_0": "The ID of the first token to be minted in the current minting cycle"
            }
          },
          "nestTransferFrom(address,address,uint256,uint256,bytes)": {
            "params": {
              "data": "Additional data with no specified format, sent in the addChild call",
              "destinationId": "ID of the token to receive the token being transferred",
              "from": "Address of the direct owner of the token to be transferred",
              "to": "Address of the receiving token's collection smart contract",
              "tokenId": "ID of the token being transferred"
            }
          },
          "owner()": {
            "returns": {
              "_0": "Address of the current owner"
            }
          },
          "ownerOf(uint256)": {
            "details": "The *root* owner of the token is an externally owned account (EOA). If the given token is child of another  NFT, this will return an EOA address. Otherwise, if the token is owned by an EOA, this EOA wil be returned.",
            "params": {
              "tokenId": "ID of the token for which the *root* owner has been retrieved"
            },
            "returns": {
              "_0": "The *root* owner of the token"
            }
          },
          "pendingChildOf(uint256,uint256)": {
            "details": "Returns a single Child struct locating at `index` of parent token's active child tokens array.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
            "params": {
              "index": "Index of the child token in the parent token's pending child tokens array",
              "parentId": "ID of the parent token for which the pending child token is being retrieved"
            },
            "returns": {
              "_0": "A Child struct containting data about the specified child"
            }
          },
          "pendingChildrenOf(uint256)": {
            "details": "Returns array of pending Child structs existing for given parent.The Child struct consists of the following values:  [      tokenId,      contractAddress  ]",
            "params": {
              "parentId": "ID of the parent token for which to retrieve the pending child tokens"
            },
            "returns": {
              "_0": "An array of Child structs containing the parent token's pending child tokens"
            }
          },
          "rejectAllAssets(uint256,uint256)": {
            "details": "Effecitvely deletes the pending array.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.Emits a {AssetRejected} event with assetId = 0.",
            "params": {
              "maxRejections": "Maximum number of expected assets to reject, used to prevent from rejecting assets which  arrive just before this operation.",
              "tokenId": "ID of the token of which to clear the pending array."
            }
          },
          "rejectAllChildren(uint256,uint256)": {
            "details": "Removes the children from the pending array mapping.This does not update the ownership storage data on children. If necessary, ownership can be reclaimed by the  rootOwner of the previous parent.Requirements: Requirements: - `parentId` must exist",
            "params": {
              "maxRejections": "Maximum number of expected children to reject, used to prevent from rejecting children which  arrive just before this operation.",
              "parentId": "ID of the parent token for which to reject all of the pending tokens."
            }
          },
          "rejectAsset(uint256,uint256,uint64)": {
            "details": "Removes the asset from the token's pending asset array.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - `index` must be in range of the length of the pending asset array.Emits a {AssetRejected} event.",
            "params": {
              "assetId": "ID of the asset that is being rejected",
              "index": "Index of the asset in the pending array to be rejected",
              "tokenId": "ID of the token that the asset is being rejected from"
            }
          },
          "renounceOwnership()": {
            "details": "Can only be called by the current owner.Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is  only available to the owner."
          },
          "royaltyInfo(uint256,uint256)": {
            "params": {
              "salePrice": "Price of the token sale",
              "tokenId": "ID of the token for which the royalty info is being retrieved"
            },
            "returns": {
              "receiver": "The beneficiary receiving royalties of the sale",
              "royaltyAmount": "The value of the royalties recieved by the `receiver` from the sale"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must exist and be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.Emits a {Transfer} event.",
            "params": {
              "from": "Address to transfer the tokens from",
              "to": "Address to transfer the tokens to",
              "tokenId": "ID of the token to transfer"
            }
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must exist and be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.  - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.Emits a {Transfer} event.",
            "params": {
              "data": "Additional data without a specified format to be sent along with the token transaction",
              "from": "Address to transfer the tokens from",
              "to": "Address to transfer the tokens to",
              "tokenId": "ID of the token to transfer"
            }
          },
          "setApprovalForAll(address,bool)": {
            "details": "Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.Requirements: - The `operator` cannot be the caller.Emits an {ApprovalForAll} event.",
            "params": {
              "approved": "A boolean value signifying whether the approval is being granted (`true`) or (`revoked`)",
              "operator": "Address of the operator being managed"
            }
          },
          "setApprovalForAllForAssets(address,bool)": {
            "details": "Operators can call {acceptAsset}, {rejectAsset}, {rejectAllAssets} or {setPriority} for any token  owned by the caller.Requirements:  - The `operator` cannot be the caller.Emits an {ApprovalForAllForAssets} event.",
            "params": {
              "approved": "The boolean value indicating whether the operator role is being granted (`true`) or revoked  (`false`)",
              "operator": "Address of the account to which the operator role is granted or revoked from"
            }
          },
          "setPriority(uint256,uint64[])": {
            "details": "The priority array is a non-sequential list of `uint64`s, where the lowest value is considered highest  priority.Value `0` of a priority is a special case equivalent to unitialized.Requirements:  - The caller must own the token or be approved to manage the token's assets  - `tokenId` must exist.  - The length of `priorities` must be equal the length of the active assets array.Emits a {AssetPrioritySet} event.",
            "params": {
              "priorities": "An array of priority values",
              "tokenId": "ID of the token to set the priorities for"
            }
          },
          "setValidParentForEquippableGroup(uint64,address,uint64)": {
            "params": {
              "equippableGroupId": "ID of the equippable group",
              "parentAddress": "Address of the parent into which the equippable group can be equipped into",
              "partId": "ID of the `Slot` that the items belonging to the equippable group can be equipped into"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "symbol()": {
            "returns": {
              "_0": "Symbol of the collection"
            }
          },
          "tokenURI(uint256)": {
            "params": {
              "tokenId": "ID of the token to retrieve the metadata URI for"
            },
            "returns": {
              "_0": "Metadata URI of the specified token"
            }
          },
          "totalAssets()": {
            "returns": {
              "_0": "The total number of assets"
            }
          },
          "totalSupply()": {
            "returns": {
              "_0": "The number of tokens in a collection"
            }
          },
          "transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": {
            "details": "When transferring a child token, the owner of the token is set to `to`, or is not updated in the event of  `to` being the `0x0` address.",
            "params": {
              "childAddress": "Address of the child token's collection smart contract.",
              "childId": "ID of the child token in its own collection smart contract.",
              "childIndex": "Index of a token we are transferring, in the array it belongs to (can be either active array or  pending array)",
              "data": "Additional data with no specified format, sent in call to `_to`",
              "destinationId": "ID of the token to receive this child token (MUST be 0 if the destination is not a token)",
              "isPending": "A boolean value indicating whether the child token being transferred is in the pending array of  the parent token (`true`) or in the active array (`false`)",
              "to": "Address to which to transfer the token to",
              "tokenId": "ID of the parent token from which the child token is being transferred"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Requirements:  - `from` cannot be the zero address.  - `to` cannot be the zero address.  - `tokenId` token must be owned by `from`.  - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.Emits a {Transfer} event.",
            "params": {
              "from": "Address from which to transfer the token from",
              "to": "Address to which to transfer the token to",
              "tokenId": "ID of the token to transfer"
            }
          },
          "transferOwnership(address)": {
            "details": "Can only be called by the current owner.",
            "params": {
              "newOwner": "Address of the new owner's account"
            }
          },
          "unequip(uint256,uint64,uint64)": {
            "details": "This can only be called by the owner of the token or by an account that has been granted permission to  manage the given token by the current owner.",
            "params": {
              "assetId": "ID of the parent's asset that contains the `Slot` into which the child is equipped",
              "slotPartId": "ID of the `Slot` from which to unequip the child",
              "tokenId": "ID of the parent from which the child is being unequipped"
            }
          },
          "updateRoyaltyRecipient(address)": {
            "details": "Custom access control has to be implemented to ensure that only the intended actors can update the  beneficiary.",
            "params": {
              "newRoyaltyRecipient": "Address of the new recipient of royalties"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "VERSION()": {
            "notice": "Version of the @rmrk-team/evm-contracts package"
          },
          "acceptAsset(uint256,uint256,uint64)": {
            "notice": "Accepts a asset at from the pending array of given token."
          },
          "acceptChild(uint256,uint256,address,uint256)": {
            "notice": "Used to accept a pending child token for a given parent token."
          },
          "addAssetEntry(string)": {
            "notice": "Used to add a asset entry."
          },
          "addAssetToToken(uint256,uint64,uint64)": {
            "notice": "Used to add an asset to a token."
          },
          "addChild(uint256,uint256,bytes)": {
            "notice": "Used to add a child token to a given parent token."
          },
          "addEquippableAssetEntry(uint64,address,string,uint64[])": {
            "notice": "Used to add an equippable asset entry."
          },
          "approve(address,uint256)": {
            "notice": "Used to grant a one-time approval to manage one's token."
          },
          "approveForAssets(address,uint256)": {
            "notice": "Used to grant approvals for specific tokens to a specified address."
          },
          "balanceOf(address)": {
            "notice": "Used to retrieve the number of tokens in `owner`'s account."
          },
          "burn(uint256)": {
            "notice": "Used to burn a given token."
          },
          "burn(uint256,uint256)": {
            "notice": "Used to burn a given token."
          },
          "canTokenBeEquippedWithAssetIntoSlot(address,uint256,uint64,uint64)": {
            "notice": "Used to verify whether a token can be equipped into a given parent's slot."
          },
          "childOf(uint256,uint256)": {
            "notice": "Used to retrieve a specific active child token for a given parent token."
          },
          "childrenOf(uint256)": {
            "notice": "Used to retrieve the active child tokens of a given parent token."
          },
          "collectionMetadata()": {
            "notice": "Used to retrieve the metadata of the collection."
          },
          "directOwnerOf(uint256)": {
            "notice": "Used to retrieve the immediate owner of the given token."
          },
          "equip((uint256,uint256,uint64,uint64,uint64))": {
            "notice": "Used to equip a child into a token."
          },
          "getActiveAssetPriorities(uint256)": {
            "notice": "Used to retrieve the priorities of the active resoources of a given token."
          },
          "getActiveAssets(uint256)": {
            "notice": "Used to retrieve IDs of the active assets of given token."
          },
          "getApproved(uint256)": {
            "notice": "Used to retrieve the account approved to manage given token."
          },
          "getApprovedForAssets(uint256)": {
            "notice": "Used to get the address of the user that is approved to manage the specified token from the current  owner."
          },
          "getAssetAndEquippableData(uint256,uint64)": {
            "notice": "Used to get the asset and equippable data associated with given `assetId`."
          },
          "getAssetMetadata(uint256,uint64)": {
            "notice": "Used to fetch the asset metadata of the specified token's active asset with the given index."
          },
          "getAssetReplacements(uint256,uint64)": {
            "notice": "Used to retrieve the asset that will be replaced if a given asset from the token's pending array  is accepted."
          },
          "getEquipment(uint256,address,uint64)": {
            "notice": "Used to get the Equipment object equipped into the specified slot of the desired token."
          },
          "getPendingAssets(uint256)": {
            "notice": "Used to retrieve IDs of the pending assets of given token."
          },
          "getRoyaltyPercentage()": {
            "notice": "Used to retrieve the specified royalty percentage."
          },
          "getRoyaltyRecipient()": {
            "notice": "Used to retrieve the recipient of royalties."
          },
          "isApprovedForAll(address,address)": {
            "notice": "Used to check if the given address is allowed to manage the tokens of the specified address."
          },
          "isApprovedForAllForAssets(address,address)": {
            "notice": "Used to check whether the address has been granted the operator role by a given address or not."
          },
          "isChildEquipped(uint256,address,uint256)": {
            "notice": "Used to check whether the token has a given child equipped."
          },
          "isContributor(address)": {
            "notice": "Used to check if the address is one of the contributors."
          },
          "manageContributor(address,bool)": {
            "notice": "Adds or removes a contributor to the smart contract."
          },
          "maxSupply()": {
            "notice": "Used to retrieve the maximum supply of the collection."
          },
          "mint(address,uint256,string)": {
            "notice": "Used to mint the desired number of tokens to the specified address."
          },
          "name()": {
            "notice": "Used to retrieve the collection name."
          },
          "nestMint(address,uint256,uint256,string)": {
            "notice": "Used to mint a desired number of child tokens to a given parent token."
          },
          "nestTransferFrom(address,address,uint256,uint256,bytes)": {
            "notice": "Used to transfer the token into another token."
          },
          "owner()": {
            "notice": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "notice": "Used to retrieve the *root* owner of a given token."
          },
          "pendingChildOf(uint256,uint256)": {
            "notice": "Used to retrieve a specific pending child token from a given parent token."
          },
          "pendingChildrenOf(uint256)": {
            "notice": "Used to retrieve the pending child tokens of a given parent token."
          },
          "rejectAllAssets(uint256,uint256)": {
            "notice": "Rejects all assets from the pending array of a given token."
          },
          "rejectAllChildren(uint256,uint256)": {
            "notice": "Used to reject all pending children of a given parent token."
          },
          "rejectAsset(uint256,uint256,uint64)": {
            "notice": "Rejects a asset from the pending array of given token."
          },
          "renounceOwnership()": {
            "notice": "Leaves the contract without owner. Functions using the `onlyOwner` modifier will be disabled."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "Used to retrieve the information about who shall receive royalties of a sale of the specified token and  how much they will be."
          },
          "safeTransferFrom(address,address,uint256)": {
            "notice": "Used to safely transfer a given token token from `from` to `to`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "notice": "Used to safely transfer a given token token from `from` to `to`."
          },
          "setApprovalForAll(address,bool)": {
            "notice": "Used to approve or remove `operator` as an operator for the caller."
          },
          "setApprovalForAllForAssets(address,bool)": {
            "notice": "Used to add or remove an operator of assets for the caller."
          },
          "setPriority(uint256,uint64[])": {
            "notice": "Sets a new priority array for a given token."
          },
          "setValidParentForEquippableGroup(uint64,address,uint64)": {
            "notice": "Used to declare that the assets belonging to a given `equippableGroupId` are equippable into the `Slot`  associated with the `partId` of the collection at the specified `parentAddress`"
          },
          "symbol()": {
            "notice": "Used to retrieve the collection symbol."
          },
          "tokenURI(uint256)": {
            "notice": "Used to retrieve the metadata URI of a token."
          },
          "totalAssets()": {
            "notice": "Used to retrieve the total number of assets."
          },
          "totalSupply()": {
            "notice": "Used to retrieve the total supply of the tokens in a collection."
          },
          "transferChild(uint256,address,uint256,uint256,address,uint256,bool,bytes)": {
            "notice": "Used to transfer a child token from a given parent token."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Transfers a given token from `from` to `to`."
          },
          "transferOwnership(address)": {
            "notice": "Transfers ownership of the contract to a new owner."
          },
          "unequip(uint256,uint64,uint64)": {
            "notice": "Used to unequip child from parent token."
          },
          "updateRoyaltyRecipient(address)": {
            "notice": "Used to update recipient of royalties."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@latticexyz/=node_modules/@latticexyz/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@rmrk-team/=node_modules/@rmrk-team/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/EquipableShip.sol": "EquipableShip"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/EquipableShip.sol": {
        "keccak256": "0xd9ebdccd284622c8a51de02ed3b37b155c09e9e9d620c760bee55364b409192a",
        "urls": [
          "bzz-raw://ff0a84cca8ae6c0530b9e5e1de9781a83dd489cfceda4ea98c908a56d48075dc",
          "dweb:/ipfs/QmVbPm6sEVSTtTL4cQTQwNgpHLm85vVXFAcd2nPWWVyr7R"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol": {
        "keccak256": "0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c",
        "urls": [
          "bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890",
          "dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/access/Ownable.sol": {
        "keccak256": "0x7c46c3ab469e5f6b95fc1126946b03708bb9d0943da3a4f97bf4d94309cc5c67",
        "urls": [
          "bzz-raw://d91938cd5c1fb62551e40cb27c2dbc54ba28e4d844fc1f66e10aab9d96b1f308",
          "dweb:/ipfs/QmevebZjAcMqW4URCczoW9QxTo8x8zCwfVemuRLow3a4Uq"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/catalog/IRMRKCatalog.sol": {
        "keccak256": "0xf14074edcd3bcef665f17659d206465bd9ea5cd7999acf28065e623f88f04a86",
        "urls": [
          "bzz-raw://c967f0cc9fbf3dd16f8759d051220e750b8fca69ec503f33bf25c95ef5486403",
          "dweb:/ipfs/QmecpKwQKAPrd85Pi2jKTWfEjFrg2ZudjmMNEFhtxRbrat"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/core/RMRKCore.sol": {
        "keccak256": "0x2aed82db53e50724cefa3ee8ca62e7b9e4fb170a2b324cd5f518914480ba9b5b",
        "urls": [
          "bzz-raw://962a4c262e1710c8b0f3bb94f77513ee3aa1e561c85d9acb06960f36ede3bba7",
          "dweb:/ipfs/QmTQKxurANXy8HCtdLLcaxfwCPMoVJPKpYxtsj9CwiYQaZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/IERC6220.sol": {
        "keccak256": "0x4fcd6ea56d18b4daee46873794c002ad78160ba4a07d4f49362313c38ec0e28a",
        "urls": [
          "bzz-raw://bbc28006dd8439bc0e1f332679d36a4c8b8a46ae2e4f37a5e4c0bdaaab85655e",
          "dweb:/ipfs/QmU1eN6R97EhpUUsQWD4qoz3KCsyMHZ8GvihVPnAoEk5dU"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKEquippable.sol": {
        "keccak256": "0x6bfea49c4d924f83e0c0b8e63b6f81953f28b6433b36bbf9678828bf32662cb0",
        "urls": [
          "bzz-raw://8d70c5eed89802d32821b12c4b2ce76fdbba20eb211dbdf4570a334cb5f93c62",
          "dweb:/ipfs/QmV1GfvqPSaxnzTB5fnjpDYPe9BqxBnts7sWKNWyK5p3pp"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/equippable/RMRKMinifiedEquippable.sol": {
        "keccak256": "0x7c2d756ea5956cd7c479c611d04082ef4267b8e65e99b884b84e08d7fb685c2c",
        "urls": [
          "bzz-raw://11645970f49c04f04b316c312b597138d9277cb0d7bfce4a21a06c34d8be0f68",
          "dweb:/ipfs/QmYAUiH4fpYPWwiuLHTMpDXEtp7Vbieoo3XaAee4BUBG8c"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/extension/RMRKRoyalties.sol": {
        "keccak256": "0xf744b49d208b4d1e6c00ceb4650cb2c9e6b1ef547d4aaf80045f398b1154a4a6",
        "urls": [
          "bzz-raw://896b29ade2d173ed093d94bc3d2880b748c37bf050dfac6bf1db42e035258203",
          "dweb:/ipfs/QmXbK7E3LTKxGquetSn5tWFpiFDDjFBWW4Lw7KwgT1x4T4"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/extension/soulbound/IERC6454.sol": {
        "keccak256": "0xc454f771a51a947da311e00a7b290f635f94b191cc036fc5211bc631155cbabb",
        "urls": [
          "bzz-raw://b880a1aa41b2a90d4bab0935924a606b394212bf0ce9e7cabcb097f3c57ccdae",
          "dweb:/ipfs/QmWjHUxLtyiUVRupZGK6nvhoXdUUZPZHu3JZUcfEJC2dKf"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/extension/soulbound/RMRKSoulbound.sol": {
        "keccak256": "0x78c225ae45a537ec8c9fe97911c9fd6b8817bc4342c8ee4c86129122afb6c8b8",
        "urls": [
          "bzz-raw://fcb7391183fa9ebadfa5a2bfa4c16300e65b73386125bbddc2b412a746f443f7",
          "dweb:/ipfs/QmPo5sjgKGssMvnsCexQyqZfhnGm47vRNPsa9PTbfVnKHX"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKErrors.sol": {
        "keccak256": "0x7d6a3648047dca37d1e21550c723d960e4c9d3783e3d0efb84602266cce45b35",
        "urls": [
          "bzz-raw://170064f8e2d6211e251a7610236beada23c8c598987cb3dbd62826007a4ca553",
          "dweb:/ipfs/QmSgM9T5Q2azFicGQsiXPG8YZSiDEGgRYeHBUe2iAcP3gN"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/library/RMRKLib.sol": {
        "keccak256": "0x953bb028766f17fdafddd5a49b47d76058c4a8e18dee358a51ebe6a2927033db",
        "urls": [
          "bzz-raw://40bb3aec2b5942591536a3d4428cb08154f7ab80d3b94c3e4ccf85ca053606d8",
          "dweb:/ipfs/QmdyYsoYthTGFjcEQ35Ra57qmywiXh6UxDCyvAJZGKsUJH"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/AbstractMultiAsset.sol": {
        "keccak256": "0x6fe69bc7dcd8a51af76e294101955f216d486385db5cf5ff52d6c227c68a2deb",
        "urls": [
          "bzz-raw://3f75b0fda22fadeb0072c488dd77167796dce09b69886d3506dff95347c08708",
          "dweb:/ipfs/QmcdMSEq8zBsQVF9Kw2HQageFaCr4pDh7raAEBMdGaSyWb"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/multiasset/IERC5773.sol": {
        "keccak256": "0x4e5b78824f54620c5b610a5e2c944cd159b8b054065fabf3af2aaea2f3360d89",
        "urls": [
          "bzz-raw://713b179262117f3ff772aed51aa26e48bf7e3ff5c7ec6588060a887e634fe0f1",
          "dweb:/ipfs/Qme2B9DrgB93HPQy96Pia23jzrkdmUrVQPHdAqCxA8dzYY"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/IERC7401.sol": {
        "keccak256": "0x5feb73f09676b2961b45e5f165d95ff8197609e01e115590a627a47940690fb3",
        "urls": [
          "bzz-raw://93ea41ba10af02b385dbbe036e85f286f6f923e8adea11eb28ed21890a1fe953",
          "dweb:/ipfs/QmRgJKeYyh8VNNtdKF5Pcyei1qKDKNE5zmvXRt3Txoapfo"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/nestable/RMRKNestable.sol": {
        "keccak256": "0x97d3668f636376f3235ab4a8ffd44b0dd031d04d0d7f09ff65f850a747d959ae",
        "urls": [
          "bzz-raw://e8071f816bc1d03ef7848bc6df0c0990f1fb2d972a736f9444824e058b93ed45",
          "dweb:/ipfs/QmZdgThWs3hdq7ZXJhgc3519vR2x2knwm9ULUfYVroRoHj"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/security/ReentrancyGuard.sol": {
        "keccak256": "0x14a91bf4e2ca7a5423b903c551aedb08c98f9d089e429998f9711286c0c17882",
        "urls": [
          "bzz-raw://4e07319bbc8447047f9fa596d1af95ab5d235661b5f48159eaee6144d45261f0",
          "dweb:/ipfs/QmdAvUL5jmAx9ExoyR6199KUmkXfd8q4SfBuvJXygKHNbx"
        ],
        "license": "MIT"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/IRMRKCollectionData.sol": {
        "keccak256": "0xacd422c1f395c79a05f2f8d066b3727408b8689394a2ca1c5f274c02ef9d0d03",
        "urls": [
          "bzz-raw://2ee4e329828e1cbfb1b02711bb08204bb8dae51309fdc5e80c6ea33c157ad3fc",
          "dweb:/ipfs/QmNMaAbcpK8XFfnjnA4inqq4BiYAEMQSTUjBRfL5BJoHc3"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKEquipRenderUtils.sol": {
        "keccak256": "0x47f85488065ed8420aa1609ec2fc767b04cb45d248b2b28665a23b0358ce862d",
        "urls": [
          "bzz-raw://43bf29f79de4d66059e3d2713b62574beecf0eb2d46a0a6b270e89bb7ce76610",
          "dweb:/ipfs/QmXeZwiPYS7svRZk1xDQfx4nQwipkFTnjSaCPBRDumyiok"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKMultiAssetRenderUtils.sol": {
        "keccak256": "0xb4b35e43916d350bdf014895099bea81d398241ce2ad34b02fb1adaaa49002a6",
        "urls": [
          "bzz-raw://bbdf9825e329a9590b5d89b471c1582dc768c5954f60c74bd1b4f7269b283295",
          "dweb:/ipfs/QmSneyQpXcr3DRQoVXFu22vvd2vpbrGkFtESnKme9oJ9XV"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKNestableRenderUtils.sol": {
        "keccak256": "0x726f94e9e77e4627f3af1df114a701b0d42fa3bfe546b81e914a84e3690d6352",
        "urls": [
          "bzz-raw://2e6278d3e5f914a1094198b41e60e004d78cda72c1a2917aefd3659487bf78b1",
          "dweb:/ipfs/QmQFYvRGvARvqRLPagCM6EwtLBs3UcGn1Ya4xG9wtauEnY"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKRenderUtils.sol": {
        "keccak256": "0x65bb98d53697d05ecee5aa9ef08790e86fbdb4d80ca3af805f16e1bcf549012d",
        "urls": [
          "bzz-raw://38767d1762e288b70d2714b00b9419c73dbd6a9c23639e9afb6de04c4a6cb685",
          "dweb:/ipfs/QmZrLqhDSH8VcnDxn6aFBNTtkNJbHGRwc3qkmNgfL5iLoh"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/implementations/abstract/RMRKAbstractEquippable.sol": {
        "keccak256": "0x0d61ad2493dd5b867d94a0a0413b280952ea588b42e2184ca6e7c1ab6de086bd",
        "urls": [
          "bzz-raw://00eb350ef9e89c56cc5b869fffc7594039a1d889cf84d41587f3c581e6684cc7",
          "dweb:/ipfs/QmcZmdeghW4NBck12J1e5Sq1zUk8Wz1AvsZ2JyAEVUvpZU"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/implementations/utils/RMRKImplementationBase.sol": {
        "keccak256": "0x56657e977934e300a17ad4db49f01730abcefed4f6eba3549b951e14dda18d5e",
        "urls": [
          "bzz-raw://585ccce5f8bab950cafad9f5d003443bddd2053357aa4a1f9bd73fbf3f421a77",
          "dweb:/ipfs/QmZocW2chh1gfFQyHpFKWpYJK2vapqtC2yVcq13XFDYNFG"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@rmrk-team/evm-contracts/contracts/implementations/utils/RMRKTokenURIPerToken.sol": {
        "keccak256": "0x5936347fe96ec79b49f9a6c62195ca1dda40b62490403a8b7a5ccab971b77b03",
        "urls": [
          "bzz-raw://502f87f93f5fbba37d1908be07ced4e881bafad90d8365c9bada3791e52db5ab",
          "dweb:/ipfs/QmeTVo2fhREx4gihZdu4mPAkMtNo4B5ur5iJLohg2gJB1z"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/EquipableShip.sol",
    "id": 208,
    "exportedSymbols": {
      "AbstractMultiAsset": [
        34689
      ],
      "Address": [
        28171
      ],
      "Context": [
        28193
      ],
      "ERC721AddressZeroIsNotaValidOwner": [
        33549
      ],
      "ERC721ApprovalToCurrentOwner": [
        33552
      ],
      "ERC721ApproveCallerIsNotOwnerNorApprovedForAll": [
        33555
      ],
      "ERC721ApproveToCaller": [
        33561
      ],
      "ERC721ApprovedQueryForNonexistentToken": [
        33558
      ],
      "ERC721InvalidTokenId": [
        33564
      ],
      "ERC721MintToTheZeroAddress": [
        33567
      ],
      "ERC721NotApprovedOrOwner": [
        33570
      ],
      "ERC721TokenAlreadyMinted": [
        33573
      ],
      "ERC721TransferFromIncorrectOwner": [
        33576
      ],
      "ERC721TransferToNonReceiverImplementer": [
        33579
      ],
      "ERC721TransferToTheZeroAddress": [
        33582
      ],
      "EquipableShip": [
        207
      ],
      "IERC165": [
        28205
      ],
      "IERC2981": [
        27680
      ],
      "IERC5773": [
        34868
      ],
      "IERC6220": [
        28682
      ],
      "IERC6454": [
        33465
      ],
      "IERC721": [
        27796
      ],
      "IERC721Metadata": [
        27841
      ],
      "IERC721Receiver": [
        27814
      ],
      "IERC7401": [
        35078
      ],
      "IRMRKCatalog": [
        28530
      ],
      "IRMRKCollectionData": [
        37462
      ],
      "Ownable": [
        28413
      ],
      "RMRKAbstractEquippable": [
        41049
      ],
      "RMRKApprovalForAssetsToCurrentOwner": [
        33585
      ],
      "RMRKApproveForAssetsCallerIsNotOwnerNorApprovedForAll": [
        33588
      ],
      "RMRKAssetAlreadyExists": [
        33745
      ],
      "RMRKBadConfig": [
        33591
      ],
      "RMRKBadPriorityListLength": [
        33594
      ],
      "RMRKCanOnlyDoBulkOperationsOnOwnedTokens": [
        33784
      ],
      "RMRKCanOnlyDoBulkOperationsWithOneTokenAtATime": [
        33787
      ],
      "RMRKCannotTransferSoulbound": [
        33600
      ],
      "RMRKCatalogRequiredForParts": [
        33597
      ],
      "RMRKChildAlreadyExists": [
        33603
      ],
      "RMRKChildIndexOutOfRange": [
        33606
      ],
      "RMRKChildNotFoundInParent": [
        33609
      ],
      "RMRKCollaboratorArraysNotEqualLength": [
        33612
      ],
      "RMRKCollectionAlreadyRegistered": [
        33615
      ],
      "RMRKCollectionNotRegistered": [
        33618
      ],
      "RMRKCore": [
        28541
      ],
      "RMRKEquipRenderUtils": [
        39294
      ],
      "RMRKEquippable": [
        29630
      ],
      "RMRKEquippableEquipNotAllowedByCatalog": [
        33621
      ],
      "RMRKExpiredDeadline": [
        33624
      ],
      "RMRKIdZeroForbidden": [
        33627
      ],
      "RMRKImplementationBase": [
        41230
      ],
      "RMRKIndexOutOfRange": [
        33630
      ],
      "RMRKInvalidChildReclaim": [
        33633
      ],
      "RMRKInvalidSignature": [
        33636
      ],
      "RMRKIsNotContract": [
        33639
      ],
      "RMRKLib": [
        33873
      ],
      "RMRKLocked": [
        33642
      ],
      "RMRKMaxPendingAssetsReached": [
        33648
      ],
      "RMRKMaxPendingChildrenReached": [
        33645
      ],
      "RMRKMaxRecursiveBurnsReached": [
        33655
      ],
      "RMRKMinifiedEquippable": [
        33350
      ],
      "RMRKMintOverMax": [
        33658
      ],
      "RMRKMintToNonRMRKNestableImplementer": [
        33661
      ],
      "RMRKMintZero": [
        33664
      ],
      "RMRKMismachedArrayLength": [
        33667
      ],
      "RMRKMultiAssetRenderUtils": [
        39821
      ],
      "RMRKMustUnequipFirst": [
        33670
      ],
      "RMRKNestable": [
        37368
      ],
      "RMRKNestableRenderUtils": [
        40496
      ],
      "RMRKNestableTooDeep": [
        33673
      ],
      "RMRKNestableTransferToDescendant": [
        33676
      ],
      "RMRKNestableTransferToNonRMRKNestableImplementer": [
        33679
      ],
      "RMRKNestableTransferToSelf": [
        33682
      ],
      "RMRKNewContributorIsZeroAddress": [
        33724
      ],
      "RMRKNewOwnerIsZeroAddress": [
        33721
      ],
      "RMRKNoAssetMatchingId": [
        33685
      ],
      "RMRKNotApprovedForAssetsOrOwner": [
        33688
      ],
      "RMRKNotApprovedOrDirectOwner": [
        33691
      ],
      "RMRKNotCollectionCollaborator": [
        33694
      ],
      "RMRKNotCollectionIssuer": [
        33697
      ],
      "RMRKNotCollectionIssuerOrCollaborator": [
        33700
      ],
      "RMRKNotComposableAsset": [
        33703
      ],
      "RMRKNotEquipped": [
        33706
      ],
      "RMRKNotOwner": [
        33709
      ],
      "RMRKNotOwnerOrContributor": [
        33712
      ],
      "RMRKNotSpecificAddress": [
        33715
      ],
      "RMRKNotTokenOwner": [
        33718
      ],
      "RMRKOwnableNotImplemented": [
        33727
      ],
      "RMRKParentIsNotNFT": [
        33730
      ],
      "RMRKPartAlreadyExists": [
        33733
      ],
      "RMRKPartDoesNotExist": [
        33736
      ],
      "RMRKPartIsNotSlot": [
        33739
      ],
      "RMRKPendingChildIndexOutOfRange": [
        33742
      ],
      "RMRKRenderUtils": [
        40830
      ],
      "RMRKRoyalties": [
        33446
      ],
      "RMRKRoyaltiesTooHigh": [
        33781
      ],
      "RMRKSlotAlreadyUsed": [
        33748
      ],
      "RMRKSoulbound": [
        33544
      ],
      "RMRKTargetAssetCannotReceiveSlot": [
        33751
      ],
      "RMRKTokenCannotBeEquippedWithAssetIntoSlot": [
        33754
      ],
      "RMRKTokenDoesNotHaveAsset": [
        33757
      ],
      "RMRKTokenHasNoAssets": [
        33760
      ],
      "RMRKTokenURIPerToken": [
        41266
      ],
      "RMRKUnexpectedAssetId": [
        33772
      ],
      "RMRKUnexpectedChildId": [
        33763
      ],
      "RMRKUnexpectedNumberOfAssets": [
        33766
      ],
      "RMRKUnexpectedNumberOfChildren": [
        33769
      ],
      "RMRKUnexpectedParent": [
        33775
      ],
      "RMRKWrongValueSent": [
        33790
      ],
      "RMRKZeroLengthIdsPassed": [
        33778
      ],
      "ReentrancyGuard": [
        37419
      ],
      "RentrantCall": [
        37372
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:3503:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "33:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "58:96:0",
        "nodes": [],
        "absolutePath": "node_modules/@rmrk-team/evm-contracts/contracts/implementations/abstract/RMRKAbstractEquippable.sol",
        "file": "@rmrk-team/evm-contracts/contracts/implementations/abstract/RMRKAbstractEquippable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 208,
        "sourceUnit": 41050,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "155:91:0",
        "nodes": [],
        "absolutePath": "node_modules/@rmrk-team/evm-contracts/contracts/implementations/utils/RMRKTokenURIPerToken.sol",
        "file": "@rmrk-team/evm-contracts/contracts/implementations/utils/RMRKTokenURIPerToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 208,
        "sourceUnit": 41267,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "247:80:0",
        "nodes": [],
        "absolutePath": "node_modules/@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKEquipRenderUtils.sol",
        "file": "@rmrk-team/evm-contracts/contracts/RMRK/utils/RMRKEquipRenderUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 208,
        "sourceUnit": 39295,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 207,
        "nodeType": "ContractDefinition",
        "src": "329:3206:0",
        "nodes": [
          {
            "id": 25,
            "nodeType": "StructDefinition",
            "src": "406:227:0",
            "nodes": [],
            "canonicalName": "EquipableShip.Specs",
            "members": [
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "MOVE_SPEED",
                "nameLocation": "436:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "429:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "MOVE_ANGLE_SPEED",
                "nameLocation": "463:16:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "456:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "456:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "SHIP_MASS",
                "nameLocation": "496:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "489:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "489:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "LINEAR_DAMPING",
                "nameLocation": "522:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "515:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "515:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "ANGULAR_DAMPING",
                "nameLocation": "553:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "546:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "546:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "FIRE_RATE",
                "nameLocation": "585:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "578:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "578:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "WEAPON_OFFSET",
                "nameLocation": "613:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "604:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_int16_$3_storage_ptr",
                  "typeString": "int16[3]"
                },
                "typeName": {
                  "baseType": {
                    "id": 21,
                    "name": "int16",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "id": 23,
                  "length": {
                    "hexValue": "33",
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "610:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "604:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int16_$3_storage_ptr",
                    "typeString": "int16[3]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Specs",
            "nameLocation": "413:5:0",
            "scope": 207,
            "visibility": "public"
          },
          {
            "id": 28,
            "nodeType": "VariableDeclaration",
            "src": "655:18:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "adb7c3f7",
            "mutability": "mutable",
            "name": "specs",
            "nameLocation": "668:5:0",
            "scope": 207,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Specs_$25_storage",
              "typeString": "struct EquipableShip.Specs"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Specs",
                "nameLocations": [
                  "655:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25,
                "src": "655:5:0"
              },
              "referencedDeclaration": 25,
              "src": "655:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Specs_$25_storage_ptr",
                "typeString": "struct EquipableShip.Specs"
              }
            },
            "visibility": "public"
          },
          {
            "id": 90,
            "nodeType": "FunctionDefinition",
            "src": "699:533:0",
            "nodes": [],
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1023:209:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "WEAPON_OFFSET",
                      "nameLocation": "1049:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "1033:29:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int16_$3_memory_ptr",
                        "typeString": "int16[3]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 54,
                          "name": "int16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1033:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int16",
                            "typeString": "int16"
                          }
                        },
                        "id": 55,
                        "length": {
                          "hexValue": "33",
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1039:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "1033:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int16_$3_storage_ptr",
                          "typeString": "int16[3]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1033:29:0"
                },
                {
                  "expression": {
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 58,
                        "name": "WEAPON_OFFSET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1072:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int16_$3_memory_ptr",
                          "typeString": "int16[3] memory"
                        }
                      },
                      "id": 60,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1086:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1072:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int16",
                        "typeString": "int16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1091:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1072:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:20:0"
                },
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 64,
                        "name": "WEAPON_OFFSET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1102:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int16_$3_memory_ptr",
                          "typeString": "int16[3] memory"
                        }
                      },
                      "id": 66,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1116:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1102:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int16",
                        "typeString": "int16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1121:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1102:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:20:0"
                },
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 70,
                        "name": "WEAPON_OFFSET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1132:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int16_$3_memory_ptr",
                          "typeString": "int16[3] memory"
                        }
                      },
                      "id": 72,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1146:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1132:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int16",
                        "typeString": "int16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "1151:2:0",
                      "subExpression": {
                        "hexValue": "33",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1152:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_minus_3_by_1",
                        "typeString": "int_const -3"
                      }
                    },
                    "src": "1132:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:21:0"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77,
                      "name": "specs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1163:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Specs_$25_storage",
                        "typeString": "struct EquipableShip.Specs storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31303030",
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1177:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        {
                          "hexValue": "35303030",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1183:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5000_by_1",
                            "typeString": "int_const 5000"
                          },
                          "value": "5000"
                        },
                        {
                          "hexValue": "31303030",
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1189:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        {
                          "hexValue": "3530",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1195:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        {
                          "hexValue": "313530",
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1199:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150_by_1",
                            "typeString": "int_const 150"
                          },
                          "value": "150"
                        },
                        {
                          "hexValue": "3338303030",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1204:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_38000_by_1",
                            "typeString": "int_const 38000"
                          },
                          "value": "38000"
                        },
                        {
                          "id": 85,
                          "name": "WEAPON_OFFSET",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1211:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int16_$3_memory_ptr",
                            "typeString": "int16[3] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          {
                            "typeIdentifier": "t_rational_5000_by_1",
                            "typeString": "int_const 5000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          {
                            "typeIdentifier": "t_rational_150_by_1",
                            "typeString": "int_const 150"
                          },
                          {
                            "typeIdentifier": "t_rational_38000_by_1",
                            "typeString": "int_const 38000"
                          },
                          {
                            "typeIdentifier": "t_array$_t_int16_$3_memory_ptr",
                            "typeString": "int16[3] memory"
                          }
                        ],
                        "id": 78,
                        "name": "Specs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1171:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Specs_$25_storage_ptr_$",
                          "typeString": "type(struct EquipableShip.Specs storage pointer)"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1171:54:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Specs_$25_memory_ptr",
                        "typeString": "struct EquipableShip.Specs memory"
                      }
                    },
                    "src": "1163:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Specs_$25_storage",
                      "typeString": "struct EquipableShip.Specs storage ref"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:62:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 43,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "938:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 44,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "944:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 45,
                    "name": "collectionMetadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "952:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 46,
                    "name": "maxSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "972:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 47,
                    "name": "royaltyRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "983:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 48,
                    "name": "royaltyPercentageBps",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "1001:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  }
                ],
                "id": 49,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 42,
                  "name": "RMRKImplementationBase",
                  "nameLocations": [
                    "915:22:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41230,
                  "src": "915:22:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "915:107:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "734:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "720:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "762:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "748:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "collectionMetadata",
                  "nameLocation": "792:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "778:32:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "maxSupply",
                  "nameLocation": "828:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "820:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "royaltyRecipient",
                  "nameLocation": "855:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "847:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "royaltyPercentageBps",
                  "nameLocation": "888:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "881:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:204:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1023:0:0"
            },
            "scope": 207,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 139,
            "nodeType": "FunctionDefinition",
            "src": "1766:469:0",
            "nodes": [],
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "1913:322:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    105,
                    107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "nextToken",
                      "nameLocation": "1932:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 138,
                      "src": "1924:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1924:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 107,
                      "mutability": "mutable",
                      "name": "totalSupplyOffset",
                      "nameLocation": "1951:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 138,
                      "src": "1943:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1943:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 109,
                        "name": "numToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1985:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 108,
                      "name": "_prepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41229,
                      "src": "1972:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1972:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1923:72:0"
                },
                {
                  "body": {
                    "id": 134,
                    "nodeType": "Block",
                    "src": "2059:143:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 120,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "2086:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 121,
                              "name": "tokenURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "2089:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 119,
                            "name": "_setTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41265,
                            "src": "2073:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2073:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 123,
                        "nodeType": "ExpressionStatement",
                        "src": "2073:25:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 125,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "2122:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 126,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "2126:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2129:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 124,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30339,
                            "src": "2112:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes memory)"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2112:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "2112:20:0"
                      },
                      {
                        "id": 133,
                        "nodeType": "UncheckedBlock",
                        "src": "2146:46:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "2174:3:0",
                              "subExpression": {
                                "id": 130,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "2176:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 132,
                            "nodeType": "ExpressionStatement",
                            "src": "2174:3:0"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 116,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2034:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 117,
                      "name": "totalSupplyOffset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "2038:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2034:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 135,
                  "initializationExpression": {
                    "assignments": [
                      113
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2019:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "2011:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2011:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 115,
                    "initialValue": {
                      "id": 114,
                      "name": "nextToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "2023:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2011:21:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2006:196:0"
                },
                {
                  "expression": {
                    "id": 136,
                    "name": "nextToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 105,
                    "src": "2219:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 103,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "2212:16:0"
                }
              ]
            },
            "documentation": {
              "id": 91,
              "nodeType": "StructuredDocumentation",
              "src": "1285:476:0",
              "text": " @notice Used to mint the desired number of tokens to the specified address.\n @dev The data value of the _safeMint method is set to an empty value.\n @dev Can only be called while the open sale is open.\n @param to Address to which to mint the token\n @param numToMint Number of tokens to mint\n @param tokenURI URI assigned to all the minted tokens\n @return The ID of the first token to be minted in the current minting cycle"
            },
            "functionSelector": "d3fc9864",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 100,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 99,
                  "name": "onlyOwnerOrContributor",
                  "nameLocations": [
                    "1872:22:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28240,
                  "src": "1872:22:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1872:22:0"
              }
            ],
            "name": "mint",
            "nameLocation": "1775:4:0",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1797:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1789:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "numToMint",
                  "nameLocation": "1817:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1809:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1809:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "1850:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1836:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1836:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1779:85:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1904:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1903:9:0"
            },
            "scope": 207,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 191,
            "nodeType": "FunctionDefinition",
            "src": "2866:519:0",
            "nodes": [],
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "3048:337:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    156,
                    158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 156,
                      "mutability": "mutable",
                      "name": "nextToken",
                      "nameLocation": "3067:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 190,
                      "src": "3059:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 155,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3059:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "totalSupplyOffset",
                      "nameLocation": "3086:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 190,
                      "src": "3078:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3078:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 162,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 160,
                        "name": "numToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "3120:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 159,
                      "name": "_prepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41229,
                      "src": "3107:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3107:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3058:72:0"
                },
                {
                  "body": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "3194:158:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 171,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "3221:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 172,
                              "name": "tokenURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "3224:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 170,
                            "name": "_setTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41265,
                            "src": "3208:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3208:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "3208:25:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 176,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 142,
                              "src": "3257:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 177,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "3261:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 178,
                              "name": "destinationId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "3264:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3279:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 175,
                            "name": "_nestMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30393,
                            "src": "3247:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,uint256,bytes memory)"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3247:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 181,
                        "nodeType": "ExpressionStatement",
                        "src": "3247:35:0"
                      },
                      {
                        "id": 185,
                        "nodeType": "UncheckedBlock",
                        "src": "3296:46:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "3324:3:0",
                              "subExpression": {
                                "id": 182,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "3326:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 184,
                            "nodeType": "ExpressionStatement",
                            "src": "3324:3:0"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 167,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "3169:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 168,
                      "name": "totalSupplyOffset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "3173:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3169:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 187,
                  "initializationExpression": {
                    "assignments": [
                      164
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 164,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3154:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 187,
                        "src": "3146:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3146:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 166,
                    "initialValue": {
                      "id": 165,
                      "name": "nextToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "3158:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3146:21:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3141:211:0"
                },
                {
                  "expression": {
                    "id": 188,
                    "name": "nextToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 156,
                    "src": "3369:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 154,
                  "id": 189,
                  "nodeType": "Return",
                  "src": "3362:16:0"
                }
              ]
            },
            "documentation": {
              "id": 140,
              "nodeType": "StructuredDocumentation",
              "src": "2241:620:0",
              "text": " @notice Used to mint a desired number of child tokens to a given parent token.\n @dev The \"data\" value of the \"_safeMint\" method is set to an empty value.\n @dev Can only be called while the open sale is open.\n @param to Address of the collection smart contract of the token into which to mint the child token\n @param numToMint Number of tokens to mint\n @param destinationId ID of the token into which to mint the new child token\n @param tokenURI URI assigned to all the minted tokens\n @return The ID of the first token to be minted in the current minting cycle"
            },
            "functionSelector": "0ee2fd65",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 151,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 150,
                  "name": "onlyOwnerOrContributor",
                  "nameLocations": [
                    "3007:22:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28240,
                  "src": "3007:22:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3007:22:0"
              }
            ],
            "name": "nestMint",
            "nameLocation": "2875:8:0",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2901:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2893:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2893:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "numToMint",
                  "nameLocation": "2921:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2913:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2913:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "destinationId",
                  "nameLocation": "2948:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2940:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2940:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "2985:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2971:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2971:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2883:116:0"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "3039:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3039:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3038:9:0"
            },
            "scope": 207,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 206,
            "nodeType": "FunctionDefinition",
            "src": "3391:142:0",
            "nodes": [],
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "3484:49:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 201,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3507:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 202,
                        "name": "tokenURI_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "3516:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 200,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41265,
                      "src": "3494:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:32:0"
                }
              ]
            },
            "functionSelector": "162094c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 198,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 197,
                  "name": "onlyOwnerOrContributor",
                  "nameLocations": [
                    "3461:22:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28240,
                  "src": "3461:22:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3461:22:0"
              }
            ],
            "name": "setTokenURI",
            "nameLocation": "3400:11:0",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3420:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "3412:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3412:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "tokenURI_",
                  "nameLocation": "3443:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "3429:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3429:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3411:42:0"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3484:0:0"
            },
            "scope": 207,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "RMRKAbstractEquippable",
              "nameLocations": [
                "355:22:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41049,
              "src": "355:22:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "355:22:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "RMRKTokenURIPerToken",
              "nameLocations": [
                "379:20:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41266,
              "src": "379:20:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "379:20:0"
          }
        ],
        "canonicalName": "EquipableShip",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          207,
          41266,
          41049,
          33350,
          28541,
          28682,
          34868,
          35078,
          27796,
          28205,
          41230,
          28413,
          28193,
          37419,
          33446
        ],
        "name": "EquipableShip",
        "nameLocation": "338:13:0",
        "scope": 208,
        "usedErrors": [
          33549,
          33552,
          33555,
          33561,
          33564,
          33567,
          33570,
          33573,
          33576,
          33579,
          33582,
          33585,
          33588,
          33594,
          33597,
          33603,
          33606,
          33621,
          33627,
          33630,
          33639,
          33645,
          33648,
          33655,
          33658,
          33661,
          33664,
          33670,
          33673,
          33676,
          33679,
          33682,
          33685,
          33688,
          33691,
          33706,
          33709,
          33712,
          33721,
          33724,
          33742,
          33745,
          33748,
          33751,
          33754,
          33757,
          33763,
          33766,
          33769,
          33772,
          33781,
          37372
        ],
        "usedEvents": [
          27695,
          27704,
          27713,
          28225,
          28232,
          28584,
          28599,
          28608,
          34700,
          34710,
          34719,
          34726,
          34731,
          34740,
          34749,
          34893,
          34904,
          34915,
          34920,
          34935
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 0
}